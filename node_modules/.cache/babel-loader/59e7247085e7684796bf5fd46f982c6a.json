{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/MapLegend.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst MapLegend = props => {\n  _s();\n\n  const {\n    imgInfo\n  } = props;\n  const {\n    levels,\n    cmap\n  } = imgInfo;\n  const [width, setWidth] = useState();\n  const [eachWidth, setEachWidth] = useState();\n  const ref = useRef(null);\n  let color_styles = [];\n  cmap.forEach(color => {\n    color_styles.push({\n      height: \"28px\",\n      backgroundColor: color,\n      opacity: \"0.8\"\n    });\n  });\n  useEffect(() => {\n    if (ref) {\n      const elemWidth = ref.current.offsetWidth;\n      const defaultWidth = cmap.length * 56;\n      setWidth(Math.min(defaultWidth, elemWidth));\n      setEachWidth(Math.min(defaultWidth, elemWidth) / cmap.length);\n    }\n  }, [cmap.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        ref: ref,\n        children: width && /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          padding: \"none\",\n          style: {\n            width: width\n          },\n          \"aria-label\": \"color table\",\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: color_styles.map((cs, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: cs\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: width && /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          padding: \"none\",\n          style: {\n            width: width\n          },\n          \"aria-label\": \"color table\",\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  width: eachWidth / 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 10\n              }, this), levels.map((lv, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                style: {\n                  width: eachWidth\n                },\n                children: lv\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 11\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  width: eachWidth / 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(MapLegend, \"kyZ/HAhtDZhuiklTvZ06U8e5OnU=\");\n\n_c = MapLegend;\nexport default MapLegend;\n/* vertical color bar\n\t\t<TableContainer>\n\t\t\t<Table size=\"small\" padding=\"none\" className={classes.table} aria-label=\"color table\">\n\t\t\t\t<TableBody>\n\t\t\t\t\t<TableRow key=\"first\">\n\t\t\t\t\t\t<TableCell style={color_styles[0]}></TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>&lt;{levels[0]}</TableCell> \n\t\t\t\t\t</TableRow>\n\t\t\t\t\t{levels.map((lvl, i) => (\n\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t<TableCell style={color_styles[i+1]}></TableCell>\n\t\t\t\t\t\t\t{levels[i+1] ?\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>{levels[i]} to {levels[i+1]}</TableCell>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>&ge;{levels[i]}</TableCell>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"MapLegend\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/MapLegend.js"],"names":["React","useEffect","useRef","useState","Table","TableBody","TableCell","TableContainer","TableRow","MapLegend","props","imgInfo","levels","cmap","width","setWidth","eachWidth","setEachWidth","ref","color_styles","forEach","color","push","height","backgroundColor","opacity","elemWidth","current","offsetWidth","defaultWidth","length","Math","min","map","cs","i","lv"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst MapLegend = (props) => {\n\tconst { imgInfo } = props;\n\tconst { levels, cmap } = imgInfo;\n\tconst [ width, setWidth ] = useState();\n\tconst [ eachWidth, setEachWidth ] = useState();\n\tconst ref = useRef(null);\n\n\tlet color_styles = [];\n\tcmap.forEach((color) => {\n\t\tcolor_styles.push( {height: \"28px\", backgroundColor: color, opacity: \"0.8\"} );\n\t})\n\n\tuseEffect(() => {\n\t\tif (ref) {\n\t\t\tconst elemWidth = ref.current.offsetWidth;\n\t\t\tconst defaultWidth = cmap.length * 56;\n\t\t\tsetWidth(Math.min(defaultWidth, elemWidth));\n\t\t\tsetEachWidth(Math.min(defaultWidth, elemWidth)/cmap.length);\n\t\t}\n\t},[cmap.length]);\n\n\treturn (\n\t\t<>\n\t\t\t\t<>\n\t\t\t\t\t<TableContainer ref={ref}>\n\t\t\t{width &&\n\t\t\t\t\t\t<Table size=\"small\" padding=\"none\" style={{width:width}} aria-label=\"color table\">\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t{color_styles.map((cs, i) => (\n\t\t\t\t\t\t\t\t\t\t<TableCell key={i} style={cs}></TableCell>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</TableRow>\t\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n}\n\t\t\t\t\t</TableContainer>\n\n\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t{width &&\n\t\t\t\t\t\t<Table size=\"small\" padding=\"none\" style={{width:width}} aria-label=\"color table\">\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<TableCell style={{width:eachWidth/2}}></TableCell>\n\t\t\t\t\t\t\t\t\t{levels.map((lv, i) => (\n\t\t\t\t\t\t\t\t\t\t<TableCell key={i}align=\"center\" style={{width:eachWidth}}>{lv}</TableCell>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t<TableCell style={{width:eachWidth/2}}></TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\t\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t}\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</>\n\t\t\t\n\t\t</>\n\t);\n}\n\nexport default MapLegend;\n\n/* vertical color bar\n\t\t<TableContainer>\n\t\t\t<Table size=\"small\" padding=\"none\" className={classes.table} aria-label=\"color table\">\n\t\t\t\t<TableBody>\n\t\t\t\t\t<TableRow key=\"first\">\n\t\t\t\t\t\t<TableCell style={color_styles[0]}></TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>&lt;{levels[0]}</TableCell> \n\t\t\t\t\t</TableRow>\n\t\t\t\t\t{levels.map((lvl, i) => (\n\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t<TableCell style={color_styles[i+1]}></TableCell>\n\t\t\t\t\t\t\t{levels[i+1] ?\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>{levels[i]} to {levels[i+1]}</TableCell>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>&ge;{levels[i]}</TableCell>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n*/"]},"metadata":{},"sourceType":"module"}