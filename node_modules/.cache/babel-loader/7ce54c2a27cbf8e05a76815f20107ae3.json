{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/DisplayMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MapGL, { NavigationControl, Popup } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport DisplayRequest from './DisplayRequest';\nconst useStyles = makeStyles(theme => ({\n  downloadButton: {\n    margin: \"1em 0.5em\"\n  },\n  mapImage: {\n    width: \"100%\"\n  }\n}));\n\nconst DisplayMap = props => {\n  _s();\n\n  const {\n    imgsrc,\n    submittedParams\n  } = props;\n  const [showParams, setShowParams] = useState(false);\n  const imgRef = useRef();\n  const mapRef = useRef();\n  const classes = useStyles();\n  const [viewport, setViewPort] = useState({\n    width: \"100%\",\n    height: \"50vh\",\n    latitude: 42.4,\n    longitude: -74.8,\n    zoom: 2\n  });\n  const mapinfo = {\n    token: \"pk.eyJ1Ijoia2xlMSIsImEiOiJjank0b2dmd2swMm02M2NvMGNnY3c4aWNnIn0.GfryAbDLVsqX9Ir24eWlGQ\",\n    mapstyle: \"mapbox://styles/mapbox/streets-v11\"\n  };\n\n  const handleViewportChange = viewport => setViewPort({ ...viewport,\n    transitionDuration: 3000\n  });\n\n  const handleShowParamsClick = () => {\n    setShowParams(prev => !prev);\n  };\n\n  useEffect(() => {\n    imgRef.current.focus();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgsrc,\n      className: classes.mapImage,\n      ref: imgRef,\n      tabIndex: \"0\",\n      alt: \"requested map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MapGL, {\n      ref: mapRef,\n      ...viewport,\n      mapboxApiAccessToken: mapinfo.token,\n      mapStyle: mapinfo.mapstyle,\n      onViewportChange: handleViewportChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      children: \"Download image (png)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      children: \"Download image (geotiff)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      children: \"Download data (json)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      onClick: handleShowParamsClick,\n      children: \"Display request (json)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), showParams && /*#__PURE__*/_jsxDEV(DisplayRequest, {\n      submittedParams: submittedParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DisplayMap, \"E+IzFXBmOcaEfnZy1CfwHTgGwns=\", false, function () {\n  return [useStyles];\n});\n\n_c = DisplayMap;\nexport default DisplayMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayMap\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/DisplayMap.js"],"names":["React","useEffect","useRef","useState","Button","makeStyles","MapGL","NavigationControl","Popup","DisplayRequest","useStyles","theme","downloadButton","margin","mapImage","width","DisplayMap","props","imgsrc","submittedParams","showParams","setShowParams","imgRef","mapRef","classes","viewport","setViewPort","height","latitude","longitude","zoom","mapinfo","token","mapstyle","handleViewportChange","transitionDuration","handleShowParamsClick","prev","current","focus"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MapGL, {NavigationControl, Popup} from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nimport DisplayRequest from './DisplayRequest';\n\nconst useStyles = makeStyles((theme) => ({\n\tdownloadButton: {\n\t\tmargin: \"1em 0.5em\",\n\t},\n\tmapImage: {\n\t\twidth: \"100%\",\n\t}\n}));\n\nconst DisplayMap = (props) => {\n\tconst { imgsrc, submittedParams } = props;\n\tconst [showParams, setShowParams] = useState(false);\n\tconst imgRef = useRef();\n\tconst mapRef = useRef();\n\tconst classes = useStyles();\n\n\tconst [viewport, setViewPort ] = useState({\n\t\twidth: \"100%\",\n    \theight: \"50vh\",\n    \tlatitude: 42.4,\n    \tlongitude: -74.8,\n    \tzoom: 2\n  \t});\n\n\n\tconst mapinfo = {\n\t\ttoken: \"pk.eyJ1Ijoia2xlMSIsImEiOiJjank0b2dmd2swMm02M2NvMGNnY3c4aWNnIn0.GfryAbDLVsqX9Ir24eWlGQ\",\n\t\tmapstyle: \"mapbox://styles/mapbox/streets-v11\",\n  \t}\n\n\tconst handleViewportChange = viewport => setViewPort({...viewport, transitionDuration: 3000 });\n\n\tconst handleShowParamsClick = () => {\n\t\tsetShowParams(prev => !prev);\n\t}\n\n\tuseEffect(() => {\n\t\timgRef.current.focus();\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<img src={imgsrc} className={classes.mapImage} ref={imgRef} tabIndex=\"0\" alt=\"requested map\" />\n\n\n\t<MapGL\n        ref={mapRef}\n        {...viewport}\n        mapboxApiAccessToken={mapinfo.token}\n        mapStyle={mapinfo.mapstyle}\n\t\tonViewportChange={handleViewportChange}\n    >\n    </MapGL>\n\n\n\n\n\t\t\t<Button variant=\"contained\" size=\"small\" className={classes.downloadButton}>Download image (png)</Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" className={classes.downloadButton}>Download image (geotiff)</Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" className={classes.downloadButton}>Download data (json)</Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" className={classes.downloadButton} onClick={handleShowParamsClick}>Display request (json)</Button>\n\t\t\t<br />\n\t\t\t{showParams &&\n\t\t\t\t<DisplayRequest \n\t\t\t\t\tsubmittedParams={submittedParams}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default DisplayMap;"]},"metadata":{},"sourceType":"module"}