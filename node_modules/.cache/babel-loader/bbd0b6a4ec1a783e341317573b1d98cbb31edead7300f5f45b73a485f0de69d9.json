{"ast":null,"code":"import dayjs from 'dayjs';\nimport { elements, maxbbox } from '../utilities/constants';\n\n//const dateDiff = (date1, date2) => {\n//\tconst sdate = date1 instanceof Date ? date1 : new Date(date1);\n//\tconst edate = date2 instanceof Date ? date2 : new Date(date2);\n//\tconst one_day = 1000 * 60 * 60 * 24;\n//\treturn (Math.round((edate.getTime() - sdate.getTime()) / one_day));\n//};\n\n// check bounding box \nconst checkBbox = bbox => {\n  const newbbox = [...bbox];\n  if (bbox[0] < maxbbox.west) {\n    newbbox[0] = maxbbox.west;\n  }\n  if (bbox[1] < maxbbox.south) {\n    newbbox[1] = maxbbox.south;\n  }\n  if (bbox[2] > maxbbox.east) {\n    newbbox[2] = maxbbox.east;\n  }\n  if (bbox[3] > maxbbox.north) {\n    newbbox[3] = maxbbox.north;\n  }\n  return newbbox;\n};\n\n// check point \nconst checkLoc = loc => {\n  const newloc = [...loc];\n  if (loc[0] < maxbbox.west) {\n    newloc[0] = maxbbox.west;\n  }\n  if (loc[1] < maxbbox.south) {\n    newloc[1] = maxbbox.south;\n  }\n  if (loc[0] > maxbbox.east) {\n    newloc[0] = maxbbox.east;\n  }\n  if (loc[1] > maxbbox.north) {\n    newloc[1] = maxbbox.north;\n  }\n  return newloc;\n};\nconst buildParams = input_params => {\n  var duration, newElems;\n  let paramsToSubmit = {\n    grid: input_params.grid,\n    output: input_params.output\n  };\n  console.log(input_params); // for debugging\n\n  if (input_params.edate.length > 7) {\n    // daily interval\n    const date1 = dayjs(input_params.sdate);\n    const date2 = dayjs(input_params.edate);\n    const hrdiff = date2.diff(date1, 'hours');\n    duration = Math.floor(hrdiff / 24) + 1; // difference in days (add 1 for inclusive)\n    newElems = [];\n    input_params.elems.forEach((elem, i) => {\n      newElems.push({\n        ...elem,\n        interval: [0, 0, 1],\n        duration: duration\n      });\n    });\n    paramsToSubmit.elems = newElems;\n    console.log('data1 ' + input_params.sdate + ' date2 ' + input_params.edate + ' difference ', duration, ' days');\n  } else if (input_params.edate === input_params.sdate) {\n    // single month\n    // duration defaults to 1\n    paramsToSubmit.elems = input_params.elems;\n  } else {\n    ;\n    // For \"season\" date selection, calculate duration based on sdate and edate. \n    const mndiff = parseInt(input_params.edate.split(\"-\")[1]) - parseInt(input_params.sdate.split(\"-\")[1]);\n    duration = mndiff + (mndiff >= 0 ? 1 : 13);\n    // Set up nested elements\n    const origElem = input_params.elems[0];\n    newElems = [{\n      elem: origElem,\n      interval: [0, 1],\n      duration: duration,\n      reduce: origElem.reduce\n    }];\n    // Replicate nested elems for all variables, if requested for a single grid point\n    if (origElem.name === 'all') {\n      let nestedElem = {\n        ...newElems[0].elem,\n        name: 'maxt',\n        reduce: elements[0].reduce\n      };\n      newElems[0] = {\n        ...newElems[0],\n        elem: nestedElem,\n        reduce: elements[0].reduce\n      };\n      ['mint', 'avgt', 'pcpn'].forEach((elem, i) => {\n        nestedElem = {\n          ...newElems[0].elem,\n          name: elem,\n          reduce: elements[i + 1].reduce\n        };\n        newElems.push({\n          ...newElems[0],\n          elem: nestedElem,\n          reduce: elements[i + 1].reduce\n        });\n      });\n    }\n    // Add actual elems as modified above to paramenters object\n    paramsToSubmit.elems = newElems;\n  }\n\n  // send just date instead of sdate and edate.\n  const newDate = input_params.elems[0].interval.length === 2 ? input_params.edate.slice(0, 7) : input_params.edate;\n  paramsToSubmit.date = newDate;\n  //console.log(paramsToSubmit)\n\n  // areaDef is type (state, loc, bbox) and value of area of interest.\n  if (input_params.areaDef.bbox) {\n    input_params.areaDef.bbox = input_params.areaDef.bbox.map(x => parseFloat(x));\n    const newbbox = checkBbox(input_params.areaDef.bbox);\n    paramsToSubmit = {\n      ...paramsToSubmit,\n      bbox: newbbox\n    };\n    //console.log(input_params.areaDef.bbox)\n  } else if (input_params.areaDef.loc) {\n    input_params.areaDef.loc = input_params.areaDef.loc.map(x => parseFloat(x));\n    const newloc = checkLoc(input_params.areaDef.loc);\n    paramsToSubmit = {\n      ...paramsToSubmit,\n      loc: newloc\n    };\n  } else if (input_params.areaDef.state) {\n    paramsToSubmit = {\n      ...paramsToSubmit,\n      ...input_params.areaDef\n    };\n  } else {\n    console.log(\"unknown areaDef\");\n  }\n\n  // point location can only be json\n  if (paramsToSubmit.loc) {\n    paramsToSubmit = {\n      ...paramsToSubmit,\n      output: \"json\"\n    };\n  }\n\n  // added image object if png output\n  if (paramsToSubmit.output === 'png') {\n    let newImage = {\n      ...input_params.image\n    };\n    // convert levels string (from Image Settings) to array\n    if (input_params.image.levels && typeof input_params.image.levels === 'string') {\n      const splitLevels = input_params.image.levels.split(\",\");\n      const newLevels = splitLevels.map(x => parseFloat(x));\n      newImage = {\n        ...newImage,\n        levels: newLevels\n      };\n    }\n    // leave off empty levels element\n    if (input_params.image.hasOwnProperty('levels') && (input_params.image.levels === \"\" || input_params.image.levels.length === 0)) {\n      delete newImage.levels;\n      delete newImage.cmap;\n    }\n    if (input_params.image.hasOwnProperty('cmap') && input_params.image.cmap.length === 0) {\n      delete newImage.cmap;\n    }\n    paramsToSubmit = {\n      ...paramsToSubmit,\n      image: newImage\n    };\n  }\n  return paramsToSubmit;\n};\n\n// download a retrieved png image\nconst downloadFile = (href, filename) => {\n  const link = document.createElement('a');\n  link.href = href;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n\n// retrieve and download a geotiff or json file\nconst downloadFetch = (jsonparams, filename, output) => {\n  if (output === 'json') {\n    delete jsonparams.image;\n  }\n  const submitParams = JSON.stringify({\n    ...jsonparams,\n    output: output,\n    meta: \"ll\"\n  });\n  fetch(\"https://grid2.rcc-acis.org/GridData\", {\n    body: submitParams,\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (!response.ok) {\n      console.log(\"Error fetching the results\");\n      return;\n    }\n    return output === 'json' ? response.json() : response.blob();\n  }).then(response => {\n    var blob;\n    if (output === 'json') {\n      const json = JSON.stringify(response);\n      blob = new Blob([json], {\n        type: 'application/json'\n      });\n    } else {\n      blob = response;\n    }\n    const href = window.URL.createObjectURL(blob);\n    downloadFile(href, filename);\n  }).catch(err => {\n    if (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n      console.log(\"Invalid grid request - \" + jsonparams);\n    } else {\n      console.log(err.message);\n    }\n    ;\n  });\n};\nexport { buildParams, checkBbox, downloadFile, downloadFetch };","map":{"version":3,"names":["dayjs","elements","maxbbox","checkBbox","bbox","newbbox","west","south","east","north","checkLoc","loc","newloc","buildParams","input_params","duration","newElems","paramsToSubmit","grid","output","console","log","edate","length","date1","sdate","date2","hrdiff","diff","Math","floor","elems","forEach","elem","i","push","interval","mndiff","parseInt","split","origElem","reduce","name","nestedElem","newDate","slice","date","areaDef","map","x","parseFloat","state","newImage","image","levels","splitLevels","newLevels","hasOwnProperty","cmap","downloadFile","href","filename","link","document","createElement","download","body","appendChild","click","removeChild","downloadFetch","jsonparams","submitParams","JSON","stringify","meta","fetch","method","headers","then","response","ok","json","blob","Blob","type","window","URL","createObjectURL","catch","err","message","includes"],"sources":["/Users/keith/progs/React/ncei-normals-mapper/src/utilities/utils.js"],"sourcesContent":["import dayjs from 'dayjs';\nimport { elements, maxbbox } from '../utilities/constants';\n\n//const dateDiff = (date1, date2) => {\n//\tconst sdate = date1 instanceof Date ? date1 : new Date(date1);\n//\tconst edate = date2 instanceof Date ? date2 : new Date(date2);\n//\tconst one_day = 1000 * 60 * 60 * 24;\n//\treturn (Math.round((edate.getTime() - sdate.getTime()) / one_day));\n//};\n\n// check bounding box \nconst checkBbox = bbox => {\n\tconst newbbox = [...bbox]\n\tif (bbox[0] < maxbbox.west) {\n\t\tnewbbox[0] = maxbbox.west;\n\t}\n\tif (bbox[1] < maxbbox.south) {\n\t\tnewbbox[1] = maxbbox.south;\n\t}\n\tif (bbox[2] > maxbbox.east) {\n\t\tnewbbox[2] = maxbbox.east;\n\t}\n\tif (bbox[3] > maxbbox.north) {\n\t\tnewbbox[3] = maxbbox.north;\n\t}\n\treturn newbbox;\n};\n\n// check point \nconst checkLoc = loc => {\n\tconst newloc = [...loc]\n\tif (loc[0] < maxbbox.west) {\n\t\tnewloc[0] = maxbbox.west;\n\t}\n\tif (loc[1] < maxbbox.south) {\n\t\tnewloc[1] = maxbbox.south;\n\t}\n\tif (loc[0] > maxbbox.east) {\n\t\tnewloc[0] = maxbbox.east;\n\t}\n\tif (loc[1] > maxbbox.north) {\n\t\tnewloc[1] = maxbbox.north;\n\t}\n\treturn newloc;\n};\n\nconst buildParams = (input_params) => {\n\tvar duration, newElems;\n\tlet paramsToSubmit = {grid: input_params.grid, output: input_params.output};\n\tconsole.log(input_params) // for debugging\n\n\tif (input_params.edate.length > 7) {\n\t\t// daily interval\n\t\tconst date1 = dayjs(input_params.sdate);\n\t\tconst date2 = dayjs(input_params.edate);\n\t\tconst hrdiff = date2.diff(date1, 'hours');\n\t\tduration = Math.floor(hrdiff / 24) + 1;\t// difference in days (add 1 for inclusive)\n\t\tnewElems = []\n\t\tinput_params.elems.forEach((elem,i) => {\n\t\t\tnewElems.push({...elem, interval:[0,0,1], duration: duration})\n\t\t})\n\t\tparamsToSubmit.elems = newElems;\n\t\tconsole.log('data1 '+input_params.sdate+' date2 '+input_params.edate+' difference ',duration,' days')\n\t} else if (input_params.edate === input_params.sdate) {\n\t\t// single month\n\t\t// duration defaults to 1\n\t\tparamsToSubmit.elems = input_params.elems\n\t} else {;\n\t\t// For \"season\" date selection, calculate duration based on sdate and edate. \n\t\tconst mndiff = parseInt(input_params.edate.split(\"-\")[1]) - parseInt(input_params.sdate.split(\"-\")[1]);\n\t\tduration = mndiff + (mndiff >= 0 ? 1 : 13);\n\t\t// Set up nested elements\n\t\tconst origElem = input_params.elems[0];\n\t\tnewElems = [\n\t\t\t{\n\t\t\t\telem: origElem, \n\t\t\t\tinterval: [0,1], \n\t\t\t\tduration: duration, \n\t\t\t\treduce: origElem.reduce\n\t\t\t}\n\t\t];\n\t\t// Replicate nested elems for all variables, if requested for a single grid point\n\t\tif (origElem.name === 'all') {\n\t\t\tlet nestedElem = {...newElems[0].elem, name: 'maxt', reduce: elements[0].reduce};\n\t\t\tnewElems[0] = {...newElems[0], elem:nestedElem, reduce: elements[0].reduce};\n\t\t\t['mint','avgt','pcpn'].forEach((elem,i) => {\n\t\t\t\tnestedElem = {...newElems[0].elem, name: elem, reduce: elements[i+1].reduce};\n\t\t\t\tnewElems.push({...newElems[0], elem: nestedElem, reduce: elements[i+1].reduce});\n\t\t\t});\n\t\t}\n\t\t// Add actual elems as modified above to paramenters object\n\t\tparamsToSubmit.elems = newElems;\n\t}\n\n\t// send just date instead of sdate and edate.\n\tconst newDate = input_params.elems[0].interval.length === 2 ? input_params.edate.slice(0, 7) : input_params.edate;\n\tparamsToSubmit.date = newDate;\n\t//console.log(paramsToSubmit)\n\n\t// areaDef is type (state, loc, bbox) and value of area of interest.\n\tif (input_params.areaDef.bbox) {\n\t\tinput_params.areaDef.bbox = input_params.areaDef.bbox.map(x => parseFloat(x))\n\t\tconst newbbox = checkBbox(input_params.areaDef.bbox);\n\t\tparamsToSubmit = {...paramsToSubmit, bbox: newbbox};\n\t\t//console.log(input_params.areaDef.bbox)\n\t} else if (input_params.areaDef.loc) {\n\t\tinput_params.areaDef.loc = input_params.areaDef.loc.map(x => parseFloat(x))\n\t\tconst newloc = checkLoc(input_params.areaDef.loc);\n\t\tparamsToSubmit = {...paramsToSubmit, loc: newloc};\n\t} else if (input_params.areaDef.state) {\n\t\tparamsToSubmit = {...paramsToSubmit, ...input_params.areaDef};\n\t} else {\n\t\tconsole.log(\"unknown areaDef\");\n\t}\n\t\n\t// point location can only be json\n\tif (paramsToSubmit.loc) {\n\t\tparamsToSubmit = {...paramsToSubmit, output: \"json\"};\n\t}\n\n\t// added image object if png output\n\tif (paramsToSubmit.output === 'png') {\n\t\tlet newImage = {...input_params.image};\n\t\t// convert levels string (from Image Settings) to array\n\t\tif (input_params.image.levels && typeof input_params.image.levels === 'string') {\n\t\t\tconst splitLevels = input_params.image.levels.split(\",\");\n\t\t\tconst newLevels = splitLevels.map(x => parseFloat(x));\n\t\t\tnewImage = {...newImage, levels: newLevels};\n\t\t}\n\t\t// leave off empty levels element\n\t\tif (input_params.image.hasOwnProperty('levels') && (input_params.image.levels === \"\" || input_params.image.levels.length === 0)) {\n\t\t\tdelete newImage.levels;\n\t\t\tdelete newImage.cmap;\n\t\t}\n\t\tif (input_params.image.hasOwnProperty('cmap') && input_params.image.cmap.length === 0) {\n\t\t\tdelete newImage.cmap;\n\t\t}\n\n\t\tparamsToSubmit = {...paramsToSubmit, image: newImage};\n\t}\n\n\treturn paramsToSubmit;\t\n};\n\n// download a retrieved png image\nconst downloadFile = (href, filename) => {\n\tconst link = document.createElement('a');\n\tlink.href = href;\n\tlink.download = filename;\n\tdocument.body.appendChild(link);\n\tlink.click();\n\tdocument.body.removeChild(link);\n};\n\n// retrieve and download a geotiff or json file\nconst downloadFetch = (jsonparams, filename, output) => {\n\tif (output === 'json') {\n\t\tdelete jsonparams.image;\n\t}\n\tconst submitParams = JSON.stringify({...jsonparams, output:output, meta:\"ll\"});\n\tfetch(\"https://grid2.rcc-acis.org/GridData\", {body: submitParams, method: \"POST\", headers: {'Content-Type': 'application/json'}})\n\t\t.then(response => {\n\t\t\tif (!response.ok) {\n\t\t\t\tconsole.log(\"Error fetching the results\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn output === 'json' ? response.json() : response.blob();\n\t\t})\n\t\t.then(response => {\n\t\t\tvar blob;\n\t\t\tif (output === 'json') {\n\t\t\t\tconst json = JSON.stringify(response);\n  \t\t\t\tblob = new Blob([json], {type:'application/json'});\n\t\t\t} else {\n\t\t\t\tblob = response;\n\t\t\t}\n\t\t\tconst href = window.URL.createObjectURL(blob);\n\t\t\tdownloadFile(href, filename)\n\t\t})\n\t\t.catch(err => {\n\t\t\tif (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n\t\t\t\tconsole.log(\"Invalid grid request - \"+jsonparams);\n\t\t\t} else {\n\t\t\t\tconsole.log(err.message);\n\t\t\t};\n\t\t});\n};\n\nexport { buildParams, checkBbox, downloadFile, downloadFetch };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}