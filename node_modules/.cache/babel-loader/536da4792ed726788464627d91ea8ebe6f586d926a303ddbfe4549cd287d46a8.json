{"ast":null,"code":"var _jsxFileName = \"/Users/keith/git/ncei-normals-mapper/src/components/RenderDate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport { makeStyles } from '@mui/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { months } from '../utilities/constants';\n\n// This component was modified from the original to only allow month selection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  menuitem: {\n    paddingTop: \"1px\",\n    paddingBottom: \"1px\"\n  }\n}));\nconst RenderDate = props => {\n  _s();\n  const {\n    dateLegend,\n    dateParam,\n    id\n  } = props;\n  const inputContext = useContext(InputParamsContext);\n  const [, initMonth] = inputContext.inputParams[dateParam === 'date' ? 'edate' : dateParam].split(\"-\");\n  const [selectMonth, setSelectMonth] = useState(initMonth);\n  const classes = useStyles();\n  const updateDate = newMonth => {\n    const newdate = [\"1991\", newMonth].join(\"-\");\n    if (dateParam === 'date') {\n      inputContext.updateInputParams({\n        sdate: newdate,\n        edate: newdate\n      });\n    } else {\n      inputContext.updateInputParams({\n        [dateParam]: newdate\n      });\n    }\n  };\n  const handleChangeMonth = () => event => {\n    const newMonth = event.target.value;\n    setSelectMonth(newMonth);\n    updateDate(newMonth);\n  };\n  const serialMonthOptions = () => {\n    return months.map((option, i) => {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        className: classes.menuitem,\n        value: (\"0\" + (i + 1)).slice(-2),\n        children: option\n      }, \"m\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      value: selectMonth,\n      label: dateLegend,\n      id: id,\n      onChange: handleChangeMonth(),\n      margin: \"dense\",\n      variant: \"outlined\",\n      SelectProps: {\n        native: false\n      },\n      inputProps: {\n        \"id\": id\n      },\n      children: serialMonthOptions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n_s(RenderDate, \"gTfmrxYhHlRZdpGuQqB/fCgEh2s=\", false, function () {\n  return [useStyles];\n});\n_c = RenderDate;\nexport default RenderDate;\nvar _c;\n$RefreshReg$(_c, \"RenderDate\");","map":{"version":3,"names":["React","useState","useContext","TextField","MenuItem","makeStyles","InputParamsContext","months","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","menuitem","paddingTop","paddingBottom","RenderDate","props","_s","dateLegend","dateParam","id","inputContext","initMonth","inputParams","split","selectMonth","setSelectMonth","classes","updateDate","newMonth","newdate","join","updateInputParams","sdate","edate","handleChangeMonth","event","target","value","serialMonthOptions","map","option","i","className","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","select","label","onChange","margin","variant","SelectProps","native","inputProps","_c","$RefreshReg$"],"sources":["/Users/keith/git/ncei-normals-mapper/src/components/RenderDate.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport { makeStyles } from '@mui/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { months } from '../utilities/constants';\n\n// This component was modified from the original to only allow month selection\n\nconst useStyles = makeStyles((theme) => ({\n\tmenuitem: {\n\t\tpaddingTop: \"1px\",\n\t\tpaddingBottom: \"1px\",\n\t},\n}));\n\nconst RenderDate = (props) => {\n\tconst { dateLegend, dateParam, id } = props;\n\tconst inputContext = useContext(InputParamsContext);\n\tconst [, initMonth] = inputContext.inputParams[dateParam === 'date' ? 'edate' : dateParam].split(\"-\");\n\tconst [selectMonth, setSelectMonth] = useState(initMonth);\n\tconst classes = useStyles();\n\n\tconst updateDate = (newMonth) => {\n\t\tconst newdate = [\"1991\", newMonth].join(\"-\");\n\t\tif (dateParam === 'date') {\n\t\t\tinputContext.updateInputParams({sdate:newdate, edate:newdate});\n\t\t} else {\n\t\t\tinputContext.updateInputParams({[dateParam]:newdate});\n\t\t}\n\t};\n\t\n\tconst handleChangeMonth = () => event => {\n\t\tconst newMonth = event.target.value;\n\t\tsetSelectMonth(newMonth);\n\t\tupdateDate(newMonth);\n\t};\n\n\tconst serialMonthOptions = () => {\n\t\treturn (\n\t\t\tmonths.map((option,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem \n\t\t\t\t\t\tkey={\"m\"+i} \n\t\t\t\t\t\tclassName={classes.menuitem}\n\t\t\t\t\t\tvalue={(\"0\" + (i+1)).slice(-2)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t)\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n  \t\t\t<TextField\n\t\t\t\tselect\n\t\t\t\tvalue={selectMonth}\n\t\t\t\tlabel={dateLegend}\n\t\t\t\tid={id}\n\t\t\t\tonChange={handleChangeMonth()}\n\t\t\t\tmargin=\"dense\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\tinputProps={{ \"id\":id }}\n\t\t\t>\n\t\t\t\t{serialMonthOptions()}\n\t\t\t</TextField>\n\t\t</>\n\t)\n}\nexport default RenderDate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}