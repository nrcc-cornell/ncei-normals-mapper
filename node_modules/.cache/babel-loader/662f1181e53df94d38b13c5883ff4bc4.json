{"ast":null,"code":"import _defineProperty from\"/Users/kle1/progs/React/ncei-normals-mapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/kle1/progs/React/ncei-normals-mapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useContext}from'react';import TextField from'@material-ui/core/TextField';import MenuItem from'@material-ui/core/MenuItem';import{makeStyles}from'@material-ui/core/styles';import InputParamsContext from'./InputParamsContext';import{months}from'../utilities/constants';// This component was modified from the original to only allow month selection\nvar useStyles=makeStyles(function(theme){return{menuitem:{paddingTop:\"1px\",paddingBottom:\"1px\"}};});var RenderDate=function RenderDate(props){var dateLegend=props.dateLegend,dateParam=props.dateParam,id=props.id;var inputContext=useContext(InputParamsContext);var _inputContext$inputPa=inputContext.inputParams[dateParam==='date'?'edate':dateParam].split(\"-\"),_inputContext$inputPa2=_slicedToArray(_inputContext$inputPa,2),initMonth=_inputContext$inputPa2[1];var _useState=useState(initMonth),_useState2=_slicedToArray(_useState,2),selectMonth=_useState2[0],setSelectMonth=_useState2[1];var classes=useStyles();var updateDate=function updateDate(newMonth){var newdate=[\"2019\",newMonth].join(\"-\");if(dateParam==='date'){inputContext.updateInputParams({sdate:newdate,edate:newdate});}else{inputContext.updateInputParams(_defineProperty({},dateParam,newdate));}};var handleChangeMonth=function handleChangeMonth(){return function(event){var newMonth=event.target.value;setSelectMonth(newMonth);updateDate(newMonth);};};var serialMonthOptions=function serialMonthOptions(){return months.map(function(option,i){return/*#__PURE__*/_jsx(MenuItem,{className:classes.menuitem,value:(\"0\"+(i+1)).slice(-2),children:option},\"m\"+i);});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(TextField,{select:true,value:selectMonth,label:dateLegend,id:id,onChange:handleChangeMonth(),margin:\"normal\",variant:\"outlined\",SelectProps:{native:false},inputProps:{\"id\":id},children:serialMonthOptions()})});};export default RenderDate;","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/RenderDate.js"],"names":["React","useState","useContext","TextField","MenuItem","makeStyles","InputParamsContext","months","useStyles","theme","menuitem","paddingTop","paddingBottom","RenderDate","props","dateLegend","dateParam","id","inputContext","inputParams","split","initMonth","selectMonth","setSelectMonth","classes","updateDate","newMonth","newdate","join","updateInputParams","sdate","edate","handleChangeMonth","event","target","value","serialMonthOptions","map","option","i","slice","native"],"mappings":"saAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,OAASC,MAAT,KAAuB,wBAAvB,CAEA;AAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,SAACI,KAAD,QAAY,CACxCC,QAAQ,CAAE,CACTC,UAAU,CAAE,KADH,CAETC,aAAa,CAAE,KAFN,CAD8B,CAAZ,EAAD,CAA5B,CAOA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,IACrBC,CAAAA,UADqB,CACSD,KADT,CACrBC,UADqB,CACTC,SADS,CACSF,KADT,CACTE,SADS,CACEC,EADF,CACSH,KADT,CACEG,EADF,CAE7B,GAAMC,CAAAA,YAAY,CAAGhB,UAAU,CAACI,kBAAD,CAA/B,CAF6B,0BAGPY,YAAY,CAACC,WAAb,CAAyBH,SAAS,GAAK,MAAd,CAAuB,OAAvB,CAAiCA,SAA1D,EAAqEI,KAArE,CAA2E,GAA3E,CAHO,gEAGpBC,SAHoB,yCAISpB,QAAQ,CAACoB,SAAD,CAJjB,wCAItBC,WAJsB,eAITC,cAJS,eAK7B,GAAMC,CAAAA,OAAO,CAAGhB,SAAS,EAAzB,CAEA,GAAMiB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,CAAc,CAChC,GAAMC,CAAAA,OAAO,CAAG,CAAC,MAAD,CAASD,QAAT,EAAmBE,IAAnB,CAAwB,GAAxB,CAAhB,CACA,GAAIZ,SAAS,GAAK,MAAlB,CAA0B,CACzBE,YAAY,CAACW,iBAAb,CAA+B,CAACC,KAAK,CAACH,OAAP,CAAgBI,KAAK,CAACJ,OAAtB,CAA/B,EACA,CAFD,IAEO,CACNT,YAAY,CAACW,iBAAb,oBAAiCb,SAAjC,CAA4CW,OAA5C,GACA,CACD,CAPD,CASA,GAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,SAAM,UAAAC,KAAK,CAAI,CACxC,GAAMP,CAAAA,QAAQ,CAAGO,KAAK,CAACC,MAAN,CAAaC,KAA9B,CACAZ,cAAc,CAACG,QAAD,CAAd,CACAD,UAAU,CAACC,QAAD,CAAV,CACA,CAJyB,EAA1B,CAMA,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAChC,MACC7B,CAAAA,MAAM,CAAC8B,GAAP,CAAW,SAACC,MAAD,CAAQC,CAAR,CAAc,CACxB,mBACC,KAAC,QAAD,EAEC,SAAS,CAAEf,OAAO,CAACd,QAFpB,CAGC,KAAK,CAAE,CAAC,KAAO6B,CAAC,CAAC,CAAT,CAAD,EAAcC,KAAd,CAAoB,CAAC,CAArB,CAHR,UAKEF,MALF,EACM,IAAIC,CADV,CADD,CASA,CAVD,CADD,CAaA,CAdD,CAgBA,mBACC,sCACG,KAAC,SAAD,EACD,MAAM,KADL,CAED,KAAK,CAAEjB,WAFN,CAGD,KAAK,CAAEP,UAHN,CAID,EAAE,CAAEE,EAJH,CAKD,QAAQ,CAAEe,iBAAiB,EAL1B,CAMD,MAAM,CAAC,QANN,CAOD,OAAO,CAAC,UAPP,CAQD,WAAW,CAAE,CAAES,MAAM,CAAE,KAAV,CARZ,CASD,UAAU,CAAE,CAAE,KAAKxB,EAAP,CATX,UAWAmB,kBAAkB,EAXlB,EADH,EADD,CAiBA,CAvDD,CAwDA,cAAevB,CAAAA,UAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { months } from '../utilities/constants';\n\n// This component was modified from the original to only allow month selection\n\nconst useStyles = makeStyles((theme) => ({\n\tmenuitem: {\n\t\tpaddingTop: \"1px\",\n\t\tpaddingBottom: \"1px\",\n\t},\n}));\n\nconst RenderDate = (props) => {\n\tconst { dateLegend, dateParam, id } = props;\n\tconst inputContext = useContext(InputParamsContext);\n\tconst [, initMonth] = inputContext.inputParams[dateParam === 'date' ? 'edate' : dateParam].split(\"-\");\n\tconst [selectMonth, setSelectMonth] = useState(initMonth);\n\tconst classes = useStyles();\n\n\tconst updateDate = (newMonth) => {\n\t\tconst newdate = [\"2019\", newMonth].join(\"-\");\n\t\tif (dateParam === 'date') {\n\t\t\tinputContext.updateInputParams({sdate:newdate, edate:newdate});\n\t\t} else {\n\t\t\tinputContext.updateInputParams({[dateParam]:newdate});\n\t\t}\n\t};\n\t\n\tconst handleChangeMonth = () => event => {\n\t\tconst newMonth = event.target.value;\n\t\tsetSelectMonth(newMonth);\n\t\tupdateDate(newMonth);\n\t};\n\n\tconst serialMonthOptions = () => {\n\t\treturn (\n\t\t\tmonths.map((option,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem \n\t\t\t\t\t\tkey={\"m\"+i} \n\t\t\t\t\t\tclassName={classes.menuitem}\n\t\t\t\t\t\tvalue={(\"0\" + (i+1)).slice(-2)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t)\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n  \t\t\t<TextField\n\t\t\t\tselect\n\t\t\t\tvalue={selectMonth}\n\t\t\t\tlabel={dateLegend}\n\t\t\t\tid={id}\n\t\t\t\tonChange={handleChangeMonth()}\n\t\t\t\tmargin=\"normal\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\tinputProps={{ \"id\":id }}\n\t\t\t>\n\t\t\t\t{serialMonthOptions()}\n\t\t\t</TextField>\n\t\t</>\n\t)\n}\nexport default RenderDate;\n"]},"metadata":{},"sourceType":"module"}