{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-leaflet/src/components/PointSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoAdornment from './InfoAdornment';\nimport { infoText } from '../utilities/constants';\nimport InputParamsContext from './InputParamsContext';\nconst useStyles = makeStyles(theme => ({\n  locInputLabel: {\n    color: \"rgba(0,0,0,0.87)\"\n  },\n  locFormControl: {\n    width: \"30%\",\n    marginRight: \"0.5em\"\n  },\n  locTitle: {\n    marginBottom: \"0.75em\"\n  },\n  inputAdornmentClass: {\n    display: \"inline-flex\",\n    verticalAlign: \"text-bottom\"\n  }\n}));\n\nconst PointSelect = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext);\n  const [loc, setLoc] = useState(['', '']);\n  const classes = useStyles();\n\n  const handleChange = (event, index) => {\n    const newLoc = loc;\n    let newValue = event.target.value;\n\n    if (index === 0 && newValue > 0) {\n      newValue = newValue * -1.0;\n    }\n\n    newLoc[index] = newValue;\n    setLoc(newLoc);\n    inputContext.updateInputParams({\n      areaDef: {\n        loc: newLoc\n      }\n    });\n  };\n\n  useEffect(() => {\n    inputContext.updateInputParams({\n      areaDef: {\n        loc: ['', '']\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      size: \"small\",\n      className: classes.locTitle,\n      children: /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Specify point in decimal degrees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.locFormControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"locInputW\",\n        className: classes.locInputLabel,\n        children: \"Longitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: loc[0],\n        id: \"ptlon\",\n        label: \"Longitude\",\n        onChange: event => handleChange(event, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.locFormControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"locInputS\",\n        className: classes.locInputLabel,\n        children: \"Latitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: loc[1],\n        id: \"ptlat\",\n        label: \"Latitude\",\n        onChange: event => handleChange(event, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoAdornment, {\n      content: infoText.loc,\n      inputAdornmentClass: classes.inputAdornmentClass,\n      edge: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PointSelect, \"cD53n6XujUVrRZwv8bNfy1jLAIE=\", false, function () {\n  return [useStyles];\n});\n\n_c = PointSelect;\nexport default PointSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"PointSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-leaflet/src/components/PointSelect.js"],"names":["React","useState","useContext","useEffect","OutlinedInput","InputLabel","FormLabel","FormControl","makeStyles","InfoAdornment","infoText","InputParamsContext","useStyles","theme","locInputLabel","color","locFormControl","width","marginRight","locTitle","marginBottom","inputAdornmentClass","display","verticalAlign","PointSelect","inputContext","loc","setLoc","classes","handleChange","event","index","newLoc","newValue","target","value","updateInputParams","areaDef"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoAdornment from './InfoAdornment';\nimport { infoText } from '../utilities/constants';\nimport InputParamsContext from './InputParamsContext';\n\nconst useStyles = makeStyles((theme) => ({\n\tlocInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n    },\n    locFormControl: {\n        width: \"30%\",\n        marginRight: \"0.5em\",\n    },\n    locTitle: {\n        marginBottom: \"0.75em\",\n    },\n    inputAdornmentClass: {\n        display: \"inline-flex\",\n        verticalAlign: \"text-bottom\",\n    }\n}));\n\nconst PointSelect = () => {\n    const inputContext = useContext(InputParamsContext);\n    const [loc, setLoc] = useState(['','']);\n    const classes = useStyles();\n\n    const handleChange = (event, index) => {\n        const newLoc = loc;\n        let newValue = event.target.value;\n        if (index === 0 && newValue > 0) {\n            newValue = newValue * -1.0\n        }\n        newLoc[index] = newValue;\n\t\tsetLoc(newLoc);\n\t\tinputContext.updateInputParams({areaDef: {loc:newLoc}});\t\n    };\n    \n    useEffect(() => {\n        inputContext.updateInputParams({areaDef: {loc:['','']}});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <>\n            <FormControl size=\"small\" className={classes.locTitle}>\n                <FormLabel>Specify point in decimal degrees:</FormLabel>\n            </FormControl>\n            <br />\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.locFormControl}>\n                <InputLabel htmlFor=\"locInputW\" className={classes.locInputLabel}>Longitude</InputLabel>\n                <OutlinedInput\n                    value={loc[0]}\n                    id=\"ptlon\"\n                    label=\"Longitude\"\n                    onChange={(event) => handleChange(event, 0)}\n                />\n             </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.locFormControl}>\n                <InputLabel htmlFor=\"locInputS\" className={classes.locInputLabel}>Latitude</InputLabel>\n                <OutlinedInput\n                    value={loc[1]}\n                    id=\"ptlat\"\n                    label=\"Latitude\"\n                    onChange={(event) => handleChange(event, 1)}\n                />\n            </FormControl>\n\n             <InfoAdornment \n                content={infoText.loc} \n                inputAdornmentClass={classes.inputAdornmentClass} \n                edge=\"start\"\n            />\n        </>\n        );\n    }\n\nexport default PointSelect;\n"]},"metadata":{},"sourceType":"module"}