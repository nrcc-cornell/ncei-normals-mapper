{"ast":null,"code":"import _slicedToArray from\"/Users/kle1/progs/React/ncei-normals-mapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useEffect,useState,useContext}from\"react\";import CircularProgress from\"@material-ui/core/CircularProgress\";import InputParamsContext from'./InputParamsContext';import{buildParams}from'../utilities/utils';import MapTitle from'./MapTitle';import DisplayMap from\"./DisplayMap\";import DisplayJson from\"./DisplayJson\";var GetResults=function GetResults(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),mapBlob=_useState2[0],setMapBlob=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),jsonresp=_useState4[0],setJsonresp=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),resultsError=_useState6[0],setResultsError=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),submittedParams=_useState10[0],setSubmittedParams=_useState10[1];var inputContext=useContext(InputParamsContext);var fetchResults=function fetchResults(jsonparams,output){fetch(\"https://grid2.rcc-acis.org/GridData\",{body:jsonparams,method:\"POST\"}).then(function(response){if(!response.ok){setResultsError(\"Error fetching the results\");return;}return output==='gif'?response.blob():response.json();}).then(function(response){if(output==='gif'){setMapBlob(URL.createObjectURL(response));}else{setJsonresp(response.data);}}).catch(function(err){if(err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")){setResultsError(\"Invalid grid request - \"+jsonparams);}else{setResultsError(err.message);};}).finally(function(){setLoading(false);});};useEffect(function(){setLoading(true);// Build parameters\nvar input=buildParams(inputContext.inputParams);var jsonparams=JSON.stringify(input,null,2);setSubmittedParams(jsonparams);// Get results\nfetchResults(jsonparams,input.output);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[inputContext.inputParams]);return/*#__PURE__*/_jsxs(_Fragment,{children:[loading&&/*#__PURE__*/_jsx(CircularProgress,{}),submittedParams&&(jsonresp||mapBlob)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MapTitle,{}),mapBlob&&/*#__PURE__*/_jsx(DisplayMap,{imgsrc:mapBlob,submittedParams:submittedParams}),jsonresp&&/*#__PURE__*/_jsx(DisplayJson,{jsonresp:jsonresp,submittedParams:submittedParams})]}),resultsError&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",resultsError]})]});};export default GetResults;","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/GetResults.js"],"names":["React","useEffect","useState","useContext","CircularProgress","InputParamsContext","buildParams","MapTitle","DisplayMap","DisplayJson","GetResults","mapBlob","setMapBlob","jsonresp","setJsonresp","resultsError","setResultsError","loading","setLoading","submittedParams","setSubmittedParams","inputContext","fetchResults","jsonparams","output","fetch","body","method","then","response","ok","blob","json","URL","createObjectURL","data","catch","err","message","includes","finally","input","inputParams","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext} from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputParamsContext from './InputParamsContext';\nimport { buildParams } from '../utilities/utils';\nimport MapTitle from './MapTitle';\nimport DisplayMap from \"./DisplayMap\";\nimport DisplayJson from \"./DisplayJson\";\n\nconst GetResults = () => {\n\tconst [mapBlob, setMapBlob] = useState();\n\tconst [jsonresp, setJsonresp] = useState();\n\tconst [resultsError, setResultsError] = useState();\n\tconst [loading, setLoading] = useState(false);\n\tconst [submittedParams, setSubmittedParams] = useState();\n\tconst inputContext = useContext(InputParamsContext);\n\n\tconst fetchResults = (jsonparams, output) => {\n\t\tfetch(\"https://grid2.rcc-acis.org/GridData\", {body: jsonparams, method: \"POST\"})\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tsetResultsError(\"Error fetching the results\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn output === 'gif' ? response.blob() : response.json();\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (output === 'gif') {\n\t\t\t\t\tsetMapBlob(URL.createObjectURL(response));\n\t\t\t\t} else {\n\t\t\t\t\tsetJsonresp(response.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n\t\t\t\t\tsetResultsError(\"Invalid grid request - \"+jsonparams);\n\t\t\t\t} else {\n\t\t\t\t\tsetResultsError(err.message);\n\t\t\t\t};\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\t// Build parameters\n\t\tconst input = buildParams(inputContext.inputParams);\n\t\tconst jsonparams = JSON.stringify(input, null, 2);\n\t\tsetSubmittedParams(jsonparams);\n\t\t// Get results\n\t\tfetchResults(jsonparams, input.output);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [inputContext.inputParams]);\n\n\treturn (\n\t\t<>\n\t\t\t{loading &&\n\t\t\t\t<CircularProgress />\n\t\t\t}\n\t\t\t{submittedParams && (jsonresp || mapBlob) &&\n\t\t\t\t<>\n\t\t\t\t\t<MapTitle />\n\t\t\t\t\t{mapBlob &&\n\t\t\t\t\t\t<DisplayMap \n\t\t\t\t\t\t\timgsrc={mapBlob}\n\t\t\t\t\t\t\tsubmittedParams={submittedParams}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t{jsonresp &&\n\t\t\t\t\t\t<DisplayJson\n\t\t\t\t\t\t\tjsonresp={jsonresp}\n\t\t\t\t\t\t\tsubmittedParams={submittedParams}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{resultsError &&\n\t\t\t\t<p>Error: {resultsError}</p>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default GetResults;"]},"metadata":{},"sourceType":"module"}