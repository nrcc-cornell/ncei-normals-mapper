{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/AreaSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport RegionSelect from './RegionSelect';\nimport StateSelect from './StateSelect';\nimport BboxSelect from './BboxSelect';\nconst useStyles = makeStyles(theme => ({\n  areaContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    borderTop: \"0\",\n    padding: \"1em 1em\"\n  },\n  radioButton: {\n    color: \"midnightblue !important\",\n    paddingRight: \"3px\"\n  },\n  formControl: {\n    marginTop: \"0.5em\",\n    marginBottom: \"1em\"\n  },\n  selected: {\n    backgroundColor: \"white !important\",\n    color: \"midnightblue !important\"\n  },\n  notselected: {\n    backgroundColor: \"midnightblue\",\n    color: \"white\"\n  }\n}));\n\nconst AreaSelect = () => {\n  _s();\n\n  const [areaType, setAreaType] = useState(\"state\");\n  const inputContext = useContext(InputParamsContext);\n  const classes = useStyles();\n\n  const handleTypeChange = event => {\n    const newAreaType = event.target.value;\n    setAreaType(newAreaType);\n    inputContext.updateInputParams({\n      areaType: newAreaType\n    });\n  };\n\n  const handleTypeChangeb = (event, newAreaType) => {\n    if (newAreaType !== null) {\n      setAreaType(newAreaType);\n      inputContext.updateInputParams({\n        areaType: newAreaType\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.areaContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Select area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Area type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"area type\",\n        name: \"areatype\",\n        value: areaType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"state\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 47\n          }, this),\n          label: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"region\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 48\n          }, this),\n          label: \"Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"bbox\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 46\n          }, this),\n          label: \"Bounding Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      value: areaType,\n      exclusive: true,\n      onChange: handleTypeChangeb,\n      \"aria-label\": \"area selection\",\n      size: \"small\",\n      style: {\n        marginBottom: \"1em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"state\",\n        \"aria-label\": \"state\",\n        className: areaType === \"state\" ? classes.selected : classes.notselected,\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"region\",\n        \"aria-label\": \"region\",\n        children: \"Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"bbox\",\n        \"aria-label\": \"bounding box\",\n        children: \"Bounding Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), areaType === 'state' && /*#__PURE__*/_jsxDEV(StateSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), areaType === 'region' && /*#__PURE__*/_jsxDEV(RegionSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), areaType === 'bbox' && /*#__PURE__*/_jsxDEV(BboxSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AreaSelect, \"c+4R9i1Ni+KSRunERMeBC5tyopg=\", false, function () {\n  return [useStyles];\n});\n\n_c = AreaSelect;\nexport default AreaSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/AreaSelect.js"],"names":["React","useState","useContext","Typography","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","ToggleButton","ToggleButtonGroup","makeStyles","InputParamsContext","RegionSelect","StateSelect","BboxSelect","useStyles","theme","areaContainer","borderLeft","borderRight","borderBottom","borderTop","padding","radioButton","color","paddingRight","formControl","marginTop","marginBottom","selected","backgroundColor","notselected","AreaSelect","areaType","setAreaType","inputContext","classes","handleTypeChange","event","newAreaType","target","value","updateInputParams","handleTypeChangeb"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport RegionSelect from './RegionSelect';\nimport StateSelect from './StateSelect';\nimport BboxSelect from './BboxSelect';\n\nconst useStyles = makeStyles((theme) => ({\n\tareaContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tborderTop: \"0\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tradioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpaddingRight: \"3px\",\n\t},\n\tformControl: {\n\t\tmarginTop: \"0.5em\",\n\t\tmarginBottom: \"1em\",\n\t},\n\tselected: {\n\t\tbackgroundColor: \"white !important\",\n\t\tcolor: \"midnightblue !important\"\n\t},\n\tnotselected: {\n\t\tbackgroundColor: \"midnightblue\",\n\t\tcolor: \"white\"\n\t}\n}));\n\nconst AreaSelect = () => {\n\tconst [areaType, setAreaType] = useState(\"state\");\n\tconst inputContext = useContext(InputParamsContext);\n\tconst classes = useStyles();\n\n\tconst handleTypeChange = (event) => {\n\t\tconst newAreaType = event.target.value;\n\t\tsetAreaType(newAreaType);\n\t\tinputContext.updateInputParams({areaType:newAreaType});\t\n\t};\n\n\tconst handleTypeChangeb = (event, newAreaType) => {\n\t\tif (newAreaType !== null) {\n\t\t\tsetAreaType(newAreaType);\n\t\t\tinputContext.updateInputParams({areaType: newAreaType});\t\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.areaContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect area\n\t\t\t</Typography>\n\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Area type:</FormLabel>\n\t\t\t\t<RadioGroup row aria-label=\"area type\" name=\"areatype\" value={areaType} onChange={handleTypeChange}>\n\t\t\t\t\t<FormControlLabel value=\"state\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"State\" />\n\t\t\t\t\t<FormControlLabel value=\"region\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Region\" />\n\t\t\t\t\t<FormControlLabel value=\"bbox\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Bounding Box\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t<ToggleButtonGroup\n            value={areaType}\n            exclusive\n            onChange={handleTypeChangeb}\n\t\t\taria-label=\"area selection\"\n\t\t\tsize=\"small\" \n\t\t\tstyle={{marginBottom:\"1em\"}}\n\t\t\n          >\n            <ToggleButton value=\"state\" aria-label=\"state\" className={\n                  areaType === \"state\"\n                    ? classes.selected\n                    : classes.notselected\n                }>\n              State\n            </ToggleButton>\n            <ToggleButton value=\"region\" aria-label=\"region\">\n              Region\n            </ToggleButton>\n            <ToggleButton value=\"bbox\" aria-label=\"bounding box\">\n              Bounding Box\n            </ToggleButton>\n          </ToggleButtonGroup>\n\n\t\t\t{areaType === 'state' &&\n\t\t\t\t<StateSelect />\n\t\t\t}\n\t\t\t{areaType === 'region' &&\n\t\t\t\t<RegionSelect />\n\t\t\t}\n\t\t\t{areaType === 'bbox' &&\n\t\t\t\t<BboxSelect />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default AreaSelect;"]},"metadata":{},"sourceType":"module"}