{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/DisplayJson.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { elementNames } from '../utilities/constants';\nimport DisplayRequest from './DisplayRequest';\nconst useStyles = makeStyles(theme => ({\n  resContainer: {\n    display: \"inline-block\",\n    padding: \"0 1em\",\n    margin: \"0 0 0.5em\"\n  },\n  downloadButton: {\n    margin: \"1em 0.5em\"\n  }\n}));\n\nconst DisplayJson = props => {\n  _s();\n\n  const {\n    jsonresp,\n    submittedParams\n  } = props;\n  const [showParams, setShowParams] = useState(false);\n  const classes = useStyles();\n  const eNames = elementNames();\n  const sElems = [{\n    name: 'date'\n  }, ...JSON.parse(submittedParams).elems];\n\n  const handleShowParamsClick = () => {\n    setShowParams(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      className: classes.resContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), jsonresp[0].map((col, i) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: sElems[i].name !== 'date' && eNames[sElems[i].elem.name] + \": \" + parseFloat(col).toFixed(sElems[i].elem.name === 'pcpn' ? 2 : 1)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      children: \"Download data (json)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      onClick: handleShowParamsClick,\n      children: \"Display request (json)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), showParams && /*#__PURE__*/_jsxDEV(DisplayRequest, {\n      submittedParams: submittedParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayJson, \"bnjlFlTWrUoMjn/Ww7NpMzgZwdw=\", false, function () {\n  return [useStyles];\n});\n\n_c = DisplayJson;\nexport default DisplayJson;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayJson\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/DisplayJson.js"],"names":["React","useState","Paper","Typography","Button","makeStyles","elementNames","DisplayRequest","useStyles","theme","resContainer","display","padding","margin","downloadButton","DisplayJson","props","jsonresp","submittedParams","showParams","setShowParams","classes","eNames","sElems","name","JSON","parse","elems","handleShowParamsClick","prev","map","col","i","elem","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { elementNames } from '../utilities/constants';\nimport DisplayRequest from './DisplayRequest';\n\nconst useStyles = makeStyles((theme) => ({\n\tresContainer: {\n\t\tdisplay:\"inline-block\", \n\t\tpadding:\"0 1em\",\n\t\tmargin: \"0 0 0.5em\",\n\t},\n    downloadButton: {\n\t\tmargin: \"1em 0.5em\",\n\t},\n}));\n\nconst DisplayJson = (props) => {\n\tconst { jsonresp, submittedParams } = props;\n    const [showParams, setShowParams] = useState(false);\n    const classes = useStyles();\n    const eNames = elementNames();\n    const sElems = [{name:'date'}, ...JSON.parse(submittedParams).elems];\n\n\tconst handleShowParamsClick = () => {\n\t\tsetShowParams(prev => !prev);\n\t}\n \n\n    return (\n        <div>\n            <Paper variant=\"outlined\" className={classes.resContainer}>\n                <Typography variant=\"subtitle1\">\n                    Results:\n                </Typography>\n                {jsonresp[0].map((col,i) => (\n                    <Typography variant=\"body1\" key={i}>\n                        {sElems[i].name !== 'date' &&\n                            eNames[sElems[i].elem.name] + \": \" + parseFloat(col).toFixed(sElems[i].elem.name === 'pcpn' ? 2 : 1)\n                        }\n                    </Typography>\n                ))}\n            </Paper>\n            <br />\n            <Button variant=\"contained\" size=\"small\" className={classes.downloadButton}>Download data (json)</Button>\n            <Button variant=\"contained\" size=\"small\" className={classes.downloadButton} onClick={handleShowParamsClick}>Display request (json)</Button>\n            <br />\n\t\t\t{showParams &&\n\t\t\t\t<DisplayRequest \n\t\t\t\t\tsubmittedParams={submittedParams}\n\t\t\t\t/>\n\t\t\t}\n        </div>\n    );\n}\n\nexport default DisplayJson;"]},"metadata":{},"sourceType":"module"}