{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/CountySelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst useStyles = makeStyles(theme => ({}));\n\nconst CountySelect = props => {\n  _s();\n\n  const {\n    postals\n  } = props;\n  const inputContext = useContext(InputParamsContext);\n  const [stateType, setStateType] = useState('all');\n  const classes = useStyles();\n\n  const handleTypeChange = event => {\n    setStateType(event.target.value);\n  };\n\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    const newElems = inputContext.inputParams.elems;\n    newElems[0] = { ...newElems[0],\n      name: elements[index].name,\n      reduce: elements[index].reduce\n    };\n    inputContext.updateInputParams({\n      elems: newElems\n    });\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      \"aria-label\": \"County selection\",\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"county-menu\",\n        \"aria-label\": \"selected county\",\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Click to select county\",\n          secondary: \"Currently selected: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"county-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: counties.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        selected: index === selectedIndex,\n        onClick: event => handleMenuItemClick(event, index),\n        children: option.menuName\n      }, option.menuName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CountySelect, \"FhnSy5WY1ZoV9crjAUx4HbjW5AI=\", false, function () {\n  return [useStyles];\n});\n\n_c = CountySelect;\nexport default CountySelect;\n/*\nRequest URL: http://data.rcc-acis.org/General/county\n{state: \"ny\", meta: \"name,bbox\"}\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CountySelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/CountySelect.js"],"names":["React","useState","useContext","makeStyles","InputParamsContext","List","ListItem","ListItemText","Menu","MenuItem","useStyles","theme","CountySelect","props","postals","inputContext","stateType","setStateType","classes","handleTypeChange","event","target","value","handleClickListItem","setAnchorEl","currentTarget","handleMenuItemClick","index","setSelectedIndex","newElems","inputParams","elems","name","elements","reduce","updateInputParams","handleClose","anchorEl","Boolean","counties","map","option","selectedIndex","menuName"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nconst CountySelect = (props) => {\n\tconst { postals } = props;\n\tconst inputContext = useContext(InputParamsContext);\n\tconst [stateType, setStateType] = useState('all');\n\tconst classes = useStyles();\n\t\n\tconst handleTypeChange = (event) => {\n\t\tsetStateType(event.target.value);\n\t};\n\n\tconst handleClickListItem = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleMenuItemClick = (event, index) => {\n\t\tsetSelectedIndex(index);\n\t\tsetAnchorEl(null);\n\t\tconst newElems = inputContext.inputParams.elems;\n\t\tnewElems[0] = {...newElems[0], name: elements[index].name, reduce: elements[index].reduce}\n\t\tinputContext.updateInputParams({elems: newElems});\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n        <>\n            <List aria-label=\"County selection\">\n                <ListItem\n                    button\n                    aria-haspopup=\"true\"\n                    aria-controls=\"county-menu\"\n                    aria-label=\"selected county\"\n                >\n                    <ListItemText primary=\"Click to select county\" secondary={\"Currently selected: \"} />\n                </ListItem>\n            </List>\n            <Menu\n                id=\"county-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose} \n            >\n                {counties.map((option, index) => (\n                    <MenuItem\n                        key={option.menuName}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {option.menuName}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n\t);\n };\n\nexport default CountySelect;\n\n/*\nRequest URL: http://data.rcc-acis.org/General/county\n{state: \"ny\", meta: \"name,bbox\"}\n\n*/\n"]},"metadata":{},"sourceType":"module"}