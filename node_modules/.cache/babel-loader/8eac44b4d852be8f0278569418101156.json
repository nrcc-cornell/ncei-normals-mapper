{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/ViewGeotiff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst ViewGeotiff = () => {\n  _s();\n\n  const [mapUrl, setMapUrl] = useState();\n\n  const getMap = () => {\n    const input_params = JSON.stringify({\n      state: \"ne,ok\",\n      grid: \"1\",\n      date: \"2012-6\",\n      elems: [{\n        name: \"maxt\",\n        interval: \"mly\",\n        duration: \"mly\",\n        reduce: \"max\"\n      }],\n      output: \"image\",\n      image: {\n        proj: \"lcc\",\n        overlays: [\"county:1:gray\", \"state:2:purple\"],\n        interp: \"cspline\",\n        width: 350,\n        levels: [90, 95, 100, 105, 110]\n      }\n    });\n    setMapUrl(\"http://data.rcc-acis.org/GridData?params=\" + input_params);\n  };\n\n  const fetchMap = () => {\n    const input_params = JSON.stringify({\n      state: \"ne,ok\",\n      grid: \"1\",\n      date: \"2012-6\",\n      elems: [{\n        name: \"maxt\",\n        interval: \"mly\",\n        duration: \"mly\",\n        reduce: \"max\"\n      }],\n      output: \"image\",\n      image: {\n        proj: \"lcc\",\n        overlays: [\"county:1:gray\", \"state:2:purple\"],\n        interp: \"cspline\",\n        width: 350,\n        levels: [90, 95, 100, 105, 110]\n      }\n    });\n    fetch(\"http://data.rcc-acis.org/GridData?params=\" + input_params).then(response => {\n      if (!response.ok) {\n        throw Error(\"Error fetching the map\");\n      }\n\n      return response.json().then(allData => {\n        this.setState({\n          map: allData\n        });\n      }).catch(err => {\n        throw Error(err.message);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getMap,\n      children: \"Get Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), mapUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapUrl,\n        alt: \"requested map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewGeotiff, \"7CmlzUyLBPTzA8DX2taxoCJbZqs=\");\n\n_c = ViewGeotiff;\nexport default ViewGeotiff;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewGeotiff\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/ViewGeotiff.js"],"names":["React","useState","ViewGeotiff","mapUrl","setMapUrl","getMap","input_params","JSON","stringify","state","grid","date","elems","name","interval","duration","reduce","output","image","proj","overlays","interp","width","levels","fetchMap","fetch","then","response","ok","Error","json","allData","setState","map","catch","err","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,EAApC;;AAEA,QAAMI,MAAM,GAAG,MAAM;AACpB,UAAMC,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAe;AACnCC,MAAAA,KAAK,EAAC,OAD6B;AAEnCC,MAAAA,IAAI,EAAC,GAF8B;AAGnCC,MAAAA,IAAI,EAAC,QAH8B;AAInCC,MAAAA,KAAK,EAAC,CAAC;AACNC,QAAAA,IAAI,EAAC,MADC;AAENC,QAAAA,QAAQ,EAAC,KAFH;AAGNC,QAAAA,QAAQ,EAAC,KAHH;AAINC,QAAAA,MAAM,EAAC;AAJD,OAAD,CAJ6B;AAUnCC,MAAAA,MAAM,EAAC,OAV4B;AAWnCC,MAAAA,KAAK,EAAC;AACLC,QAAAA,IAAI,EAAC,KADA;AAELC,QAAAA,QAAQ,EAAC,CAAC,eAAD,EAAiB,gBAAjB,CAFJ;AAGLC,QAAAA,MAAM,EAAC,SAHF;AAILC,QAAAA,KAAK,EAAC,GAJD;AAKLC,QAAAA,MAAM,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf;AALF;AAX6B,KAAf,CAArB;AAmBAnB,IAAAA,SAAS,CAAC,8CAA4CE,YAA7C,CAAT;AACA,GArBD;;AAuBA,QAAMkB,QAAQ,GAAG,MAAM;AACtB,UAAMlB,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAe;AACnCC,MAAAA,KAAK,EAAC,OAD6B;AAEnCC,MAAAA,IAAI,EAAC,GAF8B;AAGnCC,MAAAA,IAAI,EAAC,QAH8B;AAInCC,MAAAA,KAAK,EAAC,CAAC;AACNC,QAAAA,IAAI,EAAC,MADC;AAENC,QAAAA,QAAQ,EAAC,KAFH;AAGNC,QAAAA,QAAQ,EAAC,KAHH;AAINC,QAAAA,MAAM,EAAC;AAJD,OAAD,CAJ6B;AAUnCC,MAAAA,MAAM,EAAC,OAV4B;AAWnCC,MAAAA,KAAK,EAAC;AACLC,QAAAA,IAAI,EAAC,KADA;AAELC,QAAAA,QAAQ,EAAC,CAAC,eAAD,EAAiB,gBAAjB,CAFJ;AAGLC,QAAAA,MAAM,EAAC,SAHF;AAILC,QAAAA,KAAK,EAAC,GAJD;AAKLC,QAAAA,MAAM,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf;AALF;AAX6B,KAAf,CAArB;AAmBAE,IAAAA,KAAK,CAAC,8CAA4CnB,YAA7C,CAAL,CACCoB,IADD,CACMC,QAAQ,IAAI;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACjB,cAAMC,KAAK,CAAC,wBAAD,CAAX;AACA;;AACD,aAAOF,QAAQ,CAACG,IAAT,GACPJ,IADO,CACFK,OAAO,IAAI;AAChB,aAAKC,QAAL,CAAc;AAACC,UAAAA,GAAG,EAAEF;AAAN,SAAd;AACA,OAHO,EAIPG,KAJO,CAIDC,GAAG,IAAI;AACb,cAAMN,KAAK,CAACM,GAAG,CAACC,OAAL,CAAX;AACA,OANO,CAAP;AAOA,KAZD;AAaA,GAjCD;;AAmCA,sBACC;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAE/B,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEEF,MAAM,iBACN;AAAA,6BACC;AAAK,QAAA,GAAG,EAAEA,MAAV;AAAkB,QAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADD;AAUA,CAxED;;GAAMD,W;;KAAAA,W;AA0EN,eAAeA,WAAf","sourcesContent":["import React, {useState} from \"react\";\n\nconst ViewGeotiff = () => {\n\n\tconst [mapUrl, setMapUrl] = useState();\n\n\tconst getMap = () => {\n\t\tconst input_params = JSON.stringify({\n\t\t\tstate:\"ne,ok\",\n\t\t\tgrid:\"1\",\n\t\t\tdate:\"2012-6\",\n\t\t\telems:[{\n\t\t\t\tname:\"maxt\",\n\t\t\t\tinterval:\"mly\",\n\t\t\t\tduration:\"mly\",\n\t\t\t\treduce:\"max\",\n\t\t\t}],\n\t\t\toutput:\"image\",\n\t\t\timage:{\n\t\t\t\tproj:\"lcc\",\n\t\t\t\toverlays:[\"county:1:gray\",\"state:2:purple\"],\n\t\t\t\tinterp:\"cspline\",\n\t\t\t\twidth:350,\n\t\t\t\tlevels:[90,95,100,105,110],\n\t\t\t},\n\t\t});\n\t\tsetMapUrl(\"http://data.rcc-acis.org/GridData?params=\"+input_params);\n\t}\n\n\tconst fetchMap = () => {\n\t\tconst input_params = JSON.stringify({\n\t\t\tstate:\"ne,ok\",\n\t\t\tgrid:\"1\",\n\t\t\tdate:\"2012-6\",\n\t\t\telems:[{\n\t\t\t\tname:\"maxt\",\n\t\t\t\tinterval:\"mly\",\n\t\t\t\tduration:\"mly\",\n\t\t\t\treduce:\"max\",\n\t\t\t}],\n\t\t\toutput:\"image\",\n\t\t\timage:{\n\t\t\t\tproj:\"lcc\",\n\t\t\t\toverlays:[\"county:1:gray\",\"state:2:purple\"],\n\t\t\t\tinterp:\"cspline\",\n\t\t\t\twidth:350,\n\t\t\t\tlevels:[90,95,100,105,110],\n\t\t\t},\n\t\t});\n\t\tfetch(\"http://data.rcc-acis.org/GridData?params=\"+input_params)\n\t\t.then(response => {\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow Error(\"Error fetching the map\");\n\t\t\t}\n\t\t\treturn response.json()\n\t\t.then(allData => {\n\t\t\tthis.setState({map: allData});\n\t\t})\n\t\t.catch(err => {\n\t\t\tthrow Error(err.message);\n\t\t})\n\t\t});\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<button onClick={getMap}>Get Map</button>\n\t\t\t{mapUrl &&\n\t\t\t\t<div>\n\t\t\t\t\t<img src={mapUrl} alt=\"requested map\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\t);\n}\n  \nexport default ViewGeotiff;\n"]},"metadata":{},"sourceType":"module"}