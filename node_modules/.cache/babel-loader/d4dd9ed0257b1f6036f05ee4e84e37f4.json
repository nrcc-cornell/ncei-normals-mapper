{"ast":null,"code":"import _slicedToArray from\"/Users/kle1/progs/React/ncei-normals-leaflet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState,useContext,useEffect}from'react';import OutlinedInput from'@material-ui/core/OutlinedInput';import FormHelperText from'@material-ui/core/FormHelperText';import InputLabel from'@material-ui/core/InputLabel';import FormControl from'@material-ui/core/FormControl';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormLabel from'@material-ui/core/FormLabel';import RadioGroup from'@material-ui/core/RadioGroup';import Radio from'@material-ui/core/Radio';import Grid from'@material-ui/core/Grid';import{makeStyles}from'@material-ui/core/styles';import InputParamsContext from'./InputParamsContext';import{infoText}from'../utilities/constants';import InfoAdornment from'./InfoAdornment';import SubstateSelect from'./SubstateSelect';var useStyles=makeStyles(function(theme){return{stateInputLabel:{color:\"rgba(0,0,0,0.87)\"},mainGridContainer:{marginTop:\"0.5em\"},vertRadioButton:{color:\"midnightblue !important\",padding:\"6px\",fontSize:\"90%\"}};});var StateSelect=function StateSelect(){var inputContext=useContext(InputParamsContext);var _useState=useState(inputContext.inputParams.areaDef.state?inputContext.inputParams.areaDef.state:\"ME,WV\"),_useState2=_slicedToArray(_useState,2),postals=_useState2[0],setPostals=_useState2[1];var _useState3=useState(\"all\"),_useState4=_slicedToArray(_useState3,2),stateType=_useState4[0],setStateType=_useState4[1];var classes=useStyles();var handleTypeChange=function handleTypeChange(event){var newStateType=event.target.value;setStateType(newStateType);if(newStateType==='all'){inputContext.updateInputParams({areaDef:{state:postals},stateType:newStateType});}else{inputContext.updateInputParams({stateType:newStateType});}};var handleStateChange=function handleStateChange(event){var newPostals=event.target.value.replace(\" \",\"\");setPostals(newPostals);inputContext.updateInputParams({areaDef:{state:newPostals}});};useEffect(function(){inputContext.updateInputParams({areaDef:{state:inputContext.inputParams.areaDef.state?inputContext.inputParams.areaDef.state:\"ME,WV\"}});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"stateInput\",className:classes.stateInputLabel,children:\"State(s)\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:postals,id:\"stateInput\",label:\"State(s)\",inputProps:{spellCheck:false},onChange:handleStateChange,endAdornment:/*#__PURE__*/_jsx(InfoAdornment,{content:infoText.postal})}),/*#__PURE__*/_jsx(FormHelperText,{children:\"Enter one or more state postal abbreviations\"})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:0,className:classes.mainGridContainer,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",children:[/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",children:\"State options:\"}),/*#__PURE__*/_jsxs(RadioGroup,{\"aria-label\":\"state type\",name:\"statetype\",value:stateType,onChange:handleTypeChange,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"all\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.vertRadioButton}),label:\"Entire area\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"county\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.vertRadioButton}),label:\"County\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"climdiv\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.vertRadioButton}),label:\"Climate division\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"cwa\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.vertRadioButton}),label:\"CWA\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"basin\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.vertRadioButton}),label:\"Basin\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:stateType!==\"all\"&&/*#__PURE__*/_jsx(SubstateSelect,{postals:postals,stateType:stateType})})]})]});};export default StateSelect;","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-leaflet/src/components/StateSelect.js"],"names":["React","useState","useContext","useEffect","OutlinedInput","FormHelperText","InputLabel","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","Grid","makeStyles","InputParamsContext","infoText","InfoAdornment","SubstateSelect","useStyles","theme","stateInputLabel","color","mainGridContainer","marginTop","vertRadioButton","padding","fontSize","StateSelect","inputContext","inputParams","areaDef","state","postals","setPostals","stateType","setStateType","classes","handleTypeChange","event","newStateType","target","value","updateInputParams","handleStateChange","newPostals","replace","spellCheck","postal"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { infoText } from '../utilities/constants';\nimport InfoAdornment from './InfoAdornment';\nimport SubstateSelect from './SubstateSelect';\n\nconst useStyles = makeStyles((theme) => ({\n\tstateInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n\t},\n\tmainGridContainer: {\n\t\tmarginTop: \"0.5em\",\n\t},\n\tvertRadioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpadding: \"6px\",\n\t\tfontSize: \"90%\",\n\t},\n}));\n\nconst StateSelect = () => {\n\t\tconst inputContext = useContext(InputParamsContext);\n\t\tconst [postals, setPostals] = useState(inputContext.inputParams.areaDef.state ? inputContext.inputParams.areaDef.state : \"ME,WV\");\n\t\tconst [stateType, setStateType] = useState(\"all\");\n\t\tconst classes = useStyles();\n\t\t\n\t\tconst handleTypeChange = (event) => {\n\t\t\tconst newStateType = event.target.value;\n\t\t\tsetStateType(newStateType);\n\t\t\tif (newStateType === 'all') {\n\t\t\t\tinputContext.updateInputParams({areaDef: {state: postals}, stateType: newStateType});\n\t\t\t} else {\n\t\t\t\tinputContext.updateInputParams({stateType: newStateType});\n\t\t\t}\n\t\t};\n\n\t\tconst handleStateChange = (event) => {\n\t\t\tconst newPostals = event.target.value.replace(\" \",\"\");\n\t\t\tsetPostals(newPostals);\n\t\t\tinputContext.updateInputParams({areaDef: {state:newPostals}});\t\n\t\t};\n\n\t\tuseEffect(() => {\n\t\t\tinputContext.updateInputParams({areaDef: {state: inputContext.inputParams.areaDef.state ? inputContext.inputParams.areaDef.state : \"ME,WV\"}});\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<FormControl variant=\"outlined\">\n\t\t\t\t\t<InputLabel htmlFor=\"stateInput\" className={classes.stateInputLabel}>State(s)</InputLabel>\n\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\tvalue={postals}\n\t\t\t\t\t\tid=\"stateInput\"\n\t\t\t\t\t\tlabel=\"State(s)\"\n\t\t\t\t\t\tinputProps={{ spellCheck: false }}\n\t\t\t\t\t\tonChange={handleStateChange}\n\t\t\t\t\t\tendAdornment={<InfoAdornment content={infoText.postal} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormHelperText>Enter one or more state postal abbreviations</FormHelperText>\n\t\t\t\t</FormControl>\n\n\t\t\t\t<Grid container spacing={0} className={classes.mainGridContainer}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t<FormLabel component=\"legend\">State options:</FormLabel>\n\t\t\t\t\t\t\t<RadioGroup  aria-label=\"state type\" name=\"statetype\" value={stateType} onChange={handleTypeChange}>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"all\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton} />} \n\t\t\t\t\t\t\t\t\tlabel=\"Entire area\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"county\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton}/>} \n\t\t\t\t\t\t\t\t\tlabel=\"County\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"climdiv\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton} />} \n\t\t\t\t\t\t\t\t\tlabel=\"Climate division\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"cwa\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton} />} \n\t\t\t\t\t\t\t\t\tlabel=\"CWA\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"basin\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton} />} \n\t\t\t\t\t\t\t\t\tlabel=\"Basin\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{(stateType !== \"all\") &&\n\t\t\t\t\t\t\t<SubstateSelect postals={postals} stateType={stateType} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</>\n\t\t);\n };\n\nexport default StateSelect;\n"]},"metadata":{},"sourceType":"module"}