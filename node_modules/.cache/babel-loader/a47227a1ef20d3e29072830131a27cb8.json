{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Banner from './Banner';\nimport OptionsSelection from './OptionsSelection';\nimport GetResults from './GetResults';\nimport InputParamsContext from './InputParamsContext';\nimport { default_params, drawerWidth } from '../utilities/constants';\nconst useStyles = makeStyles(theme => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: 0\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: drawerWidth\n  }\n}));\n\nconst Main = () => {\n  _s();\n\n  const classes = useStyles();\n  const [viewMap, setViewMap] = useState(false);\n  const [inputParams, setInputParams] = useState(default_params);\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const [open, setOpen] = useState(!smallScreen);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleViewMapClick = () => {\n    setViewMap(true);\n\n    if (smallScreen) {\n      setOpen(false);\n    }\n  };\n\n  const updateInputParams = updateParams => {\n    setViewMap(false);\n    const newParams = { ...inputParams,\n      ...updateParams\n    };\n    setInputParams(newParams);\n  };\n\n  useEffect(() => {\n    // initial useState does not recognize small screen yet; so need to set drawer status here\n    setOpen(!smallScreen);\n  }, [smallScreen]);\n  return /*#__PURE__*/_jsxDEV(InputParamsContext.Provider, {\n    value: {\n      inputParams,\n      updateInputParams\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#maincontent\",\n        className: \"skip\",\n        children: \"Skip to main content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Banner, {\n        open: open,\n        handleDrawerOpen: handleDrawerOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(OptionsSelection, {\n          open: open,\n          handleDrawerClose: handleDrawerClose,\n          handleViewMapClick: handleViewMapClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"maincontent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.drawerHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.content, {\n            [classes.contentShift]: open\n          }),\n          children: [viewMap && /*#__PURE__*/_jsxDEV(GetResults, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), !viewMap && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              paragraph: true,\n              children: \"... Introductory text here, such as ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              paragraph: true,\n              children: [\"Climate Normals are three-decade averages of climatological variables including temperature and precipitation. These normals are updated once every 10 years. This initial release of the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://www.ncei.noaa.gov/\",\n                target: \"_blank\",\n                children: \"National Centers for Environmental Informations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this), \"'s 1991-2020 gridded U.S. climate normals dataset contains monthly normals of temperature (maximum, miminum, average) and precipitation for the conterminous United States.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"To view the data contained in the gridded climate normals dataset, set your options in the navigation pane and click the \\\"Submit Request\\\" button to view the results. Buttons will be provided below each resulting product to allow you to download the data in a variety of formats.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                position: \"absolute\",\n                bottom: 0,\n                marginTop: \"1em\",\n                textAlign: \"center\",\n                zIndex: \"2000\"\n              },\n              children: \"Footer text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), \">\"]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"3QKL16AryjD5yBZlDaDeVpLT04Y=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/Main.js"],"names":["React","useEffect","useState","clsx","makeStyles","useTheme","Typography","useMediaQuery","Banner","OptionsSelection","GetResults","InputParamsContext","default_params","drawerWidth","useStyles","theme","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","Main","classes","viewMap","setViewMap","inputParams","setInputParams","smallScreen","breakpoints","down","open","setOpen","handleDrawerOpen","handleDrawerClose","handleViewMapClick","updateInputParams","updateParams","newParams","position","bottom","marginTop","textAlign","zIndex"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Banner from './Banner';\nimport OptionsSelection from './OptionsSelection';\nimport GetResults from './GetResults';\nimport InputParamsContext from './InputParamsContext';\nimport { default_params, drawerWidth } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: 0,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: drawerWidth,\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [viewMap, setViewMap] = useState(false);\n  const [inputParams, setInputParams] = useState(default_params)\n  const theme = useTheme();\n\tconst smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const [open, setOpen] = useState(!smallScreen);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleViewMapClick = () => {\n    setViewMap(true);\n    if (smallScreen) {\n      setOpen(false);\n    }\n  };\n\n  const updateInputParams = (updateParams) => {\n    setViewMap(false);\n    const newParams = {...inputParams, ...updateParams}\n    setInputParams(newParams);\n  }\n\n  useEffect(() => {\n    // initial useState does not recognize small screen yet; so need to set drawer status here\n    setOpen(!smallScreen);\n  },[smallScreen]);\n\n  return (\n    <InputParamsContext.Provider value={{ inputParams, updateInputParams }}>\n      <>\n        <a href=\"#maincontent\" className=\"skip\">Skip to main content</a>\n\n        <Banner\n          open={open}\n          handleDrawerOpen={handleDrawerOpen}\n        />\n  \n        <nav>\n          <OptionsSelection\n            open={open}\n            handleDrawerClose={handleDrawerClose}\n            handleViewMapClick={handleViewMapClick}\n          />\n        </nav>\n\n        <main id=\"maincontent\">\n          <div className={classes.drawerHeader}  />\n          <div className={clsx(classes.content, { [classes.contentShift]: open, })}>\n            {viewMap &&\n              <GetResults />\n            }\n            {!viewMap &&\n              <>\n                <Typography paragraph>\n                ... Introductory text here, such as ... \n                </Typography> \n                \n                <Typography paragraph>\n                  Climate Normals are three-decade averages of climatological variables including temperature and precipitation. \n                  These normals are updated once every 10 years. This initial release of \n                  the <a href=\"https://www.ncei.noaa.gov/\" target=\"_blank\">National Centers for Environmental Informations</a>'s  \n                  1991-2020 gridded U.S. climate normals  \n                  dataset contains monthly normals of temperature (maximum, miminum, average) and precipitation for the conterminous \n                  United States.\n                </Typography>\n                               \n                <Typography>\n                  To view the data contained in the gridded climate normals dataset, set your options in the\n                  navigation pane and click the \"Submit Request\" button to view the results. Buttons will be provided below each\n                  resulting product to allow you to download the data in a variety of formats.\n                </Typography>\n\n               \n                  <Typography variant=\"body2\" style={{position:\"absolute\", bottom:0, marginTop:\"1em\", textAlign:\"center\", zIndex:\"2000\"}}>\n                    Footer text\n                  </Typography>\n               >\n              </>\n            }\n          </div>\n        </main>\n      </>\n    </InputParamsContext.Provider>\n  )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}