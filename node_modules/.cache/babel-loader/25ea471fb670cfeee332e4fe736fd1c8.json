{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-leaflet/src/components/MapboxMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useContext } from 'react';\nimport { MapContainer, GeoJSON, TileLayer } from 'react-leaflet';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { multiStateBbox } from '../utilities/utils';\nconst useStyles = makeStyles(theme => ({\n  nav: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    padding: \"3px\"\n  },\n  mapContainer: {\n    border: \"1pt solid midnightblue\",\n    height: window.innerHeight * 0.6\n  }\n}));\n\nconst MapboxMap = props => {\n  _s();\n\n  const {\n    imgsrc,\n    submittedParams\n  } = props;\n  const [bbox, setBbox] = useState();\n  const [imgcoords, setImgcoords] = useState();\n  const [resultsError, setResultsError] = useState();\n  const inputContext = useContext(InputParamsContext);\n  const classes = useStyles();\n  /*\t\t\t\toverlay: {\n  \t\t\t\t\ttype: 'image',\n  \t\t\t\t\turl: imgsrc,\n  \t\t\t\t\tcoordinates: imgcoords,\n  \t\t\t\t}\n  \t\t\n  \t\t\t\t{\n  \t\t\t\t\tid: 'imgLayer',\n  \t\t\t\t\tsource: 'overlay',\n  \t\t\t\t\ttype: 'raster',\n  \t\t\t\t\tpaint: { 'raster-opacity': 0.90 }\n  \n  \t\t\t\t}\n  */\n\n  const fetchBbox = postals => {\n    const jsonparams = JSON.stringify({\n      state: postals,\n      meta: \"bbox\"\n    });\n    fetch(\"https://data.rcc-acis.org/General/state\", {\n      body: jsonparams,\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        setResultsError(\"Error\");\n      }\n\n      return response.json();\n    }).then(response => {\n      if (response.meta && response.meta.length) {\n        const bbox = multiStateBbox(response.meta);\n        console.log(bbox);\n        setBbox(bbox);\n      } else {\n        setResultsError(\"No bbox for \" + postals);\n      }\n    }).catch(err => {\n      if (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n        setResultsError(\"Invalid request\");\n      } else {\n        setResultsError(err.message);\n      }\n\n      ;\n    });\n  };\n\n  useEffect(() => {\n    if (inputContext.inputParams.areaDef.bbox) {\n      const bbox = JSON.parse(submittedParams).bbox;\n      console.log(bbox);\n      setBbox([parseFloat(bbox[0]), parseFloat(bbox[1]), parseFloat(bbox[2]), parseFloat(bbox[3])]);\n    } else {\n      const postals = inputContext.inputParams.areaDef.state;\n      fetchBbox(postals);\n    } // eslint-disable-next-line \n\n  }, [inputContext.inputParams.areaDef]);\n  useEffect(() => {\n    if (bbox) {\n      // convert bbox to mapbox coordinates\n      setImgcoords([[bbox[0], bbox[3]], [bbox[2], bbox[3]], [bbox[2], bbox[1]], [bbox[0], bbox[1]]]);\n    } // eslint-disable-next-line \n\n  }, [bbox]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mapContainer,\n      children: bbox && /*#__PURE__*/_jsxDEV(MapContainer, {\n        bounds: [[bbox[1], bbox[0]], [bbox[3], bbox[2]]],\n        zoomControl: true,\n        scrollWheelZoom: false,\n        attributionControl: true,\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}{r}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors \\xA9 <a href=\\\"https://carto.com/attributions\\\">CARTO</a>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), resultsError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", resultsError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapboxMap, \"2TqNppENqOEP2Fg5jxZAxZQ65Wg=\", false, function () {\n  return [useStyles];\n});\n\n_c = MapboxMap;\nexport default MapboxMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapboxMap\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-leaflet/src/components/MapboxMap.js"],"names":["React","useEffect","useRef","useState","useContext","MapContainer","GeoJSON","TileLayer","makeStyles","InputParamsContext","multiStateBbox","useStyles","theme","nav","position","top","left","padding","mapContainer","border","height","window","innerHeight","MapboxMap","props","imgsrc","submittedParams","bbox","setBbox","imgcoords","setImgcoords","resultsError","setResultsError","inputContext","classes","fetchBbox","postals","jsonparams","JSON","stringify","state","meta","fetch","body","method","headers","then","response","ok","json","length","console","log","catch","err","message","includes","inputParams","areaDef","parse","parseFloat"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, useContext } from 'react';\nimport { MapContainer, GeoJSON, TileLayer } from 'react-leaflet'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { multiStateBbox } from '../utilities/utils';\n\nconst useStyles = makeStyles((theme) => ({\n\tnav: {\n\t\tposition: \"absolute\",\n\t\ttop: 0,\n\t\tleft: 0,\n\t\tpadding: \"3px\",\n\t},\n\tmapContainer: {\n\t\tborder: \"1pt solid midnightblue\",\n\t\theight: window.innerHeight * 0.6,\n\t},\n}));\n\nconst MapboxMap = (props) => {\n\tconst { imgsrc, submittedParams } = props;\n\tconst [ bbox, setBbox ] = useState();\n\tconst [ imgcoords, setImgcoords ] = useState();\n\tconst [ resultsError, setResultsError ] = useState();\n\tconst inputContext = useContext(InputParamsContext);\n\tconst classes = useStyles();\n\n/*\t\t\t\toverlay: {\n\t\t\t\t\ttype: 'image',\n\t\t\t\t\turl: imgsrc,\n\t\t\t\t\tcoordinates: imgcoords,\n\t\t\t\t}\n\t\t\n\t\t\t\t{\n\t\t\t\t\tid: 'imgLayer',\n\t\t\t\t\tsource: 'overlay',\n\t\t\t\t\ttype: 'raster',\n\t\t\t\t\tpaint: { 'raster-opacity': 0.90 }\n\n\t\t\t\t}\n*/\n\n\tconst fetchBbox = postals => {\n\t\tconst jsonparams = JSON.stringify({state: postals, meta: \"bbox\"});\n\t\tfetch(\"https://data.rcc-acis.org/General/state\", {body: jsonparams, method: \"POST\", headers: {'Content-Type': 'application/json'}})\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tsetResultsError(\"Error\");\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (response.meta && response.meta.length) {\n\t\t\t\t\tconst bbox = multiStateBbox(response.meta);\n\t\t\t\t\tconsole.log(bbox)\n\t\t\t\t\tsetBbox(bbox);\n\t\t\t\t} else {\n\t\t\t\t\tsetResultsError(\"No bbox for \"+postals);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n\t\t\t\t\tsetResultsError(\"Invalid request\");\n\t\t\t\t} else {\n\t\t\t\t\tsetResultsError(err.message);\n\t\t\t\t};\n\t\t\t})\n\t};\n\n\tuseEffect(() => {\n\t\tif (inputContext.inputParams.areaDef.bbox) {\n\t\t\tconst bbox = JSON.parse(submittedParams).bbox;\n\t\t\tconsole.log(bbox)\n\t\t\tsetBbox([parseFloat(bbox[0]),parseFloat(bbox[1]),parseFloat(bbox[2]),parseFloat(bbox[3])]);\n\t\t} else {\n\t\t\tconst postals = inputContext.inputParams.areaDef.state;\n\t\t\tfetchBbox(postals);\n\t\t}\n\t\t// eslint-disable-next-line \n\t}, [inputContext.inputParams.areaDef]);\n\n\tuseEffect(() => {\n\t\tif (bbox) {\n\t\t\t// convert bbox to mapbox coordinates\n\t\t\tsetImgcoords([ [bbox[0],bbox[3]], [bbox[2],bbox[3]], [bbox[2],bbox[1]], [bbox[0],bbox[1]] ]);\n\t\t}\n\t\t// eslint-disable-next-line \n\t}, [bbox]);\n\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.mapContainer}>\n\n\t\t\t{bbox && \n\t\t\t\t<MapContainer \n\t\t\t\t\tbounds={[[bbox[1], bbox[0]], [bbox[3], bbox[2]]]}\n\t\t\t\t\tzoomControl={true}\n\t\t\t\t\tscrollWheelZoom={false}\n\t\t\t\t\tattributionControl={true}\n\t\t\t\t>\n\t\t\t\t\t<TileLayer\n\t\t\t\t\t\turl='https://{s}.basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}{r}.png'\n\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n\t\t\t\t\t/>\n\n\t\t\t\t</MapContainer>\n\t\t\t}\n\n\t\t\t\t\n\t\t\t</div>\n\t\t\t{resultsError &&\n\t\t\t\t<p>Error: {resultsError}</p>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default MapboxMap;"]},"metadata":{},"sourceType":"module"}