{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/ImageSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputParamsContext from './InputParamsContext';\nimport LevelsSelect from './LevelsSelect';\nconst useStyles = makeStyles(theme => ({\n  imageOptionsContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    padding: 0\n  },\n  accordionDetailsContainer: {\n    paddingTop: 0\n  },\n  accordianSummaryRoot: {\n    minHeight: \"1em\",\n    marginTop: \"1em\",\n    marginBottom: \"1em\",\n    '&$expanded': {\n      minHeight: \"1em\",\n      marginBottom: \"0.5em\"\n    }\n  },\n  accordianSummaryContent: {\n    margin: 0,\n    padding: 0,\n    '&$expanded': {\n      margin: 0\n    }\n  },\n  expanded: {},\n  expandIcon: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  vertCheckbox: {\n    color: \"midnightblue !important\",\n    padding: \"3px\",\n    fontSize: \"90%\"\n  }\n}));\n\nconst ImageSelect = () => {\n  _s();\n\n  const [stateOutlines, setStateOutlines] = useState(true);\n  const [countyOutlines, setCountyOutlines] = useState(true);\n  const classes = useStyles();\n  const inputContext = useContext(InputParamsContext);\n\n  const handleCheckboxChange = event => {\n    if (event.target.name === 'stateOutlines') {\n      setStateOutlines(event.target.checked);\n    } else if (event.target.name === 'countyOutlines') {\n      setCountyOutlines(event.target.checked);\n    }\n  };\n\n  useEffect(() => {\n    const newOverlays = [stateOutlines ? \"state:1:black\" : \"state:0:black\", countyOutlines ? \"county:0.5:grey\" : \"county:0:grey\"];\n    inputContext.updateInputParams({\n      image: { ...inputContext.inputParams.image,\n        overlays: newOverlays\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stateOutlines, countyOutlines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.imageOptionsContainer,\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this),\n        \"aria-controls\": \"image-options-content\",\n        id: \"image-options-header\",\n        classes: {\n          root: classes.accordianSummaryRoot,\n          content: classes.accordianSummaryContent,\n          expanded: classes.expanded,\n          expandIcon: classes.expandIcon\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Image Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        className: classes.accordionDetailsContainer,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              size: \"small\",\n              checked: stateOutlines,\n              className: classes.vertCheckbox,\n              onChange: handleCheckboxChange,\n              name: \"stateOutlines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this),\n            label: \"Show state outlines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              size: \"small\",\n              checked: countyOutlines,\n              className: classes.vertCheckbox,\n              onChange: handleCheckboxChange,\n              name: \"countyOutlines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 9\n            }, this),\n            label: \"Show county outlines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(LevelsSelect, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ImageSelect, \"0HTSGJbP01EwAp+BALGH1Id9CsA=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImageSelect;\nexport default ImageSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/ImageSelect.js"],"names":["React","useState","useEffect","useContext","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","makeStyles","Checkbox","FormControlLabel","FormControl","InputParamsContext","LevelsSelect","useStyles","theme","imageOptionsContainer","borderLeft","borderRight","borderBottom","padding","accordionDetailsContainer","paddingTop","accordianSummaryRoot","minHeight","marginTop","marginBottom","accordianSummaryContent","margin","expanded","expandIcon","paddingBottom","vertCheckbox","color","fontSize","ImageSelect","stateOutlines","setStateOutlines","countyOutlines","setCountyOutlines","classes","inputContext","handleCheckboxChange","event","target","name","checked","newOverlays","updateInputParams","image","inputParams","overlays","root","content","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputParamsContext from './InputParamsContext';\nimport LevelsSelect from './LevelsSelect';\n\nconst useStyles = makeStyles((theme) => ({\n\timageOptionsContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tpadding: 0,\n\t},\n\taccordionDetailsContainer: {\n\t\tpaddingTop: 0,\n\t},\n\taccordianSummaryRoot: {\n\t\tminHeight: \"1em\",\n\t\tmarginTop: \"1em\",\n\t\tmarginBottom: \"1em\",\n\t\t'&$expanded': {\n\t\t\tminHeight: \"1em\",\n\t\t\tmarginBottom: \"0.5em\",\n\t\t},\n\t},\n\taccordianSummaryContent: {\n\t\tmargin: 0,\n\t\tpadding:  0,\n\t\t'&$expanded': {\n\t\t\tmargin: 0,\n\t\t},\n\t},\n\texpanded: {},\n\texpandIcon: {\n\t\tpaddingTop: 0,\n\t\tpaddingBottom: 0,\n\t},\n\tvertCheckbox: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpadding: \"3px\",\n\t\tfontSize: \"90%\",\n\t},\n}));\n\nconst ImageSelect = () => {\n\tconst [ stateOutlines, setStateOutlines ] = useState(true);\n\tconst [ countyOutlines, setCountyOutlines ] = useState(true);\n\tconst classes = useStyles();\n\tconst inputContext = useContext(InputParamsContext);\n\n\tconst handleCheckboxChange = (event) => {\n\t\tif (event.target.name === 'stateOutlines') {\n\t\t\tsetStateOutlines(event.target.checked);\n\t\t} else if (event.target.name === 'countyOutlines') {\n\t\t\tsetCountyOutlines(event.target.checked);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst newOverlays = [\n\t\t\tstateOutlines ? \"state:1:black\" : \"state:0:black\",\n\t\t\tcountyOutlines ? \"county:0.5:grey\" : \"county:0:grey\"\n\t\t];\n\t\tinputContext.updateInputParams({image: {...inputContext.inputParams.image, overlays: newOverlays}});\t\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [stateOutlines, countyOutlines]);\n\n\treturn ( \n\t\t<div className={classes.imageOptionsContainer}>\n\t\t\t<Accordion>\n\t\t\t\t<AccordionSummary\n\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\taria-controls=\"image-options-content\"\n\t\t\t\t\tid=\"image-options-header\"\n\t\t\t\t\tclasses={{root: classes.accordianSummaryRoot, content: classes.accordianSummaryContent, expanded: classes.expanded, expandIcon: classes.expandIcon}}\n\t\t\t\t>\n\t\t\t\t\t<Typography variant=\"body1\">Image Settings</Typography>\n\t\t\t\t</AccordionSummary>\n\t\t\t\t<AccordionDetails\n\t\t\t\t\tclassName={classes.accordionDetailsContainer}\n\t\t\t\t>\n\t\t\t\t\t<FormControl component=\"fieldset\" style={{width:\"100%\"}}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox size=\"small\" checked={stateOutlines} className={classes.vertCheckbox} onChange={handleCheckboxChange} name=\"stateOutlines\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Show state outlines\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox size=\"small\" checked={countyOutlines} className={classes.vertCheckbox} onChange={handleCheckboxChange} name=\"countyOutlines\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Show county outlines\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t\t<LevelsSelect />\n\t\t\t\t\t</FormControl>\n\t\t\t\t</AccordionDetails>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n}\n\nexport default ImageSelect;"]},"metadata":{},"sourceType":"module"}