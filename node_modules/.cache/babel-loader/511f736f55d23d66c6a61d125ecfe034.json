{"ast":null,"code":"import _objectSpread from\"/Users/kle1/progs/React/normals-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var dateDiff=function dateDiff(date1,date2){var sdate=date1 instanceof Date?date1:new Date(date1);var edate=date2 instanceof Date?date2:new Date(date2);var one_day=1000*60*60*24;return Math.round((edate.getTime()-sdate.getTime())/one_day);};var buildParams=function buildParams(input_params){var paramsToSubmit={grid:input_params.grid,output:input_params.output};//console.log(input_params) // for debugging\n// For \"interval\" date selection, calculate duration based on sdate and edate. Also send just date instead of sdate and edate.\nvar duration;if(input_params.elems[0].duration===1){duration=1;}else if(input_params.sdate<=input_params.edate){duration=dateDiff(input_params.sdate,input_params.edate)+1;}else{// dates wrap around year border\nvar newStart=new Date(input_params.sdate);newStart.setFullYear(2018);duration=dateDiff(newStart,input_params.edate)+1;}var newElems=input_params.elems;newElems[0]=_objectSpread(_objectSpread({},newElems[0]),{},{duration:duration});paramsToSubmit.elems=newElems;var newDate=input_params.elems[0].interval.length===2?input_params.edate.slice(0,7):input_params.edate;paramsToSubmit.date=newDate;// areaDef is used to determine whether to send \"state\", \"county\" or \"bbox\".\nparamsToSubmit=_objectSpread(_objectSpread({},paramsToSubmit),input_params.areaDef);return JSON.stringify(paramsToSubmit);};export{buildParams};","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/utilities/utils.js"],"names":["dateDiff","date1","date2","sdate","Date","edate","one_day","Math","round","getTime","buildParams","input_params","paramsToSubmit","grid","output","duration","elems","newStart","setFullYear","newElems","newDate","interval","length","slice","date","areaDef","JSON","stringify"],"mappings":"4JAAA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,KAAR,CAAkB,CAClC,GAAMC,CAAAA,KAAK,CAAGF,KAAK,WAAYG,CAAAA,IAAjB,CAAwBH,KAAxB,CAAgC,GAAIG,CAAAA,IAAJ,CAASH,KAAT,CAA9C,CACA,GAAMI,CAAAA,KAAK,CAAGH,KAAK,WAAYE,CAAAA,IAAjB,CAAwBF,KAAxB,CAAgC,GAAIE,CAAAA,IAAJ,CAASF,KAAT,CAA9C,CACA,GAAMI,CAAAA,OAAO,CAAG,KAAO,EAAP,CAAY,EAAZ,CAAiB,EAAjC,CACA,MAAQC,CAAAA,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,CAACI,OAAN,GAAkBN,KAAK,CAACM,OAAN,EAAnB,EAAsCH,OAAjD,CAAR,CACA,CALD,CAOA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,YAAD,CAAkB,CACrC,GAAIC,CAAAA,cAAc,CAAG,CAACC,IAAI,CAAEF,YAAY,CAACE,IAApB,CAA0BC,MAAM,CAAEH,YAAY,CAACG,MAA/C,CAArB,CACA;AACA;AACA,GAAIC,CAAAA,QAAJ,CACA,GAAIJ,YAAY,CAACK,KAAb,CAAmB,CAAnB,EAAsBD,QAAtB,GAAmC,CAAvC,CAA0C,CACzCA,QAAQ,CAAG,CAAX,CACA,CAFD,IAEO,IAAIJ,YAAY,CAACR,KAAb,EAAsBQ,YAAY,CAACN,KAAvC,CAA8C,CACpDU,QAAQ,CAAIf,QAAQ,CAACW,YAAY,CAACR,KAAd,CAAqBQ,YAAY,CAACN,KAAlC,CAAR,CAAmD,CAA/D,CACA,CAFM,IAEA,CACN;AACA,GAAMY,CAAAA,QAAQ,CAAG,GAAIb,CAAAA,IAAJ,CAASO,YAAY,CAACR,KAAtB,CAAjB,CACAc,QAAQ,CAACC,WAAT,CAAqB,IAArB,EACAH,QAAQ,CAAGf,QAAQ,CAACiB,QAAD,CAAWN,YAAY,CAACN,KAAxB,CAAR,CAAyC,CAApD,CACA,CACD,GAAMc,CAAAA,QAAQ,CAAGR,YAAY,CAACK,KAA9B,CACAG,QAAQ,CAAC,CAAD,CAAR,gCAAkBA,QAAQ,CAAC,CAAD,CAA1B,MAA+BJ,QAAQ,CAARA,QAA/B,GACAH,cAAc,CAACI,KAAf,CAAuBG,QAAvB,CACA,GAAMC,CAAAA,OAAO,CAAGT,YAAY,CAACK,KAAb,CAAmB,CAAnB,EAAsBK,QAAtB,CAA+BC,MAA/B,GAA0C,CAA1C,CAA8CX,YAAY,CAACN,KAAb,CAAmBkB,KAAnB,CAAyB,CAAzB,CAA4B,CAA5B,CAA9C,CAA+EZ,YAAY,CAACN,KAA5G,CACAO,cAAc,CAACY,IAAf,CAAsBJ,OAAtB,CAEA;AACAR,cAAc,gCAAOA,cAAP,EAA0BD,YAAY,CAACc,OAAvC,CAAd,CAEA,MAAOC,CAAAA,IAAI,CAACC,SAAL,CAAef,cAAf,CAAP,CACA,CAzBD,CA2BA,OAASF,WAAT","sourcesContent":["const dateDiff = (date1, date2) => {\n\tconst sdate = date1 instanceof Date ? date1 : new Date(date1);\n\tconst edate = date2 instanceof Date ? date2 : new Date(date2);\n\tconst one_day = 1000 * 60 * 60 * 24;\n\treturn (Math.round((edate.getTime() - sdate.getTime()) / one_day));\n};\n\t\nconst buildParams = (input_params) => {\n\tlet paramsToSubmit = {grid: input_params.grid, output: input_params.output};\n\t//console.log(input_params) // for debugging\n\t// For \"interval\" date selection, calculate duration based on sdate and edate. Also send just date instead of sdate and edate.\n\tvar duration;\n\tif (input_params.elems[0].duration === 1) {\n\t\tduration = 1;\n\t} else if (input_params.sdate <= input_params.edate) {\n\t\tduration =  dateDiff(input_params.sdate, input_params.edate) + 1;\n\t} else {\n\t\t// dates wrap around year border\n\t\tconst newStart = new Date(input_params.sdate);\n\t\tnewStart.setFullYear(2018);\n\t\tduration = dateDiff(newStart, input_params.edate) + 1;\n\t}\n\tconst newElems = input_params.elems;\n\tnewElems[0] = {...newElems[0], duration};\n\tparamsToSubmit.elems = newElems;\n\tconst newDate = input_params.elems[0].interval.length === 2 ? input_params.edate.slice(0, 7) : input_params.edate;\n\tparamsToSubmit.date = newDate;\n\n\t// areaDef is used to determine whether to send \"state\", \"county\" or \"bbox\".\n\tparamsToSubmit = {...paramsToSubmit, ...input_params.areaDef};\n\n\treturn JSON.stringify(paramsToSubmit);\t\n};\n\nexport { buildParams };"]},"metadata":{},"sourceType":"module"}