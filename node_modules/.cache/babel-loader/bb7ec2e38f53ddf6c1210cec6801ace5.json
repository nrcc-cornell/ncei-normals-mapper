{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/AreaSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nconst useStyles = makeStyles(theme => ({\n  areaContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    borderTop: \"0\",\n    padding: \"1em 1em\"\n  },\n  radioButton: {\n    color: \"midnightblue !important\",\n    paddingRight: \"3px\"\n  },\n  formControl: {\n    marginTop: \"0.5em\"\n  },\n  stateInputLabel: {\n    color: \"rgba(0,0,0,0.87)\",\n    fontSize: \"1.2em\",\n    marginTop: \"1em\"\n  }\n}));\n\nconst AreaSelect = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext);\n  const [postals, setPostals] = useState(inputContext.inputParams.state);\n  const [areaType, setAreaType] = useState(\"state\");\n  const classes = useStyles();\n\n  const handleTypeChange = event => {\n    const newAreaType = event.target.value;\n    setAreaType(newAreaType);\n  };\n\n  const handleChange = event => {\n    const newPostals = event.target.value;\n    setPostals(newPostals);\n    inputContext.updateInputParams({\n      state: newPostals\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.areaContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Select area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Area type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"area type\",\n        name: \"areatype\",\n        value: areaType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"state\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 47\n          }, this),\n          label: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"region\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 48\n          }, this),\n          label: \"Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"bbox\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 46\n          }, this),\n          label: \"Bounding Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"stateInput\",\n        className: classes.stateInputLabel,\n        children: \"State(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: postals,\n        id: \"stateInput\",\n        label: \"State(s)\",\n        defaultValue: postals,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        id: \"stateInput\",\n        children: \"Enter one or more state postal abbreviations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AreaSelect, \"m//c27Vb4He7fYBbfSmkPZOLZVk=\", false, function () {\n  return [useStyles];\n});\n\n_c = AreaSelect;\nexport default AreaSelect;\n/* <FormControl variant=\"outlined\">\n        <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\n        <OutlinedInput id=\"component-outlined\" value={name}  label=\"Name\" />\n\t  </FormControl>\n\t  */\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/AreaSelect.js"],"names":["React","useState","useContext","Typography","OutlinedInput","FormHelperText","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","InputLabel","makeStyles","InputParamsContext","useStyles","theme","areaContainer","borderLeft","borderRight","borderBottom","borderTop","padding","radioButton","color","paddingRight","formControl","marginTop","stateInputLabel","fontSize","AreaSelect","inputContext","postals","setPostals","inputParams","state","areaType","setAreaType","classes","handleTypeChange","event","newAreaType","target","value","handleChange","newPostals","updateInputParams"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\n\nconst useStyles = makeStyles((theme) => ({\n\tareaContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tborderTop: \"0\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tradioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpaddingRight: \"3px\",\n\t},\n\tformControl: {\n\t\tmarginTop: \"0.5em\",\n\t},\n\tstateInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n\t\tfontSize: \"1.2em\",\n\t\tmarginTop: \"1em\",\n\t},\n}));\n\nconst AreaSelect = () => {\n\tconst inputContext = useContext(InputParamsContext);\n\tconst [postals, setPostals] = useState(inputContext.inputParams.state);\n\tconst [areaType, setAreaType] = useState(\"state\");\n\tconst classes = useStyles();\n\n\tconst handleTypeChange = (event) => {\n\t\tconst newAreaType = event.target.value;\n\t\tsetAreaType(newAreaType);\n\t};\n\t\n\tconst handleChange = (event) => {\n\t\tconst newPostals = event.target.value;\n\t\tsetPostals(newPostals);\n\t\tinputContext.updateInputParams({state:newPostals});\t\n\t};\n\n\treturn (\n\t\t<div className={classes.areaContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect area\n\t\t\t</Typography>\n\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Area type:</FormLabel>\n\t\t\t\t<RadioGroup row aria-label=\"area type\" name=\"areatype\" value={areaType} onChange={handleTypeChange}>\n\t\t\t\t\t<FormControlLabel value=\"state\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"State\" />\n\t\t\t\t\t<FormControlLabel value=\"region\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Region\" />\n\t\t\t\t\t<FormControlLabel value=\"bbox\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Bounding Box\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t<FormControl variant=\"outlined\">\n\t\t\t\t<InputLabel htmlFor=\"stateInput\" className={classes.stateInputLabel}>State(s)</InputLabel>\n\t\t\t\t<OutlinedInput\n\t\t\t\t\tvalue={postals}\n\t\t\t\t\tid=\"stateInput\"\n\t\t\t\t\tlabel=\"State(s)\"\n\t\t\t\t\tdefaultValue={postals}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<FormHelperText id=\"stateInput\">Enter one or more state postal abbreviations</FormHelperText>\n\t\t\t</FormControl>\n\n\n\n\t\t</div>\n\t);\n}\n\nexport default AreaSelect;\n\n/* <FormControl variant=\"outlined\">\n        <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\n        <OutlinedInput id=\"component-outlined\" value={name}  label=\"Name\" />\n\t  </FormControl>\n\t  */"]},"metadata":{},"sourceType":"module"}