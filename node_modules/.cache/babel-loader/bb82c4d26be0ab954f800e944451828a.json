{"ast":null,"code":"import _defineProperty from\"/Users/kle1/progs/React/normals-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/kle1/progs/React/normals-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useContext}from'react';import TextField from'@material-ui/core/TextField';import MenuItem from'@material-ui/core/MenuItem';import{makeStyles}from'@material-ui/core/styles';import InputParamsContext from'./InputParamsContext';import{months}from'../utilities/constants';var useStyles=makeStyles(function(theme){return{dateGroup:{display:\"inline-block\",border:\"1px solid rgba(0, 0, 0, 0.23)\",borderRadius:\"4px\",padding:\"0 0.6em\",margin:\"0.6em 0 0.6em 0\",fontFamily:\"'Roboto', 'Helvetica', 'Arial', sans-serif\"},dateGroupLegend:{fontSize:\"95%\"},textfield:{marginRight:\"0.5em\"},menuitem:{paddingTop:\"1px\",paddingBottom:\"1px\"}};});var RenderDate=function RenderDate(props){var dateLegend=props.dateLegend,dateParam=props.dateParam,_props$justMonth=props.justMonth,justMonth=_props$justMonth===void 0?false:_props$justMonth;var inputContext=useContext(InputParamsContext);var _inputContext$inputPa=inputContext.inputParams[dateParam].split(\"-\"),_inputContext$inputPa2=_slicedToArray(_inputContext$inputPa,3),initMonth=_inputContext$inputPa2[1],initDay=_inputContext$inputPa2[2];var _useState=useState(initMonth),_useState2=_slicedToArray(_useState,2),selectMonth=_useState2[0],setSelectMonth=_useState2[1];var _useState3=useState(initDay),_useState4=_slicedToArray(_useState3,2),selectDay=_useState4[0],setSelectDay=_useState4[1];var classes=useStyles();var dayMonths30=['04','06','09','11'];var updateDate=function updateDate(newMonth,newDay){var newdate=[\"2019\",newMonth,newDay].join(\"-\");inputContext.updateInputParams(_defineProperty({},dateParam,newdate));};var handleChangeMonth=function handleChangeMonth(){return function(event){var newMonth=event.target.value;setSelectMonth(newMonth);if(selectDay==='31'&&dayMonths30.includes(newMonth)){setSelectDay('30');updateDate(newMonth,'30');}else if(selectDay>='29'&&event.target.value==='02'){setSelectDay('28');updateDate(newMonth,'28');}else{updateDate(newMonth,selectDay);};};};var handleChangeDay=function handleChangeDay(){return function(event){var newDay=event.target.value;setSelectDay(newDay);updateDate(selectMonth,newDay);};};var serialMonthOptions=function serialMonthOptions(){return months.map(function(option,i){return/*#__PURE__*/_jsx(MenuItem,{className:classes.menuitem,value:(\"0\"+(i+1)).slice(-2),children:option},\"m\"+i);});};var serialDayOptions=function serialDayOptions(){var arrlen=31;if(dayMonths30.includes(selectMonth)){arrlen=30;}else if(selectMonth==='02'){arrlen=28;}return Array.from({length:arrlen},function(v,k){return k+1;}).map(function(option,i){return/*#__PURE__*/_jsx(MenuItem,{className:classes.menuitem,value:(\"0\"+(i+1)).slice(-2),children:option},\"d\"+i);});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"fieldset\",{className:classes.dateGroup,children:[/*#__PURE__*/_jsx(\"legend\",{className:classes.dateGroupLegend,children:dateLegend}),/*#__PURE__*/_jsx(TextField,{select:true,value:selectMonth,id:\"selectMonth\",onChange:handleChangeMonth(),className:classes.textfield,margin:\"dense\",SelectProps:{native:false},children:serialMonthOptions()}),!justMonth&&/*#__PURE__*/_jsx(TextField,{select:true,value:selectDay,id:\"selectDay\",onChange:handleChangeDay(),margin:\"dense\",SelectProps:{native:false},children:serialDayOptions()})]})});};export default RenderDate;","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/RenderDate.js"],"names":["React","useState","useContext","TextField","MenuItem","makeStyles","InputParamsContext","months","useStyles","theme","dateGroup","display","border","borderRadius","padding","margin","fontFamily","dateGroupLegend","fontSize","textfield","marginRight","menuitem","paddingTop","paddingBottom","RenderDate","props","dateLegend","dateParam","justMonth","inputContext","inputParams","split","initMonth","initDay","selectMonth","setSelectMonth","selectDay","setSelectDay","classes","dayMonths30","updateDate","newMonth","newDay","newdate","join","updateInputParams","handleChangeMonth","event","target","value","includes","handleChangeDay","serialMonthOptions","map","option","i","slice","serialDayOptions","arrlen","Array","from","length","v","k","native"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { months } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n\tdateGroup: {\n\t\tdisplay: \"inline-block\",\n\t\tborder: \"1px solid rgba(0, 0, 0, 0.23)\",\n\t\tborderRadius: \"4px\",\n\t\tpadding: \"0 0.6em\",\n\t\tmargin: \"0.6em 0 0.6em 0\",\n\t\tfontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n\t},\n\tdateGroupLegend: {\n\t\tfontSize: \"95%\",\n\t},\n\ttextfield: {\n\t\tmarginRight: \"0.5em\",\n\t},\n\tmenuitem: {\n\t\tpaddingTop: \"1px\",\n\t\tpaddingBottom: \"1px\",\n\t},\n}));\n\nconst RenderDate = (props) => {\n\tconst { dateLegend, dateParam, justMonth=false } = props;\n\tconst inputContext = useContext(InputParamsContext);\n\tconst [, initMonth, initDay] = inputContext.inputParams[dateParam].split(\"-\");\n\tconst [selectMonth, setSelectMonth] = useState(initMonth);\n\tconst [selectDay, setSelectDay] = useState(initDay);\n\tconst classes = useStyles();\n\tconst dayMonths30 = ['04','06','09','11'];\n\n\tconst updateDate = (newMonth, newDay) => {\n\t\tconst newdate = [\"2019\", newMonth, newDay].join(\"-\");\n\t\tinputContext.updateInputParams({[dateParam]:newdate});\t\n\t};\n\t\n\tconst handleChangeMonth = () => event => {\n\t\tconst newMonth = event.target.value;\n\t\tsetSelectMonth(newMonth);\n\t\tif (selectDay === '31' && dayMonths30.includes(newMonth)) {\n\t\t\tsetSelectDay('30');\n\t\t\tupdateDate(newMonth, '30');\n\t\t} else if (selectDay >= '29' && event.target.value === '02') {\n\t\t\tsetSelectDay('28');\n\t\t\tupdateDate(newMonth, '28');\n\t\t} else {\n\t\t\tupdateDate(newMonth, selectDay);\n\t\t};\n\t};\n\n\tconst handleChangeDay = () => event => {\n\t\tconst newDay = event.target.value;\n\t\tsetSelectDay(newDay);\n\t\tupdateDate(selectMonth, newDay);\n\t};\n\n\tconst serialMonthOptions = () => {\n\t\treturn (\n\t\t\tmonths.map((option,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem \n\t\t\t\t\t\tkey={\"m\"+i} \n\t\t\t\t\t\tclassName={classes.menuitem}\n\t\t\t\t\t\tvalue={(\"0\" + (i+1)).slice(-2)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t)\n\t\t\t})\n\t\t);\n\t};\t\n\t\n\tconst serialDayOptions = () => {\n\t\tlet arrlen = 31;\n\t\tif (dayMonths30.includes(selectMonth)) {\n\t\t\tarrlen = 30;\n\t\t} else if (selectMonth === '02') {\n\t\t\tarrlen = 28;\n\t\t}\n\t\treturn (\n\t\t\tArray.from({length: arrlen}, (v, k) => k+1).map((option,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem \n\t\t\t\t\t\tkey={\"d\"+i} \n\t\t\t\t\t\tclassName={classes.menuitem}\n\t\t\t\t\t\tvalue={(\"0\" + (i+1)).slice(-2)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t)\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<fieldset className={classes.dateGroup}>\n\t\t\t\t<legend className={classes.dateGroupLegend}>{dateLegend}</legend>\n\t\t\t\t<TextField\n\t\t\t\t\tselect\n\t\t\t\t\tvalue={selectMonth}\n\t\t\t\t\tid=\"selectMonth\"\n\t\t\t\t\tonChange={handleChangeMonth()}\n\t\t\t\t\tclassName={classes.textfield}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\t>\n\t\t\t\t\t{serialMonthOptions()}\n\t\t\t\t</TextField>\n\t\t\t\t{!justMonth &&\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tselect\n\t\t\t\t\t\tvalue={selectDay}\n\t\t\t\t\t\tid=\"selectDay\"\n\t\t\t\t\t\tonChange={handleChangeDay()}\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{serialDayOptions()}\n\t\t\t\t\t</TextField>\n\t\t\t\t}\n\t\t\t</fieldset>\n\t\t</>\n\t)\n}\n\nexport default RenderDate;"]},"metadata":{},"sourceType":"module"}