{"ast":null,"code":"import _defineProperty from\"/Users/kle1/progs/React/normals-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/kle1/progs/React/normals-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/kle1/progs/React/normals-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import clsx from'clsx';import{makeStyles,useTheme}from'@material-ui/core/styles';import Typography from'@material-ui/core/Typography';import useMediaQuery from'@material-ui/core/useMediaQuery';import Banner from'./Banner';import OptionsSelection from'./OptionsSelection';import GetResults from'./GetResults';import InputParamsContext from'./InputParamsContext';import{default_params,drawerWidth}from'../utilities/constants';var useStyles=makeStyles(function(theme){return{drawerHeader:_objectSpread(_objectSpread({display:'flex',alignItems:'center',padding:theme.spacing(0,1)},theme.mixins.toolbar),{},{justifyContent:'flex-end'}),content:{flexGrow:1,padding:theme.spacing(2),transition:theme.transitions.create('margin',{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.leavingScreen}),marginLeft:0},contentShift:{transition:theme.transitions.create('margin',{easing:theme.transitions.easing.easeOut,duration:theme.transitions.duration.enteringScreen}),marginLeft:drawerWidth}};});var Main=function Main(){var classes=useStyles();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),viewMap=_useState4[0],setViewMap=_useState4[1];var _useState5=useState(default_params),_useState6=_slicedToArray(_useState5,2),inputParams=_useState6[0],setInputParams=_useState6[1];var theme=useTheme();var smallScreen=useMediaQuery(theme.breakpoints.down('sm'));var handleDrawerOpen=function handleDrawerOpen(){setOpen(true);};var handleDrawerClose=function handleDrawerClose(){setOpen(false);};var handleViewMapClick=function handleViewMapClick(){setViewMap(true);if(smallScreen){setOpen(false);}};var updateInputParams=function updateInputParams(updateParams){setViewMap(false);var newParams=_objectSpread(_objectSpread({},inputParams),updateParams);setInputParams(newParams);};return/*#__PURE__*/_jsx(InputParamsContext.Provider,{value:{inputParams:inputParams,updateInputParams:updateInputParams},children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"a\",{href:\"#maincontent\",className:\"skip\",children:\"Skip to main content\"}),/*#__PURE__*/_jsx(Banner,{open:open,handleDrawerOpen:handleDrawerOpen}),/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsx(OptionsSelection,{open:open,handleDrawerClose:handleDrawerClose,handleViewMapClick:handleViewMapClick})}),/*#__PURE__*/_jsxs(\"main\",{id:\"maincontent\",children:[/*#__PURE__*/_jsx(\"div\",{className:classes.drawerHeader}),/*#__PURE__*/_jsxs(\"div\",{className:clsx(classes.content,_defineProperty({},classes.contentShift,open)),children:[viewMap&&/*#__PURE__*/_jsx(GetResults,{}),!viewMap&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{paragraph:true,children:\"... Introductory text here, such as ...\"}),/*#__PURE__*/_jsx(Typography,{paragraph:true,children:\"Climate Normals are three-decade averages of climatological variables including temperature and precipitation. These normals are updated once every 10 years. The 1991-2020 U.S. Climate normals dataset is the latest release of NCEI\\u2019s Climate Normals. This initial release of the gridded climate normals dataset contains monthly Normals of temperature (maximum, miminum, average) and precipitation\"}),/*#__PURE__*/_jsx(Typography,{children:\"To view the data contained in the gridded climate normals dataset, set your options in the navigation pane and click the \\\"Submit Request\\\" button to view the results. Buttons will be provided below each resulting product to allow you to download the data in a variety of formats.\"})]})]})]})]})});};export default Main;","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/Main.js"],"names":["React","useState","clsx","makeStyles","useTheme","Typography","useMediaQuery","Banner","OptionsSelection","GetResults","InputParamsContext","default_params","drawerWidth","useStyles","theme","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","Main","classes","open","setOpen","viewMap","setViewMap","inputParams","setInputParams","smallScreen","breakpoints","down","handleDrawerOpen","handleDrawerClose","handleViewMapClick","updateInputParams","updateParams","newParams"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Banner from './Banner';\nimport OptionsSelection from './OptionsSelection';\nimport GetResults from './GetResults';\nimport InputParamsContext from './InputParamsContext';\nimport { default_params, drawerWidth } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: 0,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: drawerWidth,\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [viewMap, setViewMap] = useState(false);\n  const [inputParams, setInputParams] = useState(default_params)\n  const theme = useTheme();\n\tconst smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleViewMapClick = () => {\n    setViewMap(true);\n    if (smallScreen) {\n      setOpen(false);\n    }\n  };\n\n  const updateInputParams = (updateParams) => {\n    setViewMap(false);\n    const newParams = {...inputParams, ...updateParams}\n    setInputParams(newParams);\n  }\n\n  return (\n    <InputParamsContext.Provider value={{ inputParams, updateInputParams }}>\n      <>\n        <a href=\"#maincontent\" className=\"skip\">Skip to main content</a>\n\n        <Banner\n          open={open}\n          handleDrawerOpen={handleDrawerOpen}\n        />\n  \n        <nav>\n          <OptionsSelection\n            open={open}\n            handleDrawerClose={handleDrawerClose}\n            handleViewMapClick={handleViewMapClick}\n          />\n        </nav>\n\n        <main id=\"maincontent\">\n          <div className={classes.drawerHeader}  />\n          <div className={clsx(classes.content, { [classes.contentShift]: open, })}>\n            {viewMap &&\n              <GetResults />\n            }\n            {!viewMap &&\n              <>\n                <Typography paragraph>\n                ... Introductory text here, such as ... \n                </Typography> \n                <Typography paragraph>\n                  Climate Normals are three-decade averages of climatological variables including temperature and precipitation. \n                  These normals are updated once every 10 years. The 1991-2020 U.S. Climate normals dataset is the latest release of \n                  NCEI’s Climate Normals. This initial release of the gridded climate normals dataset contains monthly Normals of \n                  temperature (maximum, miminum, average) and precipitation\n                </Typography>\n                <Typography>\n                  To view the data contained in the gridded climate normals dataset, set your options in the\n                  navigation pane and click the \"Submit Request\" button to view the results. Buttons will be provided below each\n                  resulting product to allow you to download the data in a variety of formats.\n                </Typography>\n                </>\n            }\n          </div>\n        </main>\n\n      </>\n    </InputParamsContext.Provider>\n  )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}