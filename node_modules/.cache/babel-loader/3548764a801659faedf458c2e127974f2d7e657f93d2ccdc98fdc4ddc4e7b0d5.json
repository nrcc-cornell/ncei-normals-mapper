{"ast":null,"code":"var _jsxFileName = \"/Users/keith/progs/React/ncei-normals-mapper/src/components/DateSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { makeStyles } from '@mui/styles';\nimport SeasonSelect from './SeasonSelect';\nimport DateRange from './DateRange';\nimport { months, seasons } from '../utilities/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dateTypeContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    padding: \"1em 1em\"\n  },\n  radioButton: {\n    color: \"midnightblue !important\",\n    paddingRight: \"3px\"\n  },\n  formControl: {\n    marginTop: \"0.5em\"\n  },\n  dateSeperator: {\n    display: \"inline-block\",\n    lineHeight: \"2.5em\",\n    verticalAlign: \"bottom\",\n    margin: \"0.5em 0.5em 0.25em\"\n  }\n}));\nconst DateSelect = props => {\n  _s();\n  const {\n    updateInputParams,\n    inputParams\n  } = props;\n  const [dateType, setDateType] = useState('month');\n  const classes = useStyles();\n  const handleTypeChange = event => {\n    const newDateType = event.target.value;\n    setDateType(newDateType);\n    if (newDateType === 'month') {\n      updateInputParams({\n        sdate: inputParams.edate\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dateTypeContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Select date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Date type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"date type\",\n        name: \"datetype\",\n        value: dateType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"month\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 47\n          }, this),\n          label: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"season\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 48\n          }, this),\n          label: \"Season/Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"interval\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 50\n          }, this),\n          label: \"Interval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), dateType === 'month' && /*#__PURE__*/_jsxDEV(SeasonSelect, {\n      choices: months,\n      label: \"Click to select month\",\n      updateInputParams: updateInputParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), dateType === 'season' && /*#__PURE__*/_jsxDEV(SeasonSelect, {\n      choices: seasons,\n      label: \"Click to select season\",\n      updateInputParams: updateInputParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), dateType === 'interval' && /*#__PURE__*/_jsxDEV(DateRange, {\n      updateInputParams: updateInputParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n_s(DateSelect, \"F9MW5fJT7Ppe4FbAqDt2Cz7mgtk=\", false, function () {\n  return [useStyles];\n});\n_c = DateSelect;\nexport default DateSelect;\nvar _c;\n$RefreshReg$(_c, \"DateSelect\");","map":{"version":3,"names":["React","useState","Typography","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","makeStyles","SeasonSelect","DateRange","months","seasons","jsxDEV","_jsxDEV","useStyles","theme","dateTypeContainer","borderLeft","borderRight","borderBottom","padding","radioButton","color","paddingRight","formControl","marginTop","dateSeperator","display","lineHeight","verticalAlign","margin","DateSelect","props","_s","updateInputParams","inputParams","dateType","setDateType","classes","handleTypeChange","event","newDateType","target","value","sdate","edate","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","component","row","name","onChange","control","size","label","choices","_c","$RefreshReg$"],"sources":["/Users/keith/progs/React/ncei-normals-mapper/src/components/DateSelect.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { makeStyles } from '@mui/styles';\nimport SeasonSelect from './SeasonSelect';\nimport DateRange from './DateRange';\nimport { months, seasons } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n\tdateTypeContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tradioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpaddingRight: \"3px\",\n\t},\n\tformControl: {\n\t\tmarginTop: \"0.5em\",\n\t},\n\tdateSeperator: {\n\t\tdisplay: \"inline-block\",\n\t\tlineHeight: \"2.5em\",\n\t\tverticalAlign: \"bottom\",\n\t\tmargin: \"0.5em 0.5em 0.25em\",\n\t},\n}));\n\nconst DateSelect = (props) => {\n\tconst { updateInputParams, inputParams } = props;\n\tconst [dateType, setDateType] = useState('month');\n\tconst classes = useStyles();\n \n\tconst handleTypeChange = (event) => {\n\t\tconst newDateType = event.target.value;\n\t\tsetDateType(newDateType);\n\t\tif (newDateType === 'month') {\n\t\t\tupdateInputParams({sdate: inputParams.edate});\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div className={classes.dateTypeContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect date\n\t\t\t</Typography>\n\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Date type:</FormLabel>\n\t\t\t\t<RadioGroup row aria-label=\"date type\" name=\"datetype\" value={dateType} onChange={handleTypeChange}>\n\t\t\t\t\t<FormControlLabel value=\"month\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Month\" />\n\t\t\t\t\t<FormControlLabel value=\"season\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Season/Year\" />\n\t\t\t\t\t<FormControlLabel value=\"interval\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Interval\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t{dateType === 'month' &&\n\t\t\t\t<SeasonSelect \n\t\t\t\t\tchoices={months}\n\t\t\t\t\tlabel=\"Click to select month\"\n\t\t\t\t\tupdateInputParams = {updateInputParams}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t{dateType === 'season' &&\n\t\t\t\t<SeasonSelect \n\t\t\t\t\tchoices={seasons}\n\t\t\t\t\tlabel=\"Click to select season\"\n\t\t\t\t\tupdateInputParams = {updateInputParams}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t{dateType === 'interval' &&\n\t\t\t\t<DateRange \n\t\t\t\t\tupdateInputParams = {updateInputParams}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default DateSelect;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,MAAM,EAAEC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAK,KAAM;EACxCC,iBAAiB,EAAE;IAClBC,UAAU,EAAE,wBAAwB;IACpCC,WAAW,EAAE,wBAAwB;IACrCC,YAAY,EAAE,wBAAwB;IACtCC,OAAO,EAAE;EACV,CAAC;EACDC,WAAW,EAAE;IACZC,KAAK,EAAE,yBAAyB;IAChCC,YAAY,EAAE;EACf,CAAC;EACDC,WAAW,EAAE;IACZC,SAAS,EAAE;EACZ,CAAC;EACDC,aAAa,EAAE;IACdC,OAAO,EAAE,cAAc;IACvBC,UAAU,EAAE,OAAO;IACnBC,aAAa,EAAE,QAAQ;IACvBC,MAAM,EAAE;EACT;AACD,CAAC,CAAC,CAAC;AAEH,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IAAEC,iBAAiB;IAAEC;EAAY,CAAC,GAAGH,KAAK;EAChD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAMsC,OAAO,GAAGxB,SAAS,CAAC,CAAC;EAE3B,MAAMyB,gBAAgB,GAAIC,KAAK,IAAK;IACnC,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACtCN,WAAW,CAACI,WAAW,CAAC;IACxB,IAAIA,WAAW,KAAK,OAAO,EAAE;MAC5BP,iBAAiB,CAAC;QAACU,KAAK,EAAET,WAAW,CAACU;MAAK,CAAC,CAAC;IAC9C;EACD,CAAC;EAED,oBACChC,OAAA;IAAKiC,SAAS,EAAER,OAAO,CAACtB,iBAAkB;IAAA+B,QAAA,gBACzClC,OAAA,CAACZ,UAAU;MAAC+C,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAE5B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbvC,OAAA,CAACR,WAAW;MAACgD,SAAS,EAAC,UAAU;MAACP,SAAS,EAAER,OAAO,CAACd,WAAY;MAAAuB,QAAA,gBAChElC,OAAA,CAACP,SAAS;QAAC+C,SAAS,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACpDvC,OAAA,CAACV,UAAU;QAACmD,GAAG;QAAC,cAAW,WAAW;QAACC,IAAI,EAAC,UAAU;QAACZ,KAAK,EAAEP,QAAS;QAACoB,QAAQ,EAAEjB,gBAAiB;QAAAQ,QAAA,gBAClGlC,OAAA,CAACT,gBAAgB;UAACuC,KAAK,EAAC,OAAO;UAACc,OAAO,eAAE5C,OAAA,CAACX,KAAK;YAACwD,IAAI,EAAC,OAAO;YAACZ,SAAS,EAAER,OAAO,CAACjB;UAAY;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACO,KAAK,EAAC;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjHvC,OAAA,CAACT,gBAAgB;UAACuC,KAAK,EAAC,QAAQ;UAACc,OAAO,eAAE5C,OAAA,CAACX,KAAK;YAACwD,IAAI,EAAC,OAAO;YAACZ,SAAS,EAAER,OAAO,CAACjB;UAAY;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACO,KAAK,EAAC;QAAa;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxHvC,OAAA,CAACT,gBAAgB;UAACuC,KAAK,EAAC,UAAU;UAACc,OAAO,eAAE5C,OAAA,CAACX,KAAK;YAACwD,IAAI,EAAC,OAAO;YAACZ,SAAS,EAAER,OAAO,CAACjB;UAAY;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACO,KAAK,EAAC;QAAU;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5G,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAEbhB,QAAQ,KAAK,OAAO,iBACpBvB,OAAA,CAACL,YAAY;MACZoD,OAAO,EAAElD,MAAO;MAChBiD,KAAK,EAAC,uBAAuB;MAC7BzB,iBAAiB,EAAIA;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAEFhB,QAAQ,KAAK,QAAQ,iBACrBvB,OAAA,CAACL,YAAY;MACZoD,OAAO,EAAEjD,OAAQ;MACjBgD,KAAK,EAAC,wBAAwB;MAC9BzB,iBAAiB,EAAIA;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAEFhB,QAAQ,KAAK,UAAU,iBACvBvB,OAAA,CAACJ,SAAS;MACTyB,iBAAiB,EAAIA;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAER,CAAC;AAAAnB,EAAA,CAjDKF,UAAU;EAAA,QAGCjB,SAAS;AAAA;AAAA+C,EAAA,GAHpB9B,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}