{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/GetResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputParamsContext from './InputParamsContext';\nimport { buildParams } from '../utilities/utils';\nimport DisplayMap from \"./DisplayMap\";\nimport DisplayJson from \"./DisplayJson\";\n\nconst GetResults = () => {\n  _s();\n\n  const [mapBlob, setMapBlob] = useState();\n  const [jsonresp, setJsonresp] = useState();\n  const [resultsError, setResultsError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [submittedParams, setSubmittedParams] = useState();\n  const inputContext = useContext(InputParamsContext);\n\n  const fetchResults = (jsonparams, output) => {\n    fetch(\"https://grid2.rcc-acis.org/GridData\", {\n      body: jsonparams,\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        setResultsError(\"Error fetching the results\");\n        return;\n      }\n\n      return output === 'png' ? response.blob() : response.json();\n    }).then(response => {\n      if (output === 'png') {\n        setMapBlob(URL.createObjectURL(response));\n      } else {\n        setJsonresp(response.data);\n      }\n    }).catch(err => {\n      if (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n        setResultsError(\"Invalid grid request - \" + jsonparams);\n      } else {\n        setResultsError(err.message);\n      }\n\n      ;\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true); // Build parameters\n\n    const input = buildParams(inputContext.inputParams);\n    const jsonparams = JSON.stringify(input, null, 2);\n    setSubmittedParams(jsonparams); // Get results\n\n    fetchResults(jsonparams, input.output); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputContext.inputParams]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), submittedParams && (jsonresp || mapBlob) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [mapBlob && /*#__PURE__*/_jsxDEV(DisplayMap, {\n        imgsrc: mapBlob,\n        submittedParams: submittedParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), jsonresp && /*#__PURE__*/_jsxDEV(DisplayJson, {\n        jsonresp: jsonresp,\n        submittedParams: submittedParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true), resultsError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", resultsError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GetResults, \"uY6KHBBZO9L8GZ71aQSiyN7mboo=\");\n\n_c = GetResults;\nexport default GetResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetResults\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/GetResults.js"],"names":["React","useEffect","useState","useContext","CircularProgress","InputParamsContext","buildParams","DisplayMap","DisplayJson","GetResults","mapBlob","setMapBlob","jsonresp","setJsonresp","resultsError","setResultsError","loading","setLoading","submittedParams","setSubmittedParams","inputContext","fetchResults","jsonparams","output","fetch","body","method","headers","then","response","ok","blob","json","URL","createObjectURL","data","catch","err","message","includes","finally","input","inputParams","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext} from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputParamsContext from './InputParamsContext';\nimport { buildParams } from '../utilities/utils';\nimport DisplayMap from \"./DisplayMap\";\nimport DisplayJson from \"./DisplayJson\";\n\nconst GetResults = () => {\n\tconst [mapBlob, setMapBlob] = useState();\n\tconst [jsonresp, setJsonresp] = useState();\n\tconst [resultsError, setResultsError] = useState();\n\tconst [loading, setLoading] = useState(false);\n\tconst [submittedParams, setSubmittedParams] = useState();\n\tconst inputContext = useContext(InputParamsContext);\n\n\tconst fetchResults = (jsonparams, output) => {\n\t\tfetch(\"https://grid2.rcc-acis.org/GridData\", {body: jsonparams, method: \"POST\", headers: {'Content-Type': 'application/json'},})\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tsetResultsError(\"Error fetching the results\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn output === 'png' ? response.blob() : response.json();\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (output === 'png') {\n\t\t\t\t\tsetMapBlob(URL.createObjectURL(response));\n\t\t\t\t} else {\n\t\t\t\t\tsetJsonresp(response.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n\t\t\t\t\tsetResultsError(\"Invalid grid request - \"+jsonparams);\n\t\t\t\t} else {\n\t\t\t\t\tsetResultsError(err.message);\n\t\t\t\t};\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\t// Build parameters\n\t\tconst input = buildParams(inputContext.inputParams);\n\t\tconst jsonparams = JSON.stringify(input, null, 2);\n\t\tsetSubmittedParams(jsonparams);\n\t\t// Get results\n\t\tfetchResults(jsonparams, input.output);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [inputContext.inputParams]);\n\n\treturn (\n\t\t<>\n\t\t\t{loading &&\n\t\t\t\t<CircularProgress />\n\t\t\t}\n\t\t\t{submittedParams && (jsonresp || mapBlob) &&\n\t\t\t\t<>\n\t\t\t\t\t{mapBlob &&\n\t\t\t\t\t\t<DisplayMap \n\t\t\t\t\t\t\timgsrc={mapBlob}\n\t\t\t\t\t\t\tsubmittedParams={submittedParams}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t{jsonresp &&\n\t\t\t\t\t\t<DisplayJson\n\t\t\t\t\t\t\tjsonresp={jsonresp}\n\t\t\t\t\t\t\tsubmittedParams={submittedParams}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{resultsError &&\n\t\t\t\t<p>Error: {resultsError}</p>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default GetResults;"]},"metadata":{},"sourceType":"module"}