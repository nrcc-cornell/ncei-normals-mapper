{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/DisplayMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DisplayRequest from './DisplayRequest';\nimport { downloadFile, downloadFetch } from '../utilities/utils';\nimport LeafletMap from './LeafletMap';\nimport MapTitle from './MapTitle';\nimport MapLegend from './MapLegend';\nconst useStyles = makeStyles(theme => ({\n  downloadButton: {\n    margin: \"0 0.4em\"\n  },\n  mapImage: {\n    width: \"100%\"\n  },\n  mapTitleContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    padding: \"0.5em\",\n    marginBottom: \"1em\"\n  }\n}));\n\nconst DisplayMap = props => {\n  _s();\n\n  const {\n    imgsrc,\n    submittedParams,\n    imgInfo\n  } = props;\n  const [showParams, setShowParams] = useState(false);\n  const classes = useStyles();\n\n  const handleDownPngClick = () => {\n    downloadFile(imgsrc, 'normalsImage.png');\n  };\n\n  const handleDownTifClick = () => {\n    downloadFetch(submittedParams, 'normalsGeo.tif', 'geotiff');\n  };\n\n  const handleDownJsonClick = () => {\n    downloadFetch(submittedParams, 'normalsData.json', 'json');\n  };\n\n  const handleShowParamsClick = () => {\n    setShowParams(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mapContainer\",\n    children: [/*#__PURE__*/_jsxDEV(LeafletMap, {\n      imgsrc: imgsrc,\n      dataBbox: imgInfo ? imgInfo.data_bbox : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mapTitleContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(MapTitle, {\n            submittedParams: submittedParams\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: imgInfo && /*#__PURE__*/_jsxDEV(MapLegend, {\n            imgInfo: imgInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      onClick: handleDownPngClick,\n      children: \"Download image (png)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      onClick: handleDownTifClick,\n      children: \"Download image (geotiff)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      onClick: handleDownJsonClick,\n      children: \"Download data (json)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: classes.downloadButton,\n      onClick: handleShowParamsClick,\n      children: \"Display request (json)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), showParams && /*#__PURE__*/_jsxDEV(DisplayRequest, {\n      submittedParams: submittedParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DisplayMap, \"bnjlFlTWrUoMjn/Ww7NpMzgZwdw=\", false, function () {\n  return [useStyles];\n});\n\n_c = DisplayMap;\nexport default DisplayMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayMap\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/DisplayMap.js"],"names":["React","useState","Button","makeStyles","Grid","DisplayRequest","downloadFile","downloadFetch","LeafletMap","MapTitle","MapLegend","useStyles","theme","downloadButton","margin","mapImage","width","mapTitleContainer","borderLeft","borderRight","borderBottom","padding","marginBottom","DisplayMap","props","imgsrc","submittedParams","imgInfo","showParams","setShowParams","classes","handleDownPngClick","handleDownTifClick","handleDownJsonClick","handleShowParamsClick","prev","data_bbox"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DisplayRequest from './DisplayRequest';\nimport { downloadFile, downloadFetch } from '../utilities/utils';\nimport LeafletMap from './LeafletMap';\nimport MapTitle from './MapTitle';\nimport MapLegend from './MapLegend';\n\nconst useStyles = makeStyles((theme) => ({\n\tdownloadButton: {\n\t\tmargin: \"0 0.4em\",\n\t},\n\tmapImage: {\n\t\twidth: \"100%\",\n\t},\n\tmapTitleContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tpadding: \"0.5em\",\n\t\tmarginBottom: \"1em\",\n\t},\n}));\n\nconst DisplayMap = (props) => {\n\tconst { imgsrc, submittedParams, imgInfo } = props;\n\tconst [showParams, setShowParams] = useState(false);\n\tconst classes = useStyles();\n\n\tconst handleDownPngClick = () => {\n\t\tdownloadFile(imgsrc, 'normalsImage.png');\n\t};\n\n\tconst handleDownTifClick = () => {\n\t\tdownloadFetch(submittedParams, 'normalsGeo.tif', 'geotiff');\n\t}\n\n\tconst handleDownJsonClick = () => {\n\t\tdownloadFetch(submittedParams, 'normalsData.json', 'json');\n\t}\n\n\tconst handleShowParamsClick = () => {\n\t\tsetShowParams(prev => !prev);\n\t};\n\n\treturn (\n\t\t<div id=\"mapContainer\">\n\t\t\t<LeafletMap \n\t\t\t\timgsrc={imgsrc}\n\t\t\t\tdataBbox={imgInfo ? imgInfo.data_bbox : null}\n\t\t\t/>\n\t\t\t<div className={classes.mapTitleContainer}>\n\n\t\t\t<Grid container spacing={1}>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<MapTitle \n\t\t\t\t\t\tsubmittedParams={submittedParams}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t{imgInfo &&\n\t\t\t\t\t\t<MapLegend \n\t\t\t\t\t\t\timgInfo={imgInfo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\n\t\t\t</div>\n\t\t\t<Button variant=\"contained\" size=\"small\" className={classes.downloadButton} onClick={handleDownPngClick}>Download image (png)</Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" className={classes.downloadButton} onClick={handleDownTifClick}>Download image (geotiff)</Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" className={classes.downloadButton} onClick={handleDownJsonClick}>Download data (json)</Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" className={classes.downloadButton} onClick={handleShowParamsClick}>Display request (json)</Button>\n\t\t\t<br />\n\t\t\t{showParams &&\n\t\t\t\t<DisplayRequest \n\t\t\t\t\tsubmittedParams={submittedParams}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default DisplayMap;\n"]},"metadata":{},"sourceType":"module"}