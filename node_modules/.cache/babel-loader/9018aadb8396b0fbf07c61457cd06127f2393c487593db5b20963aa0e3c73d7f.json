{"ast":null,"code":"import _slicedToArray from\"/Users/keith/git/ncei-normals-mapper/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useContext}from'react';import Typography from'@mui/material/Typography';import Radio from'@mui/material/Radio';import RadioGroup from'@mui/material/RadioGroup';import FormControlLabel from'@mui/material/FormControlLabel';import FormControl from'@mui/material/FormControl';import FormLabel from'@mui/material/FormLabel';import{makeStyles}from'@mui/styles';import InputParamsContext from'./InputParamsContext';import SeasonSelect from'./SeasonSelect';import RenderDate from'./RenderDate';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{dateTypeContainer:{borderLeft:\"1pt solid midnightblue\",borderRight:\"1pt solid midnightblue\",borderBottom:\"1pt solid midnightblue\",padding:\"1em 1em\"},radioButton:{color:\"midnightblue !important\",paddingRight:\"3px\"},formControl:{marginTop:\"0.5em\"},dateSeperator:{display:\"inline-block\",lineHeight:\"2.5em\",verticalAlign:\"bottom\",margin:\"0.5em 0.5em 0.25em\"}};});var DateSelect=function DateSelect(){var _useState=useState('month'),_useState2=_slicedToArray(_useState,2),dateType=_useState2[0],setDateType=_useState2[1];var classes=useStyles();var inputContext=useContext(InputParamsContext);var handleTypeChange=function handleTypeChange(event){var newDateType=event.target.value;setDateType(newDateType);if(newDateType==='month'){inputContext.updateInputParams({sdate:inputContext.inputParams.edate});}};return/*#__PURE__*/_jsxs(\"div\",{className:classes.dateTypeContainer,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Select date\"}),/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",className:classes.formControl,children:[/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",children:\"Date type:\"}),/*#__PURE__*/_jsxs(RadioGroup,{row:true,\"aria-label\":\"date type\",name:\"datetype\",value:dateType,onChange:handleTypeChange,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"month\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.radioButton}),label:\"Month\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"season\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.radioButton}),label:\"Season/Year\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"interval\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.radioButton}),label:\"Interval\"})]})]}),dateType==='interval'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RenderDate,{dateLegend:\"Start month\",dateParam:\"sdate\",id:\"select-smonth\",justMonth:true}),/*#__PURE__*/_jsx(Typography,{className:classes.dateSeperator,children:\"-\"}),/*#__PURE__*/_jsx(RenderDate,{dateLegend:\"End month\",dateParam:\"edate\",id:\"select-emonth\",justMonth:true})]}),dateType==='month'&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(RenderDate,{dateLegend:\"Month\",dateParam:\"date\",id:\"select-month\",justMonth:true})}),dateType==='season'&&/*#__PURE__*/_jsx(SeasonSelect,{})]});};export default DateSelect;/*\n\t\tnewElems[0] = {...newElems[0], interval: newDateType === 'month' ? [0,1] : [0,0,1], duration: newDateType === 'interval' ? null : 1} // \"interval\" duration set in Getimage\n\t\t\t\t\t<FormControlLabel value=\"day\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Day\" />\n\n\t\t\t{dateType === 'day' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Date'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tdateType === 'interval' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Start date'\n\t\t\t\t\t\tdateParam='sdate'\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography className={classes.dateSeperator}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<RenderDate \n\t\t\t\t\t\tdateLegend='End date'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\n*/","map":{"version":3,"names":["React","useState","useContext","Typography","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","makeStyles","InputParamsContext","SeasonSelect","RenderDate","jsx","_jsx","jsxs","_jsxs","useStyles","theme","dateTypeContainer","borderLeft","borderRight","borderBottom","padding","radioButton","color","paddingRight","formControl","marginTop","dateSeperator","display","lineHeight","verticalAlign","margin","DateSelect","_useState","_useState2","_slicedToArray","dateType","setDateType","classes","inputContext","handleTypeChange","event","newDateType","target","value","updateInputParams","sdate","inputParams","edate","className","children","variant","component","row","name","onChange","control","size","label","dateLegend","dateParam","id","justMonth"],"sources":["/Users/keith/git/ncei-normals-mapper/src/components/DateSelect.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { makeStyles } from '@mui/styles';\nimport InputParamsContext from './InputParamsContext';\nimport SeasonSelect from './SeasonSelect';\nimport RenderDate from './RenderDate';\n\nconst useStyles = makeStyles((theme) => ({\n\tdateTypeContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tradioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpaddingRight: \"3px\",\n\t},\n\tformControl: {\n\t\tmarginTop: \"0.5em\",\n\t},\n\tdateSeperator: {\n\t\tdisplay: \"inline-block\",\n\t\tlineHeight: \"2.5em\",\n\t\tverticalAlign: \"bottom\",\n\t\tmargin: \"0.5em 0.5em 0.25em\",\n\t},\n}));\n\nconst DateSelect = () => {\n\tconst [dateType, setDateType] = useState('month');\n\tconst classes = useStyles();\n\tconst inputContext = useContext(InputParamsContext);\n \n\tconst handleTypeChange = (event) => {\n\t\tconst newDateType = event.target.value;\n\t\tsetDateType(newDateType);\n\t\tif (newDateType === 'month') {\n\t\t\tinputContext.updateInputParams({sdate: inputContext.inputParams.edate});\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div className={classes.dateTypeContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect date\n\t\t\t</Typography>\n\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Date type:</FormLabel>\n\t\t\t\t<RadioGroup row aria-label=\"date type\" name=\"datetype\" value={dateType} onChange={handleTypeChange}>\n\t\t\t\t\t<FormControlLabel value=\"month\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Month\" />\n\t\t\t\t\t<FormControlLabel value=\"season\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Season/Year\" />\n\t\t\t\t\t<FormControlLabel value=\"interval\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Interval\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t{dateType === 'interval' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Start month'\n\t\t\t\t\t\tdateParam='sdate'\n\t\t\t\t\t\tid=\"select-smonth\"\n\t\t\t\t\t\tjustMonth={true}\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography className={classes.dateSeperator}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<RenderDate \n\t\t\t\t\t\tdateLegend='End month'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t\tid=\"select-emonth\"\n\t\t\t\t\t\tjustMonth={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{dateType === 'month' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Month'\n\t\t\t\t\t\tdateParam='date'\n\t\t\t\t\t\tid=\"select-month\"\n\t\t\t\t\t\tjustMonth={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t}\n\t\t\t{dateType === 'season' &&\n\t\t\t\t<SeasonSelect />\n\t\t}\n\t\t</div>\n\t)\n}\n\nexport default DateSelect;\n\n/*\n\t\tnewElems[0] = {...newElems[0], interval: newDateType === 'month' ? [0,1] : [0,0,1], duration: newDateType === 'interval' ? null : 1} // \"interval\" duration set in Getimage\n\t\t\t\t\t<FormControlLabel value=\"day\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Day\" />\n\n\t\t\t{dateType === 'day' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Date'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tdateType === 'interval' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Start date'\n\t\t\t\t\t\tdateParam='sdate'\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography className={classes.dateSeperator}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<RenderDate \n\t\t\t\t\t\tdateLegend='End date'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}