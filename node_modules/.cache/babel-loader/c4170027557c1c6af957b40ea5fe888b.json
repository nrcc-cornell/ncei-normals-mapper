{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/CountySelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputParamsContext from './InputParamsContext';\n\nconst CountySelect = props => {\n  _s();\n\n  const {\n    postals\n  } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [counties, setCounties] = useState();\n  const [fetchError, setFetchError] = useState();\n  const [loading, setLoading] = useState(false);\n  const inputContext = useContext(InputParamsContext);\n\n  const fetchGeneral = postals => {\n    const jsonparams = JSON.stringify({\n      state: postals,\n      meta: \"name,id\"\n    });\n    setCounties(null);\n\n    if (postals.length >= 2) {\n      fetch(\"https://data.rcc-acis.org/General/county\", {\n        body: jsonparams,\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (!response.ok) {\n          setFetchError(\"Error fetching the list\");\n          return;\n        }\n\n        return response.json();\n      }).then(response => {\n        if (response.meta && response.meta.length) {\n          setCounties(response.meta);\n        } else {\n          setFetchError(\"No county list for \" + postals);\n        }\n      }).catch(err => {\n        if (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n          setFetchError(\"Invalid request\");\n        } else {\n          setFetchError(err.message);\n        }\n\n        ;\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setFetchError(\"Specify valid state above\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Reset \n    setFetchError();\n    setLoading(true); // Get list\n\n    fetchGeneral(postals); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [postals]);\n\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    inputContext.updateInputParams({\n      county: counties[index].id\n    });\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [counties && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        \"aria-label\": \"County selection\",\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          \"aria-haspopup\": \"true\",\n          \"aria-controls\": \"county-menu\",\n          \"aria-label\": \"selected county\",\n          onClick: handleClickListItem,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Click to select county\",\n            secondary: counties[selectedIndex].name.replace(/County|Parish/gi, \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"county-menu\",\n        anchorEl: anchorEl,\n        keepMounted: true,\n        open: Boolean(anchorEl),\n        onClose: handleClose,\n        children: counties.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: index === selectedIndex,\n          onClick: event => handleMenuItemClick(event, index),\n          children: option.name.replace(/County|Parish/gi, \"\")\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: \"1em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CountySelect, \"9YkemuWyhfi2fU3bWYFc6+OX2JA=\");\n\n_c = CountySelect;\nexport default CountySelect;\n/*\nRequest URL: http://data.rcc-acis.org/General/county\n{state: \"ny\", meta: \"name,bbox\"}\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CountySelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/CountySelect.js"],"names":["React","useEffect","useState","useContext","List","ListItem","ListItemText","Menu","MenuItem","CircularProgress","InputParamsContext","CountySelect","props","postals","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","counties","setCounties","fetchError","setFetchError","loading","setLoading","inputContext","fetchGeneral","jsonparams","JSON","stringify","state","meta","length","fetch","body","method","headers","then","response","ok","json","catch","err","message","includes","finally","handleClickListItem","event","currentTarget","handleMenuItemClick","index","updateInputParams","county","id","handleClose","name","replace","Boolean","map","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputParamsContext from './InputParamsContext';\n\nconst CountySelect = (props) => {\n\tconst { postals } = props;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [counties, setCounties] = useState();\n    const [fetchError, setFetchError] = useState();\n\tconst [loading, setLoading] = useState(false);\n\tconst inputContext = useContext(InputParamsContext);\n\n    const fetchGeneral = (postals) => {\n        const jsonparams = JSON.stringify({state: postals, meta: \"name,id\"});\n        setCounties(null);\n        if (postals.length >= 2) {\n            fetch(\"https://data.rcc-acis.org/General/county\", {body: jsonparams, method: \"POST\", headers: {'Content-Type': 'application/json'}})\n                .then(response => {\n                    if (!response.ok) {\n                        setFetchError(\"Error fetching the list\");\n                        return;\n                    }\n                    return response.json()\n                })\n                .then(response => {\n                    if (response.meta && response.meta.length) {\n                        setCounties(response.meta);\n                    } else {\n                        setFetchError(\"No county list for \"+postals);\n                    }\n                })\n                .catch(err => {\n                    if (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n                        setFetchError(\"Invalid request\");\n                    } else {\n                        setFetchError(err.message);\n                    };\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        } else {\n            \n            setFetchError(\"Specify valid state above\");\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n\t\t// Reset \n\t\tsetFetchError();\n\t\tsetLoading(true);\n        // Get list\n        fetchGeneral(postals);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [ postals ]);\n\t\n\tconst handleClickListItem = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleMenuItemClick = (event, index) => {\n\t\tsetSelectedIndex(index);\n\t\tsetAnchorEl(null);\n\t\tinputContext.updateInputParams({county: counties[index].id});\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n        <>\n        {counties &&\n            <>\n            <List aria-label=\"County selection\">\n                <ListItem\n                    button\n                    aria-haspopup=\"true\"\n                    aria-controls=\"county-menu\"\n                    aria-label=\"selected county\"\n                    onClick={handleClickListItem}\n                >\n                    <ListItemText primary=\"Click to select county\" secondary={counties[selectedIndex].name.replace(/County|Parish/gi,\"\")} />\n                </ListItem>\n            </List>\n            <Menu\n                id=\"county-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose} \n            >\n                {counties.map((option, index) => (\n                    <MenuItem\n                        key={option.id}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {option.name.replace(/County|Parish/gi,\"\")}\n                    </MenuItem>\n                ))}\n            </Menu>\n            </>\n        }\n        {loading &&\n            <CircularProgress size=\"1em\" />\n        }\n        {fetchError &&\n            <p>{fetchError}</p>\n        }\n        </>\n\t);\n };\n\nexport default CountySelect;\n\n/*\nRequest URL: http://data.rcc-acis.org/General/county\n{state: \"ny\", meta: \"name,bbox\"}\n\n*/\n"]},"metadata":{},"sourceType":"module"}