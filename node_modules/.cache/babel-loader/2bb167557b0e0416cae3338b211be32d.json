{"ast":null,"code":"import _slicedToArray from\"/Users/kle1/progs/React/ncei-normals-leaflet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState,useContext,useEffect}from'react';import OutlinedInput from'@material-ui/core/OutlinedInput';import InputLabel from'@material-ui/core/InputLabel';import FormLabel from'@material-ui/core/FormLabel';import FormControl from'@material-ui/core/FormControl';import{makeStyles}from'@material-ui/core/styles';import InfoAdornment from'./InfoAdornment';import{infoText}from'../utilities/constants';import InputParamsContext from'./InputParamsContext';var useStyles=makeStyles(function(theme){return{locInputLabel:{color:\"rgba(0,0,0,0.87)\"},locFormControl:{width:\"30%\",marginRight:\"0.5em\"},locTitle:{marginBottom:\"0.75em\"},inputAdornmentClass:{display:\"inline-flex\",verticalAlign:\"text-bottom\"}};});var PointSelect=function PointSelect(){var inputContext=useContext(InputParamsContext);var _useState=useState(['','']),_useState2=_slicedToArray(_useState,2),loc=_useState2[0],setLoc=_useState2[1];var classes=useStyles();var handleChange=function handleChange(event,index){var newLoc=loc;var newValue=event.target.value;if(index===0&&newValue>0){newValue=newValue*-1.0;}newLoc[index]=newValue;setLoc(newLoc);inputContext.updateInputParams({areaDef:{loc:newLoc}});};useEffect(function(){inputContext.updateInputParams({areaDef:{loc:['','']}});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormControl,{size:\"small\",className:classes.locTitle,children:/*#__PURE__*/_jsx(FormLabel,{children:\"Specify point in decimal degrees:\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",size:\"small\",className:classes.locFormControl,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"locInputW\",className:classes.locInputLabel,children:\"Longitude\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:loc[0],id:\"ptlon\",label:\"Longitude\",onChange:function onChange(event){return handleChange(event,0);}})]}),/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",size:\"small\",className:classes.locFormControl,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"locInputS\",className:classes.locInputLabel,children:\"Latitude\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:loc[1],id:\"ptlat\",label:\"Latitude\",onChange:function onChange(event){return handleChange(event,1);}})]}),/*#__PURE__*/_jsx(InfoAdornment,{content:infoText.loc,inputAdornmentClass:classes.inputAdornmentClass,edge:\"start\"})]});};export default PointSelect;","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-leaflet/src/components/PointSelect.js"],"names":["React","useState","useContext","useEffect","OutlinedInput","InputLabel","FormLabel","FormControl","makeStyles","InfoAdornment","infoText","InputParamsContext","useStyles","theme","locInputLabel","color","locFormControl","width","marginRight","locTitle","marginBottom","inputAdornmentClass","display","verticalAlign","PointSelect","inputContext","loc","setLoc","classes","handleChange","event","index","newLoc","newValue","target","value","updateInputParams","areaDef"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoAdornment from './InfoAdornment';\nimport { infoText } from '../utilities/constants';\nimport InputParamsContext from './InputParamsContext';\n\nconst useStyles = makeStyles((theme) => ({\n\tlocInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n    },\n    locFormControl: {\n        width: \"30%\",\n        marginRight: \"0.5em\",\n    },\n    locTitle: {\n        marginBottom: \"0.75em\",\n    },\n    inputAdornmentClass: {\n        display: \"inline-flex\",\n        verticalAlign: \"text-bottom\",\n    }\n}));\n\nconst PointSelect = () => {\n    const inputContext = useContext(InputParamsContext);\n    const [loc, setLoc] = useState(['','']);\n    const classes = useStyles();\n\n    const handleChange = (event, index) => {\n        const newLoc = loc;\n        let newValue = event.target.value;\n        if (index === 0 && newValue > 0) {\n            newValue = newValue * -1.0\n        }\n        newLoc[index] = newValue;\n\t\tsetLoc(newLoc);\n\t\tinputContext.updateInputParams({areaDef: {loc:newLoc}});\t\n    };\n    \n    useEffect(() => {\n        inputContext.updateInputParams({areaDef: {loc:['','']}});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <>\n            <FormControl size=\"small\" className={classes.locTitle}>\n                <FormLabel>Specify point in decimal degrees:</FormLabel>\n            </FormControl>\n            <br />\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.locFormControl}>\n                <InputLabel htmlFor=\"locInputW\" className={classes.locInputLabel}>Longitude</InputLabel>\n                <OutlinedInput\n                    value={loc[0]}\n                    id=\"ptlon\"\n                    label=\"Longitude\"\n                    onChange={(event) => handleChange(event, 0)}\n                />\n             </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.locFormControl}>\n                <InputLabel htmlFor=\"locInputS\" className={classes.locInputLabel}>Latitude</InputLabel>\n                <OutlinedInput\n                    value={loc[1]}\n                    id=\"ptlat\"\n                    label=\"Latitude\"\n                    onChange={(event) => handleChange(event, 1)}\n                />\n            </FormControl>\n\n             <InfoAdornment \n                content={infoText.loc} \n                inputAdornmentClass={classes.inputAdornmentClass} \n                edge=\"start\"\n            />\n        </>\n        );\n    }\n\nexport default PointSelect;\n"]},"metadata":{},"sourceType":"module"}