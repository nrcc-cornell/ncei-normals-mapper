{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/DisplayJson.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  preContainer: {\n    display: \"inline-block\",\n    padding: \"0 1em\",\n    margin: \"0 0 0.5em\"\n  },\n  preStyle: {\n    marginTop: 0\n  }\n}));\n\nconst DisplayJson = props => {\n  _s();\n\n  const {\n    jsonresp,\n    submittedParams\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      className: classes.preContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: classes.preStyle,\n        children: JSON.stringify(jsonresp[0], null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DisplayJson, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DisplayJson;\nexport default DisplayJson;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayJson\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/DisplayJson.js"],"names":["React","useEffect","useState","useContext","Paper","Typography","makeStyles","useStyles","theme","preContainer","display","padding","margin","preStyle","marginTop","DisplayJson","props","jsonresp","submittedParams","classes","JSON","stringify"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACxCC,EAAAA,YAAY,EAAE;AACbC,IAAAA,OAAO,EAAC,cADK;AAEbC,IAAAA,OAAO,EAAC,OAFK;AAGbC,IAAAA,MAAM,EAAE;AAHK,GAD0B;AAMxCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AAN8B,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAgCF,KAAtC;AACA,QAAMG,OAAO,GAAGZ,SAAS,EAAzB;AAGG,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,UAAf;AAA0B,MAAA,SAAS,EAAEY,OAAO,CAACV,YAA7C;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAEU,OAAO,CAACN,QAAxB;AAAA,kBACKO,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAAC,CAAD,CAAvB,EAA4B,IAA5B,EAAkC,CAAlC;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADJ;AAcH,CAnBD;;GAAMF,W;UAEWR,S;;;KAFXQ,W;AAqBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState, useContext} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n\tpreContainer: {\n\t\tdisplay:\"inline-block\", \n\t\tpadding:\"0 1em\",\n\t\tmargin: \"0 0 0.5em\",\n\t},\n\tpreStyle: {\n\t\tmarginTop: 0,\n\t},\n}));\n\nconst DisplayJson = (props) => {\n\tconst { jsonresp, submittedParams } = props;\n\tconst classes = useStyles();\n\n\n    return (\n        <>\n            <Paper variant=\"outlined\" className={classes.preContainer}>\n                <Typography variant=\"subtitle1\">\n                    Results:\n                </Typography>\n                <pre className={classes.preStyle}>\n                    {JSON.stringify(jsonresp[0], null, 2)}\n                </pre>\n                \n            </Paper>\n            <br />\n        </>\n    );\n}\n\nexport default DisplayJson;"]},"metadata":{},"sourceType":"module"}