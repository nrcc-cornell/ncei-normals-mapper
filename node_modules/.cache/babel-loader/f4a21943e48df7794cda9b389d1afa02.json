{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/DateSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport RenderDate from './RenderDate';\nconst useStyles = makeStyles(theme => ({\n  dateTypeContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    padding: \"1em 1em\"\n  },\n  radioButton: {\n    color: \"midnightblue !important\",\n    paddingRight: \"3px\"\n  },\n  formControl: {\n    marginTop: \"0.5em\"\n  },\n  dateSeperator: {\n    display: \"inline-block\",\n    lineHeight: \"4.4em\",\n    verticalAlign: \"bottom\",\n    marginRight: \"0.25em\",\n    marginLeft: \"0.25em\"\n  }\n}));\n\nconst DateSelect = () => {\n  _s();\n\n  const [dateType, setDateType] = useState('month');\n  const classes = useStyles();\n  const inputContext = useContext(InputParamsContext);\n\n  const handleTypeChange = event => {\n    const newDateType = event.target.value;\n    setDateType(newDateType);\n    const newElems = inputContext.inputParams.elems;\n    newElems[0] = { ...newElems[0],\n      duration: newDateType === 'month' ? 1 : null\n    }; // \"interval\" duration set in buildParams\n\n    inputContext.updateInputParams({\n      elems: newElems\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dateTypeContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Select date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Date type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"date type\",\n        name: \"datetype\",\n        value: dateType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"month\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 47\n          }, this),\n          label: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"season\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 48\n          }, this),\n          label: \"Season/Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"interval\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 50\n          }, this),\n          label: \"Interval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), dateType === 'interval' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RenderDate, {\n        dateLegend: \"Start month\",\n        dateParam: \"sdate\",\n        justMonth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.dateSeperator,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(RenderDate, {\n        dateLegend: \"End month\",\n        dateParam: \"edate\",\n        justMonth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), dateType === 'month' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RenderDate, {\n        dateLegend: \"Month\",\n        dateParam: \"edate\",\n        justMonth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DateSelect, \"WxsROYUzEBJcLGqRV528j4S/5x0=\", false, function () {\n  return [useStyles];\n});\n\n_c = DateSelect;\nexport default DateSelect;\n/*\n\t\tnewElems[0] = {...newElems[0], interval: newDateType === 'month' ? [0,1] : [0,0,1], duration: newDateType === 'interval' ? null : 1} // \"interval\" duration set in Getimage\n\t\t\t\t\t<FormControlLabel value=\"day\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Day\" />\n\n\t\t\t{dateType === 'day' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Date'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tdateType === 'interval' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Start date'\n\t\t\t\t\t\tdateParam='sdate'\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography className={classes.dateSeperator}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<RenderDate \n\t\t\t\t\t\tdateLegend='End date'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"DateSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/DateSelect.js"],"names":["React","useState","useContext","Typography","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","makeStyles","InputParamsContext","RenderDate","useStyles","theme","dateTypeContainer","borderLeft","borderRight","borderBottom","padding","radioButton","color","paddingRight","formControl","marginTop","dateSeperator","display","lineHeight","verticalAlign","marginRight","marginLeft","DateSelect","dateType","setDateType","classes","inputContext","handleTypeChange","event","newDateType","target","value","newElems","inputParams","elems","duration","updateInputParams"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport RenderDate from './RenderDate';\n\nconst useStyles = makeStyles((theme) => ({\n\tdateTypeContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tradioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpaddingRight: \"3px\",\n\t},\n\tformControl: {\n\t\tmarginTop: \"0.5em\",\n\t},\n\tdateSeperator: {\n\t\tdisplay: \"inline-block\",\n\t\tlineHeight: \"4.4em\",\n\t\tverticalAlign: \"bottom\",\n\t\tmarginRight: \"0.25em\",\n\t\tmarginLeft: \"0.25em\",\n\t},\n}));\n\nconst DateSelect = () => {\n\tconst [dateType, setDateType] = useState('month');\n\tconst classes = useStyles();\n\tconst inputContext = useContext(InputParamsContext);\n \n\tconst handleTypeChange = (event) => {\n\t\tconst newDateType = event.target.value;\n\t\tsetDateType(newDateType);\n\t\tconst newElems = inputContext.inputParams.elems;\n\t\tnewElems[0] = {...newElems[0], duration: newDateType === 'month' ? 1 : null} // \"interval\" duration set in buildParams\n\t\tinputContext.updateInputParams({elems: newElems});\n\t};\n\t\n\treturn (\n\t\t<div className={classes.dateTypeContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect date\n\t\t\t</Typography>\n\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Date type:</FormLabel>\n\t\t\t\t<RadioGroup row aria-label=\"date type\" name=\"datetype\" value={dateType} onChange={handleTypeChange}>\n\t\t\t\t\t<FormControlLabel value=\"month\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Month\" />\n\t\t\t\t\t<FormControlLabel value=\"season\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Season/Year\" />\n\t\t\t\t\t<FormControlLabel value=\"interval\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Interval\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t{dateType === 'interval' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Start month'\n\t\t\t\t\t\tdateParam='sdate'\n\t\t\t\t\t\tjustMonth={true}\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography className={classes.dateSeperator}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<RenderDate \n\t\t\t\t\t\tdateLegend='End month'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t\tjustMonth={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{dateType === 'month' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Month'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t\tjustMonth={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t}\n\t\t</div>\n\t)\n}\n\nexport default DateSelect;\n\n/*\n\t\tnewElems[0] = {...newElems[0], interval: newDateType === 'month' ? [0,1] : [0,0,1], duration: newDateType === 'interval' ? null : 1} // \"interval\" duration set in Getimage\n\t\t\t\t\t<FormControlLabel value=\"day\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Day\" />\n\n\t\t\t{dateType === 'day' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Date'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tdateType === 'interval' &&\n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Start date'\n\t\t\t\t\t\tdateParam='sdate'\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography className={classes.dateSeperator}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<RenderDate \n\t\t\t\t\t\tdateLegend='End date'\n\t\t\t\t\t\tdateParam='edate'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\n*/"]},"metadata":{},"sourceType":"module"}