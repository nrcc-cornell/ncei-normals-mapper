{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/BboxSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoAdornment from './InfoAdornment';\nimport { infoText } from '../utilities/constants';\nimport InputParamsContext from './InputParamsContext';\nconst useStyles = makeStyles(theme => ({\n  bboxInputLabel: {\n    color: \"rgba(0,0,0,0.87)\"\n  },\n  bboxFormControl: {\n    width: \"20%\",\n    marginRight: \"0.5em\"\n  },\n  bboxTitle: {\n    marginBottom: \"0.75em\"\n  },\n  inputAdornmentClass: {\n    display: \"inline-flex\",\n    verticalAlign: \"text-bottom\"\n  }\n}));\n\nconst BboxSelect = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext);\n  const [bbox, setBbox] = useState(['', '', '', '']);\n  const classes = useStyles();\n\n  const handleChange = (event, index) => {\n    const newBbox = bbox;\n    let newValue = event.target.value;\n\n    if ((index === 0 || index === 2) && newValue > 0) {\n      newValue = newValue * -1.0;\n    }\n\n    newBbox[index] = newValue;\n    setBbox(newBbox);\n    inputContext.updateInputParams({\n      areaDef: {\n        bbox: newBbox\n      }\n    });\n  };\n\n  useEffect(() => {\n    inputContext.updateInputParams({\n      areaDef: {\n        bbox: ['', '', '', '']\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      size: \"small\",\n      className: classes.bboxTitle,\n      children: /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Specify bounding box in decimal degrees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.bboxFormControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"bboxInputW\",\n        className: classes.bboxInputLabel,\n        children: \"West\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: bbox[0],\n        id: \"bboxInputW\",\n        label: \"West\",\n        onChange: event => handleChange(event, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.bboxFormControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"bboxInputS\",\n        className: classes.bboxInputLabel,\n        children: \"South\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: bbox[1],\n        id: \"bboxInputS\",\n        label: \"South\",\n        onChange: event => handleChange(event, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.bboxFormControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"bboxInputE\",\n        className: classes.bboxInputLabel,\n        children: \"East\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: bbox[2],\n        id: \"bboxInputE\",\n        label: \"East\",\n        onChange: event => handleChange(event, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.bboxFormControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"bboxInputN\",\n        className: classes.bboxInputLabel,\n        children: \"North\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: bbox[3],\n        id: \"bboxInputN\",\n        label: \"North\",\n        onChange: event => handleChange(event, 3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoAdornment, {\n      content: infoText.bbox,\n      inputAdornmentClass: classes.inputAdornmentClass,\n      edge: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BboxSelect, \"uNiTKVfFt/b07VVXd9jjBrG8pbc=\", false, function () {\n  return [useStyles];\n});\n\n_c = BboxSelect;\nexport default BboxSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"BboxSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/BboxSelect.js"],"names":["React","useState","useContext","useEffect","OutlinedInput","InputLabel","FormLabel","FormControl","makeStyles","InfoAdornment","infoText","InputParamsContext","useStyles","theme","bboxInputLabel","color","bboxFormControl","width","marginRight","bboxTitle","marginBottom","inputAdornmentClass","display","verticalAlign","BboxSelect","inputContext","bbox","setBbox","classes","handleChange","event","index","newBbox","newValue","target","value","updateInputParams","areaDef"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoAdornment from './InfoAdornment';\nimport { infoText } from '../utilities/constants';\nimport InputParamsContext from './InputParamsContext';\n\nconst useStyles = makeStyles((theme) => ({\n\tbboxInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n    },\n    bboxFormControl: {\n        width: \"20%\",\n        marginRight: \"0.5em\",\n    },\n    bboxTitle: {\n        marginBottom: \"0.75em\",\n    },\n    inputAdornmentClass: {\n        display: \"inline-flex\",\n        verticalAlign: \"text-bottom\",\n    }\n}));\n\nconst BboxSelect = () => {\n    const inputContext = useContext(InputParamsContext);\n    const [bbox, setBbox] = useState(['','','','']);\n    const classes = useStyles();\n\n    const handleChange = (event, index) => {\n        const newBbox = bbox;\n        let newValue = event.target.value;\n        if ((index === 0 || index === 2) && newValue > 0) {\n            newValue = newValue * -1.0\n        }\n        newBbox[index] = newValue;\n\t\tsetBbox(newBbox);\n\t\tinputContext.updateInputParams({areaDef: {bbox:newBbox}});\t\n    };\n    \n    useEffect(() => {\n        inputContext.updateInputParams({areaDef: {bbox:['','','','']}});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <>\n            <FormControl size=\"small\" className={classes.bboxTitle}>\n                <FormLabel>Specify bounding box in decimal degrees:</FormLabel>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.bboxFormControl}>\n                <InputLabel htmlFor=\"bboxInputW\" className={classes.bboxInputLabel}>West</InputLabel>\n                <OutlinedInput\n                    value={bbox[0]}\n                    id=\"bboxInputW\"\n                    label=\"West\"\n                    onChange={(event) => handleChange(event, 0)}\n                />\n             </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.bboxFormControl}>\n                <InputLabel htmlFor=\"bboxInputS\" className={classes.bboxInputLabel}>South</InputLabel>\n                <OutlinedInput\n                    value={bbox[1]}\n                    id=\"bboxInputS\"\n                    label=\"South\"\n                    onChange={(event) => handleChange(event, 1)}\n                />\n            </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.bboxFormControl}>\n                <InputLabel htmlFor=\"bboxInputE\" className={classes.bboxInputLabel}>East</InputLabel>\n                <OutlinedInput\n                    value={bbox[2]}\n                    id=\"bboxInputE\"\n                    label=\"East\"\n                    onChange={(event) => handleChange(event, 2)}\n                />\n            </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.bboxFormControl}>\n                <InputLabel htmlFor=\"bboxInputN\" className={classes.bboxInputLabel}>North</InputLabel>\n                <OutlinedInput\n                    value={bbox[3]}\n                    id=\"bboxInputN\"\n                    label=\"North\"\n                    onChange={(event) => handleChange(event, 3)}\n                />\n            </FormControl>\n\n            <InfoAdornment \n                content={infoText.bbox} \n                inputAdornmentClass={classes.inputAdornmentClass} \n                edge=\"start\"\n            />\n        </>\n        );\n    }\n\nexport default BboxSelect;\n"]},"metadata":{},"sourceType":"module"}