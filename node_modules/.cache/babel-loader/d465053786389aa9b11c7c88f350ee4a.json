{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/RegionSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { regions } from '../utilities/constants';\nconst useStyles = makeStyles(theme => ({\n  listContainer: {\n    border: \"1pt solid lightgray\"\n  }\n}));\n\nconst RegionSelect = () => {\n  _s();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(12); // default (ME,WV)\n\n  const inputContext = useContext(InputParamsContext);\n  const classes = useStyles();\n\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    inputContext.updateInputParams({\n      areaDef: {\n        state: regions[index].states.replaceAll('-', ',')\n      }\n    });\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    inputContext.updateInputParams({\n      areaDef: {\n        state: regions[selectedIndex].states.replaceAll('-', ',')\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      className: classes.listContainer,\n      \"aria-label\": \"Region selection\",\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"reguib-menu\",\n        \"aria-label\": \"selected region\",\n        onClick: handleClickListItem,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Click to select region\",\n          secondary: \"Currently selected: \" + regions[selectedIndex].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"element-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: regions.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        selected: index === selectedIndex,\n        disabled: option.states < 0,\n        onClick: event => handleMenuItemClick(event, index),\n        children: option.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegionSelect, \"A7xD3OLeoKl8MLGskt7QBZxr4E0=\", false, function () {\n  return [useStyles];\n});\n\n_c = RegionSelect;\nexport default RegionSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/RegionSelect.js"],"names":["React","useContext","useEffect","useState","List","ListItem","ListItemText","Menu","MenuItem","makeStyles","InputParamsContext","regions","useStyles","theme","listContainer","border","RegionSelect","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","inputContext","classes","handleClickListItem","event","currentTarget","handleMenuItemClick","index","updateInputParams","areaDef","state","states","replaceAll","handleClose","name","Boolean","map","option"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { regions } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n\tlistContainer: {\n\t\tborder: \"1pt solid lightgray\",\n\t},\n}));\n\nconst RegionSelect = () => {\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\tconst [selectedIndex, setSelectedIndex] = useState(12);  // default (ME,WV)\n\tconst inputContext = useContext(InputParamsContext);\n\tconst classes = useStyles();\n\n\tconst handleClickListItem = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleMenuItemClick = (event, index) => {\n\t\tsetSelectedIndex(index);\n\t\tsetAnchorEl(null);\n\t\tinputContext.updateInputParams({areaDef: {state:regions[index].states.replaceAll('-',',')}});\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tuseEffect(() => {\n\t\tinputContext.updateInputParams({areaDef: {state:regions[selectedIndex].states.replaceAll('-',',')}});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<List className={classes.listContainer} aria-label=\"Region selection\">\n\t\t\t\t<ListItem\n\t\t\t\t\tbutton\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-controls=\"reguib-menu\"\n\t\t\t\t\taria-label=\"selected region\"\n\t\t\t\t\tonClick={handleClickListItem}\n\t\t\t\t>\n\t\t\t\t\t<ListItemText primary=\"Click to select region\" secondary={\"Currently selected: \"+regions[selectedIndex].name} />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t<Menu\n\t\t\t\tid=\"element-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose} \n\t\t\t>\n\t\t\t\t{regions.map((option, index) => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tselected={index === selectedIndex}\n\t\t\t\t\t\tdisabled={option.states < 0}\n\t\t\t\t\t\tonClick={(event) => handleMenuItemClick(event, index)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option.name}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t</Menu>\n\t\t</>\n\t);\n}\n\nexport default RegionSelect;"]},"metadata":{},"sourceType":"module"}