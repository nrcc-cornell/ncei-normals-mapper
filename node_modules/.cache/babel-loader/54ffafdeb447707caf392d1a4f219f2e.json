{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/MapLegend.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: \"9.2em\"\n  },\n  range: {\n    width: \"8em\"\n  }\n}));\n\nconst MapLegend = props => {\n  _s();\n\n  const {\n    imgInfo\n  } = props;\n  const {\n    levels,\n    cmap\n  } = imgInfo;\n  const [width, setWidth] = useState();\n  const classes = useStyles();\n  const ref = useRef(null);\n  let color_styles = [];\n  let color_styles2 = [];\n  cmap.forEach(color => {\n    color_styles.push({\n      width: \"1.2em\",\n      backgroundColor: color,\n      opacity: \"0.8\"\n    });\n    color_styles2.push({\n      height: \"28px\",\n      backgroundColor: color,\n      opacity: \"0.8\"\n    });\n  });\n  useEffect(() => {\n    const elemWidth = ref.current.offsetWidth;\n    const defaultWidth = cmap.length * 56;\n    setWidth(Math.min(defaultWidth, elemWidth));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        padding: \"none\",\n        style: {\n          width: width\n        },\n        \"aria-label\": \"color table\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: color_styles2.map((cs, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              style: cs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 8\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        padding: \"none\",\n        style: {\n          width: width\n        },\n        \"aria-label\": \"color table\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: levels.map((lv, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: classes.range,\n              children: lv\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapLegend, \"omEcZU4d6dS2YEhf9i01GegezDI=\", false, function () {\n  return [useStyles];\n});\n\n_c = MapLegend;\nexport default MapLegend;\n/*\n\t\t<TableContainer>\n\t\t\t<Table size=\"small\" padding=\"none\" className={classes.table} aria-label=\"color table\">\n\t\t\t\t<TableBody>\n\t\t\t\t\t<TableRow key=\"first\">\n\t\t\t\t\t\t<TableCell style={color_styles[0]}></TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>&lt;{levels[0]}</TableCell> \n\t\t\t\t\t</TableRow>\n\t\t\t\t\t{levels.map((lvl, i) => (\n\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t<TableCell style={color_styles[i+1]}></TableCell>\n\t\t\t\t\t\t\t{levels[i+1] ?\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>{levels[i]} to {levels[i+1]}</TableCell>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>&ge;{levels[i]}</TableCell>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"MapLegend\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/MapLegend.js"],"names":["React","useEffect","useRef","useState","Table","TableBody","TableCell","TableContainer","TableRow","makeStyles","useStyles","theme","table","width","range","MapLegend","props","imgInfo","levels","cmap","setWidth","classes","ref","color_styles","color_styles2","forEach","color","push","backgroundColor","opacity","height","elemWidth","current","offsetWidth","defaultWidth","length","Math","min","map","cs","i","lv"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\ttable: {\n\t\twidth:\"9.2em\",\n\t},\n\trange: {\n\t\twidth:\"8em\",\n\t},\n}));\n\nconst MapLegend = (props) => {\n\tconst { imgInfo } = props;\n\tconst { levels, cmap } = imgInfo;\n\tconst [ width, setWidth ] = useState();\n\tconst classes = useStyles();\n\tconst ref = useRef(null);\n\n\tlet color_styles = [];\n\tlet color_styles2 = [];\n\tcmap.forEach((color) => {\n\t\tcolor_styles.push( { width: \"1.2em\", backgroundColor: color, opacity: \"0.8\"} );\n\t\tcolor_styles2.push( {height: \"28px\", backgroundColor: color, opacity: \"0.8\"} );\n\t})\n\n\tuseEffect(() => {\n\t\tconst elemWidth = ref.current.offsetWidth;\n\t\tconst defaultWidth = cmap.length * 56;\n\t\tsetWidth(Math.min(defaultWidth, elemWidth));\n\t});\n\n\treturn (\n\t\t<>\n\n\t\t<TableContainer ref={ref}>\n\t\t\t<Table size=\"small\" padding=\"none\" style={{width:width}} aria-label=\"color table\">\n\t\t\t\t<TableBody>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t{color_styles2.map((cs, i) => (\n\t\t\t\t\t\t\t<TableCell style={cs}></TableCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableRow>\t\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\n\t\t<TableContainer ref={ref}>\n\t\t\t<Table size=\"small\" padding=\"none\" style={{width:width}} aria-label=\"color table\">\n\t\t\t\t<TableBody>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t{levels.map((lv, i) => (\n\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>{lv}</TableCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableRow>\t\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\n\t\t</>\n\n\n\n\t);\n}\n\nexport default MapLegend;\n\n/*\n\t\t<TableContainer>\n\t\t\t<Table size=\"small\" padding=\"none\" className={classes.table} aria-label=\"color table\">\n\t\t\t\t<TableBody>\n\t\t\t\t\t<TableRow key=\"first\">\n\t\t\t\t\t\t<TableCell style={color_styles[0]}></TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>&lt;{levels[0]}</TableCell> \n\t\t\t\t\t</TableRow>\n\t\t\t\t\t{levels.map((lvl, i) => (\n\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t<TableCell style={color_styles[i+1]}></TableCell>\n\t\t\t\t\t\t\t{levels[i+1] ?\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>{levels[i]} to {levels[i+1]}</TableCell>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<TableCell align=\"center\" className={classes.range}>&ge;{levels[i]}</TableCell>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n*/"]},"metadata":{},"sourceType":"module"}