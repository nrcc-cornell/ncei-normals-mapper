{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/OptionsSelection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    \"&:focus\": {\n      color: \"#3f51b5\",\n      backgroundColor: \"lightblue\"\n    },\n    \"&:hover\": {\n      color: \"#3f51b5\",\n      backgroundColor: \"lightblue\"\n    }\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst OptionsSelection = props => {\n  _s();\n\n  const {\n    open,\n    handleDrawerClose,\n    handleGetMapClick,\n    drawerWidth\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Close drawer\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.menuButton,\n            \"aria-label\": \"close drawer\",\n            onClick: handleDrawerClose,\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Options go here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetMapClick,\n        children: \"Get Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(OptionsSelection, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = OptionsSelection;\nexport default OptionsSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionsSelection\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/OptionsSelection.js"],"names":["React","makeStyles","Divider","Drawer","IconButton","Tooltip","ChevronLeftIcon","useStyles","theme","menuButton","marginRight","spacing","color","backgroundColor","drawer","width","drawerWidth","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","OptionsSelection","props","open","handleDrawerClose","handleGetMapClick","classes","paper"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACrCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAEV,eAAW;AACTC,MAAAA,KAAK,EAAE,SADE;AAETC,MAAAA,eAAe,EAAE;AAFR,KAFD;AAMV,eAAW;AACTD,MAAAA,KAAK,EAAE,SADE;AAETC,MAAAA,eAAe,EAAE;AAFR;AAND,GADyB;AAYrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAEC,WADD;AAENC,IAAAA,UAAU,EAAE;AAFN,GAZ6B;AAgBrCC,EAAAA,WAAW,EAAE;AACXH,IAAAA,KAAK,EAAEC;AADI,GAhBwB;AAmBrCG,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZC,IAAAA,OAAO,EAAEd,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAHG;AAIZ;AACA,OAAGH,KAAK,CAACe,MAAN,CAAaC,OALJ;AAMZC,IAAAA,cAAc,EAAE;AANJ;AAnBuB,CAAZ,CAAD,CAA5B;;AA6BA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,iBAAP;AAA0BC,IAAAA,iBAA1B;AAA6Cd,IAAAA;AAA7C,MAA4DW,KAAlE;AACA,QAAMI,OAAO,GAAGxB,SAAS,EAAzB;AAEA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEwB,OAAO,CAACjB,MADrB;AAEE,MAAA,OAAO,EAAC,YAFV;AAGE,MAAA,MAAM,EAAC,MAHT;AAIE,MAAA,IAAI,EAAEc,IAJR;AAKE,MAAA,OAAO,EAAE;AAAEI,QAAAA,KAAK,EAAED,OAAO,CAACb;AAAjB,OALX;AAAA,8BAOE;AAAK,QAAA,SAAS,EAAEa,OAAO,CAACZ,YAAxB;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,cAAf;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEY,OAAO,CAACtB,UAA/B;AAA2C,0BAAW,cAAtD;AAAqE,YAAA,OAAO,EAAEoB,iBAA9E;AAAA,mCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAQ,QAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsBD,CA1BD;;GAAMJ,gB;UAEYnB,S;;;KAFZmB,gB;AA4BN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      \"&:focus\": {\n        color: \"#3f51b5\",\n        backgroundColor: \"lightblue\",\n      },\n      \"&:hover\": {\n        color: \"#3f51b5\",\n        backgroundColor: \"lightblue\",\n      },\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n  }));\n\nconst OptionsSelection = (props) => {\n  const {open, handleDrawerClose, handleGetMapClick, drawerWidth} = props;\n  const classes = useStyles();\n\n  return (\n    <>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.drawerHeader}>\n          <Tooltip title=\"Close drawer\">\n            <IconButton className={classes.menuButton} aria-label=\"close drawer\" onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <Divider />\n        <p>Options go here</p>\n        <button onClick={handleGetMapClick}>Get Map</button>\n      </Drawer>\n    </>\n  )\n}\n\nexport default OptionsSelection;"]},"metadata":{},"sourceType":"module"}