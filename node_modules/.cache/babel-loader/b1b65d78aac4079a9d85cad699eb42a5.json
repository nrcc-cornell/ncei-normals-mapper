{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/MapTitle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { elements, elementNames, months } from '../utilities/constants';\nconst useStyles = makeStyles(theme => ({\n  titleContainer: {\n    margin: \"0 0 1em\"\n  }\n}));\n\nconst MapTitle = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext); //console.log(inputContext.inputParams);\n\n  const classes = useStyles();\n  const selectedElem = inputContext.inputParams.elems[0].name;\n  const elemInfo = elements.find(elements => elements.name === selectedElem);\n  const selectedDuration = inputContext.inputParams.elems[0].duration;\n  const selectedInterval = inputContext.inputParams.elems[0].interval.length === 3 ? 'Daily' : 'Monthly';\n  const selectedGrid = inputContext.inputParams.grid;\n  const selectedName = elementNames()[selectedElem];\n  const [, smn] = inputContext.inputParams.sdate.split(\"-\");\n  const [, emn] = inputContext.inputParams.edate.split(\"-\");\n  const selectedStart = months[parseInt(smn) - 1];\n  const selectedDate = selectedDuration === 1 ? \"Month of \" + months[parseInt(emn) - 1] : months[parseInt(emn) - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.titleContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [selectedDuration === 1 && selectedInterval + \" \", selectedName, !(selectedInterval === 'Daily' && selectedDuration === 1) && elemInfo.reduce && ' (' + elemInfo.reduce + \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), selectedDuration > 1 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [selectedStart, \" through \", selectedDate, \" (\", selectedDuration, \" months)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), selectedDuration === 1 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"Grid: \", selectedGrid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MapTitle, \"A5NfbII/secXg5jaae97OoXQ1KI=\", false, function () {\n  return [useStyles];\n});\n\n_c = MapTitle;\nexport default MapTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapTitle\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/MapTitle.js"],"names":["React","useContext","Typography","makeStyles","InputParamsContext","elements","elementNames","months","useStyles","theme","titleContainer","margin","MapTitle","inputContext","classes","selectedElem","inputParams","elems","name","elemInfo","find","selectedDuration","duration","selectedInterval","interval","length","selectedGrid","grid","selectedName","smn","sdate","split","emn","edate","selectedStart","parseInt","selectedDate","reduce"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { elements, elementNames, months } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n\ttitleContainer: {\n\t\tmargin: \"0 0 1em\",\n\t},\n}));\n\nconst MapTitle = () => {\n\tconst inputContext = useContext(InputParamsContext);\n    //console.log(inputContext.inputParams);\n    const classes = useStyles();\n    const selectedElem = inputContext.inputParams.elems[0].name;\n    const elemInfo = elements.find((elements) => elements.name === selectedElem);\n    const selectedDuration = inputContext.inputParams.elems[0].duration;\n    const selectedInterval = inputContext.inputParams.elems[0].interval.length === 3 ? 'Daily' : 'Monthly';\n    const selectedGrid =  inputContext.inputParams.grid;\n    const selectedName = elementNames()[selectedElem];\n    const [,smn] = inputContext.inputParams.sdate.split(\"-\");\n    const [,emn] = inputContext.inputParams.edate.split(\"-\");\n    const selectedStart = months[parseInt(smn)-1];\n    const selectedDate = selectedDuration === 1 ? (\"Month of \"+months[parseInt(emn)-1]) : (months[parseInt(emn)-1]);\n\n\treturn (\n\t\t<div className={classes.titleContainer}>\n            <Typography variant=\"h6\">\n                {selectedDuration === 1 && selectedInterval+\" \"}\n                {selectedName} \n                {!(selectedInterval === 'Daily' && selectedDuration === 1) && elemInfo.reduce && ' ('+elemInfo.reduce+\")\"}\n            </Typography>\n            {selectedDuration > 1 &&\n                <Typography variant=\"subtitle1\">\n                   {selectedStart} through {selectedDate} ({selectedDuration} months)\n                </Typography>\n            }\n            {selectedDuration === 1 &&\n                <Typography variant=\"subtitle1\">\n                    {selectedDate}\n                </Typography>\n            }\n            <Typography variant=\"subtitle1\" gutterBottom>\n                Grid: {selectedGrid}\n            </Typography>\n\t\t</div>\n\t);\n}\n\nexport default MapTitle;"]},"metadata":{},"sourceType":"module"}