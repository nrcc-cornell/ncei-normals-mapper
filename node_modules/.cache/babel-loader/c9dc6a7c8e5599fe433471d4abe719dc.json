{"ast":null,"code":"import _slicedToArray from\"/Users/kle1/progs/React/normals-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useEffect,useState,useContext}from\"react\";import CircularProgress from\"@material-ui/core/CircularProgress\";import DisplayMap from\"./DisplayMap\";import InputParamsContext from'./InputParamsContext';import{buildParams}from'../utilities/utils';import MapTitle from'./MapTitle';var GetImage=function GetImage(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),mapBlob=_useState2[0],setMapBlob=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),mapError=_useState4[0],setMapError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),submittedParams=_useState8[0],setSubmittedParams=_useState8[1];var inputContext=useContext(InputParamsContext);var fetchMap=function fetchMap(jsonparams){fetch(\"https://grid2.rcc-acis.org/GridData\",{body:jsonparams,method:\"POST\"}).then(function(response){if(!response.ok){setMapError(\"Error fetching the map\");return;}return response.blob();}).then(function(responseBlob){setMapBlob(URL.createObjectURL(responseBlob));}).catch(function(err){if(err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")){setMapError(\"Invalid grid request - \"+jsonparams);}else{setMapError(err.message);};}).finally(function(){setLoading(false);});};useEffect(function(){// Reset \nsetMapBlob();setMapError();setLoading(true);// Build parameters\nvar jsonparams=buildParams(inputContext.inputParams);setSubmittedParams(jsonparams);// Get map\nfetchMap(jsonparams);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[inputContext.inputParams]);return/*#__PURE__*/_jsxs(_Fragment,{children:[loading&&/*#__PURE__*/_jsx(CircularProgress,{}),mapBlob&&submittedParams&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MapTitle,{}),/*#__PURE__*/_jsx(DisplayMap,{imgsrc:mapBlob}),/*#__PURE__*/_jsx(\"p\",{children:submittedParams})]}),mapError&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",mapError]})]});};export default GetImage;","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/GetImage.js"],"names":["React","useEffect","useState","useContext","CircularProgress","DisplayMap","InputParamsContext","buildParams","MapTitle","GetImage","mapBlob","setMapBlob","mapError","setMapError","loading","setLoading","submittedParams","setSubmittedParams","inputContext","fetchMap","jsonparams","fetch","body","method","then","response","ok","blob","responseBlob","URL","createObjectURL","catch","err","message","includes","finally","inputParams"],"mappings":"0SAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,UAArC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,OAASC,WAAT,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,eACQP,QAAQ,EADhB,wCACfQ,OADe,eACNC,UADM,8BAEUT,QAAQ,EAFlB,yCAEfU,QAFe,eAELC,WAFK,8BAGQX,QAAQ,CAAC,KAAD,CAHhB,yCAGfY,OAHe,eAGNC,UAHM,8BAIwBb,QAAQ,EAJhC,yCAIfc,eAJe,eAIEC,kBAJF,eAKtB,GAAMC,CAAAA,YAAY,CAAGf,UAAU,CAACG,kBAAD,CAA/B,CAEA,GAAMa,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,UAAD,CAAgB,CAChCC,KAAK,CAAC,qCAAD,CAAwC,CAACC,IAAI,CAAEF,UAAP,CAAmBG,MAAM,CAAE,MAA3B,CAAxC,CAAL,CACEC,IADF,CACO,SAAAC,QAAQ,CAAI,CACjB,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CACjBb,WAAW,CAAC,wBAAD,CAAX,CACA,OACA,CACD,MAAOY,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACA,CAPF,EAQEH,IARF,CAQO,SAAAI,YAAY,CAAI,CACpBjB,UAAU,CAACkB,GAAG,CAACC,eAAJ,CAAoBF,YAApB,CAAD,CAAV,CACA,CAVH,EAWEG,KAXF,CAWQ,SAAAC,GAAG,CAAI,CACb,GAAIA,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqB,8CAArB,CAAJ,CAA0E,CACzErB,WAAW,CAAC,0BAA0BO,UAA3B,CAAX,CACA,CAFD,IAEO,CACNP,WAAW,CAACmB,GAAG,CAACC,OAAL,CAAX,CACA,EACD,CAjBF,EAkBEE,OAlBF,CAkBU,UAAM,CACdpB,UAAU,CAAC,KAAD,CAAV,CACA,CApBF,EAqBA,CAtBD,CAwBAd,SAAS,CAAC,UAAM,CACf;AACAU,UAAU,GACVE,WAAW,GACXE,UAAU,CAAC,IAAD,CAAV,CACA;AACA,GAAMK,CAAAA,UAAU,CAAGb,WAAW,CAACW,YAAY,CAACkB,WAAd,CAA9B,CACAnB,kBAAkB,CAACG,UAAD,CAAlB,CACA;AACAD,QAAQ,CAACC,UAAD,CAAR,CACA;AACA,CAXQ,CAWN,CAACF,YAAY,CAACkB,WAAd,CAXM,CAAT,CAaA,mBACC,2BACEtB,OAAO,eACP,KAAC,gBAAD,IAFF,CAIEJ,OAAO,EAAIM,eAAX,eACA,wCACC,KAAC,QAAD,IADD,cAEC,KAAC,UAAD,EACC,MAAM,CAAEN,OADT,EAFD,cAKC,mBAAIM,eAAJ,EALD,GALF,CAaEJ,QAAQ,eACR,+BAAWA,QAAX,GAdF,GADD,CAmBA,CA/DD,CAiEA,cAAeH,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState, useContext} from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DisplayMap from \"./DisplayMap\";\nimport InputParamsContext from './InputParamsContext';\nimport { buildParams } from '../utilities/utils';\nimport MapTitle from './MapTitle';\n\nconst GetImage = () => {\n\tconst [mapBlob, setMapBlob] = useState();\n\tconst [mapError, setMapError] = useState();\n\tconst [loading, setLoading] = useState(false);\n\tconst [submittedParams, setSubmittedParams] = useState();\n\tconst inputContext = useContext(InputParamsContext);\n\n\tconst fetchMap = (jsonparams) => {\n\t\tfetch(\"https://grid2.rcc-acis.org/GridData\", {body: jsonparams, method: \"POST\"})\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tsetMapError(\"Error fetching the map\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn response.blob()\n\t\t\t})\n\t\t\t.then(responseBlob => {\n\t\t\t\t\tsetMapBlob(URL.createObjectURL(responseBlob));\n\t\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n\t\t\t\t\tsetMapError(\"Invalid grid request - \"+jsonparams);\n\t\t\t\t} else {\n\t\t\t\t\tsetMapError(err.message);\n\t\t\t\t};\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\t// Reset \n\t\tsetMapBlob();\n\t\tsetMapError();\n\t\tsetLoading(true);\n\t\t// Build parameters\n\t\tconst jsonparams = buildParams(inputContext.inputParams);\n\t\tsetSubmittedParams(jsonparams);\n\t\t// Get map\n\t\tfetchMap(jsonparams);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [inputContext.inputParams]);\n\n\treturn (\n\t\t<>\n\t\t\t{loading &&\n\t\t\t\t<CircularProgress />\n\t\t\t}\n\t\t\t{mapBlob && submittedParams &&\n\t\t\t\t<>\n\t\t\t\t\t<MapTitle />\n\t\t\t\t\t<DisplayMap \n\t\t\t\t\t\timgsrc={mapBlob}\n\t\t\t\t\t/>\n\t\t\t\t\t<p>{submittedParams}</p>\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{mapError &&\n\t\t\t\t<p>Error: {mapError}</p>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default GetImage;"]},"metadata":{},"sourceType":"module"}