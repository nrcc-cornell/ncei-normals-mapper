{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/MapLegend.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputParamsContext from './InputParamsContext';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  keyContainer: {\n    marginTop: \"1em\"\n  }\n}));\n\nconst MapLegend = props => {\n  _s();\n\n  const {\n    imgInfo\n  } = props;\n  const {\n    levels,\n    cmap\n  } = imgInfo;\n  const [width, setWidth] = useState();\n  const [eachWidth, setEachWidth] = useState();\n  const ref = useRef(null);\n  const classes = useStyles();\n  const color_styles = cmap.map(color => {\n    return {\n      height: \"28px\",\n      backgroundColor: color,\n      opacity: \"0.8\"\n    };\n  });\n  const inputContext = useContext(InputParamsContext);\n  console.log(inputContext.levels);\n  useEffect(() => {\n    inputContext.updateLevels({\n      server: levels\n    });\n  }, [levels]);\n  useEffect(() => {\n    if (ref) {\n      const elemWidth = ref.current.offsetWidth;\n      const defaultWidth = cmap.length * 56;\n      setWidth(Math.min(defaultWidth, elemWidth));\n      setEachWidth(Math.min(defaultWidth, elemWidth) / cmap.length);\n    }\n  }, [cmap.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.keyContainer,\n      ref: ref,\n      children: width && /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        padding: \"none\",\n        style: {\n          width: width\n        },\n        \"aria-label\": \"color table\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: color_styles.map((cs, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              style: cs\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: width && /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        padding: \"none\",\n        style: {\n          width: width\n        },\n        \"aria-label\": \"color table\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: eachWidth / 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this), levels.map((lv, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                width: eachWidth\n              },\n              children: lv\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 10\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: eachWidth / 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapLegend, \"sDn08jTMTYsSzAlZVKznPJIIoFs=\", false, function () {\n  return [useStyles];\n});\n\n_c = MapLegend;\nexport default MapLegend;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapLegend\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/MapLegend.js"],"names":["React","useEffect","useRef","useState","useContext","Table","TableBody","TableCell","TableContainer","TableRow","InputParamsContext","makeStyles","useStyles","theme","keyContainer","marginTop","MapLegend","props","imgInfo","levels","cmap","width","setWidth","eachWidth","setEachWidth","ref","classes","color_styles","map","color","height","backgroundColor","opacity","inputContext","console","log","updateLevels","server","elemWidth","current","offsetWidth","defaultWidth","length","Math","min","cs","i","lv"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputParamsContext from './InputParamsContext';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\tkeyContainer: {\n\t\tmarginTop: \"1em\",\n\t},\n}));\n\nconst MapLegend = (props) => {\n\tconst { imgInfo } = props;\n\tconst { levels, cmap } = imgInfo;\n\tconst [ width, setWidth ] = useState();\n\tconst [ eachWidth, setEachWidth ] = useState();\n\tconst ref = useRef(null);\n\tconst classes = useStyles();\n\tconst color_styles = cmap.map((color) => { return {height: \"28px\", backgroundColor: color, opacity: \"0.8\"} });\n\tconst inputContext = useContext(InputParamsContext);\n\n\tconsole.log(inputContext.levels)\n\n\tuseEffect(() => {\n\t\tinputContext.updateLevels({server: levels});\n\t}, [levels])\n\n\tuseEffect(() => {\n\t\tif (ref) {\n\t\t\tconst elemWidth = ref.current.offsetWidth;\n\t\t\tconst defaultWidth = cmap.length * 56;\n\t\t\tsetWidth(Math.min(defaultWidth, elemWidth));\n\t\t\tsetEachWidth(Math.min(defaultWidth, elemWidth)/cmap.length);\n\t\t}\n\t},[cmap.length]);\n\n\treturn (\n\t\t<>\n\t\t\t<TableContainer className={classes.keyContainer} ref={ref}>\n\t\t\t\t{width &&\n\t\t\t\t\t<Table size=\"small\" padding=\"none\" style={{width:width}} aria-label=\"color table\">\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t{color_styles.map((cs, i) => (\n\t\t\t\t\t\t\t\t\t<TableCell key={i} style={cs}></TableCell>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableRow>\t\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t}\n\t\t\t</TableContainer>\n\n\t\t\t<TableContainer>\n\t\t\t\t{width &&\n\t\t\t\t\t<Table size=\"small\" padding=\"none\" style={{width:width}} aria-label=\"color table\">\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell style={{width:eachWidth/2}}></TableCell>\n\t\t\t\t\t\t\t\t{levels.map((lv, i) => (\n\t\t\t\t\t\t\t\t\t<TableCell key={i}align=\"center\" style={{width:eachWidth}}>{lv}</TableCell>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t<TableCell style={{width:eachWidth/2}}></TableCell>\n\t\t\t\t\t\t\t</TableRow>\t\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t}\n\t\t\t</TableContainer>\n\t\t</>\n\t);\n}\n\nexport default MapLegend;\n"]},"metadata":{},"sourceType":"module"}