{"ast":null,"code":"var _jsxFileName = \"/Users/keith/progs/React/ncei-normals-mapper/src/components/DateSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { makeStyles } from '@mui/styles';\nimport InputParamsContext from './InputParamsContext';\n//import SeasonSelect from './SeasonSelect';\nimport SeasonSelect from './MonthSelect';\nimport DateRange from './DateRange';\nimport { months, seasons } from '../utilities/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dateTypeContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    padding: \"1em 1em\"\n  },\n  radioButton: {\n    color: \"midnightblue !important\",\n    paddingRight: \"3px\"\n  },\n  formControl: {\n    marginTop: \"0.5em\"\n  },\n  dateSeperator: {\n    display: \"inline-block\",\n    lineHeight: \"2.5em\",\n    verticalAlign: \"bottom\",\n    margin: \"0.5em 0.5em 0.25em\"\n  }\n}));\nconst DateSelect = () => {\n  _s();\n  const [dateType, setDateType] = useState('month');\n  const classes = useStyles();\n  const inputContext = useContext(InputParamsContext);\n  const handleTypeChange = event => {\n    const newDateType = event.target.value;\n    setDateType(newDateType);\n    if (newDateType === 'month') {\n      inputContext.updateInputParams({\n        sdate: inputContext.inputParams.edate\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dateTypeContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Select date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Date type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"date type\",\n        name: \"datetype\",\n        value: dateType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"month\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 47\n          }, this),\n          label: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"season\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 48\n          }, this),\n          label: \"Season/Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"interval\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 50\n          }, this),\n          label: \"Interval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), dateType === 'month' && /*#__PURE__*/_jsxDEV(MonthSelect, {\n      choices: months,\n      label: \"Click to select month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), dateType === 'season' && /*#__PURE__*/_jsxDEV(SeasonSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), dateType === 'interval' && /*#__PURE__*/_jsxDEV(DateRange, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n_s(DateSelect, \"WxsROYUzEBJcLGqRV528j4S/5x0=\", false, function () {\n  return [useStyles];\n});\n_c = DateSelect;\nexport default DateSelect;\n\n/* \n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Month'\n\t\t\t\t\t\tdateParam='date'\n\t\t\t\t\t\tid=\"select-month\"\n\t\t\t\t\t\tjustMonth={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n*/\nvar _c;\n$RefreshReg$(_c, \"DateSelect\");","map":{"version":3,"names":["React","useState","useContext","Typography","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","makeStyles","InputParamsContext","SeasonSelect","DateRange","months","seasons","jsxDEV","_jsxDEV","useStyles","theme","dateTypeContainer","borderLeft","borderRight","borderBottom","padding","radioButton","color","paddingRight","formControl","marginTop","dateSeperator","display","lineHeight","verticalAlign","margin","DateSelect","_s","dateType","setDateType","classes","inputContext","handleTypeChange","event","newDateType","target","value","updateInputParams","sdate","inputParams","edate","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","component","row","name","onChange","control","size","label","MonthSelect","choices","_c","$RefreshReg$"],"sources":["/Users/keith/progs/React/ncei-normals-mapper/src/components/DateSelect.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { makeStyles } from '@mui/styles';\nimport InputParamsContext from './InputParamsContext';\n//import SeasonSelect from './SeasonSelect';\nimport SeasonSelect from './MonthSelect';\nimport DateRange from './DateRange';\nimport { months, seasons } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n\tdateTypeContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tradioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpaddingRight: \"3px\",\n\t},\n\tformControl: {\n\t\tmarginTop: \"0.5em\",\n\t},\n\tdateSeperator: {\n\t\tdisplay: \"inline-block\",\n\t\tlineHeight: \"2.5em\",\n\t\tverticalAlign: \"bottom\",\n\t\tmargin: \"0.5em 0.5em 0.25em\",\n\t},\n}));\n\nconst DateSelect = () => {\n\tconst [dateType, setDateType] = useState('month');\n\tconst classes = useStyles();\n\tconst inputContext = useContext(InputParamsContext);\n \n\tconst handleTypeChange = (event) => {\n\t\tconst newDateType = event.target.value;\n\t\tsetDateType(newDateType);\n\t\tif (newDateType === 'month') {\n\t\t\tinputContext.updateInputParams({sdate: inputContext.inputParams.edate});\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div className={classes.dateTypeContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect date\n\t\t\t</Typography>\n\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Date type:</FormLabel>\n\t\t\t\t<RadioGroup row aria-label=\"date type\" name=\"datetype\" value={dateType} onChange={handleTypeChange}>\n\t\t\t\t\t<FormControlLabel value=\"month\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Month\" />\n\t\t\t\t\t<FormControlLabel value=\"season\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Season/Year\" />\n\t\t\t\t\t<FormControlLabel value=\"interval\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Interval\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t{dateType === 'month' &&\n\t\t\t\t<MonthSelect \n\t\t\t\t\tchoices={months}\n\t\t\t\t\tlabel=\"Click to select month\"\n\t\t\t\t/>\n\t\t\t}\n\t\t\t{dateType === 'season' &&\n\t\t\t\t<SeasonSelect />\n\t\t\t}\n\t\t\t{dateType === 'interval' &&\n\t\t\t\t<DateRange />\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default DateSelect;\n\n/* \n\t\t\t\t<div>\n\t\t\t\t\t<RenderDate\n\t\t\t\t\t\tdateLegend='Month'\n\t\t\t\t\t\tdateParam='date'\n\t\t\t\t\t\tid=\"select-month\"\n\t\t\t\t\t\tjustMonth={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}