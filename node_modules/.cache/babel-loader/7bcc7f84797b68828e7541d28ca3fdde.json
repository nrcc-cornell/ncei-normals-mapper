{"ast":null,"code":"import { elements, maxbbox } from '../utilities/constants'; //const dateDiff = (date1, date2) => {\n//\tconst sdate = date1 instanceof Date ? date1 : new Date(date1);\n//\tconst edate = date2 instanceof Date ? date2 : new Date(date2);\n//\tconst one_day = 1000 * 60 * 60 * 24;\n//\treturn (Math.round((edate.getTime() - sdate.getTime()) / one_day));\n//};\n// check bounding box \n\nconst checkBbox = bbox => {\n  const newbbox = [...bbox];\n\n  if (bbox[0] < maxbbox.west) {\n    newbbox[0] = maxbbox.west;\n  }\n\n  if (bbox[1] < maxbbox.south) {\n    newbbox[1] = maxbbox.south;\n  }\n\n  if (bbox[2] > maxbbox.east) {\n    newbbox[2] = maxbbox.east;\n  }\n\n  if (bbox[3] > maxbbox.north) {\n    newbbox[3] = maxbbox.north;\n  }\n\n  return newbbox;\n}; // check point \n\n\nconst checkLoc = loc => {\n  const newloc = [...loc];\n\n  if (loc[0] < maxbbox.west) {\n    newloc[0] = maxbbox.west;\n  }\n\n  if (loc[1] < maxbbox.south) {\n    newloc[1] = maxbbox.south;\n  }\n\n  if (loc[0] > maxbbox.east) {\n    newloc[0] = maxbbox.east;\n  }\n\n  if (loc[1] > maxbbox.north) {\n    newloc[1] = maxbbox.north;\n  }\n\n  return newloc;\n};\n\nconst buildParams = input_params => {\n  let paramsToSubmit = {\n    grid: input_params.grid,\n    output: input_params.output\n  }; //console.log(input_params) // for debugging\n  // For \"interval\" date selection, calculate duration based on sdate and edate. \n\n  const mndiff = parseInt(input_params.edate.split(\"-\")[1]) - parseInt(input_params.sdate.split(\"-\")[1]);\n  const duration = mndiff + (mndiff >= 0 ? 1 : 13); // Set up nested elements\n\n  const origElem = input_params.elems[0];\n  const newElems = [{\n    elem: origElem,\n    interval: [0, 1],\n    duration: duration,\n    reduce: origElem.reduce\n  }]; // Replicate nested elems for all variables, if requested for a single grid point\n\n  if (origElem.name === 'all') {\n    let nestedElem = { ...newElems[0].elem,\n      name: 'maxt',\n      reduce: elements[0].reduce\n    };\n    newElems[0] = { ...newElems[0],\n      elem: nestedElem,\n      reduce: elements[0].reduce\n    };\n    ['mint', 'avgt', 'pcpn'].forEach((elem, i) => {\n      nestedElem = { ...newElems[0].elem,\n        name: elem,\n        reduce: elements[i + 1].reduce\n      };\n      newElems.push({ ...newElems[0],\n        elem: nestedElem,\n        reduce: elements[i + 1].reduce\n      });\n    });\n  } // Add actual elems as modified above to paramenters object\n\n\n  paramsToSubmit.elems = newElems; // send just date instead of sdate and edate.\n\n  const newDate = input_params.elems[0].interval.length === 2 ? input_params.edate.slice(0, 7) : input_params.edate;\n  paramsToSubmit.date = newDate; // areaDef is type (state, loc, bbox) and value of area of interest.\n\n  if (input_params.areaDef.bbox) {\n    input_params.areaDef.bbox = input_params.areaDef.bbox.map(x => parseFloat(x));\n    const newbbox = checkBbox(input_params.areaDef.bbox);\n    paramsToSubmit = { ...paramsToSubmit,\n      bbox: newbbox\n    }; //console.log(input_params.areaDef.bbox)\n  } else if (input_params.areaDef.loc) {\n    input_params.areaDef.loc = input_params.areaDef.loc.map(x => parseFloat(x));\n    const newloc = checkLoc(input_params.areaDef.loc);\n    paramsToSubmit = { ...paramsToSubmit,\n      loc: newloc\n    };\n  } else if (input_params.areaDef.state) {\n    paramsToSubmit = { ...paramsToSubmit,\n      ...input_params.areaDef\n    };\n  } else {\n    console.log(\"unknown areaDef\");\n  } // point location can only be json\n\n\n  if (paramsToSubmit.loc) {\n    paramsToSubmit = { ...paramsToSubmit,\n      output: \"json\"\n    };\n  }\n\n  if (paramsToSubmit.output === 'png') {\n    let newImage = { ...input_params.image\n    };\n\n    if (input_params.image.levels && typeof input_params.image.levels === 'string') {\n      const splitLevels = input_params.image.levels.split(\",\");\n      const newLevels = splitLevels.map(x => parseFloat(x));\n      newImage = { ...newImage,\n        levels: newLevels\n      };\n    }\n\n    console.log(input_params.image.levels);\n\n    if (input_params.image.levels && (input_params.image.levels === \"\" || input_params.image.levels.length === 0)) {\n      newImage.delete(\"levels\");\n    }\n\n    paramsToSubmit = { ...paramsToSubmit,\n      image: newImage\n    };\n  }\n\n  return paramsToSubmit;\n}; // download a retrieved png image\n\n\nconst downloadFile = (href, filename) => {\n  const link = document.createElement('a');\n  link.href = href;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}; // retrieve and download a geotiff or json file\n\n\nconst downloadFetch = (jsonparams, filename, output) => {\n  if (output === 'json') {\n    delete jsonparams.image;\n  }\n\n  const submitParams = JSON.stringify({ ...jsonparams,\n    output: output,\n    meta: \"ll\"\n  });\n  fetch(\"https://grid2.rcc-acis.org/GridData\", {\n    body: submitParams,\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (!response.ok) {\n      console.log(\"Error fetching the results\");\n      return;\n    }\n\n    return output === 'json' ? response.json() : response.blob();\n  }).then(response => {\n    var blob;\n\n    if (output === 'json') {\n      const json = JSON.stringify(response);\n      blob = new Blob([json], {\n        type: 'application/json'\n      });\n    } else {\n      blob = response;\n    }\n\n    const href = window.URL.createObjectURL(blob);\n    downloadFile(href, filename);\n  }).catch(err => {\n    if (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n      console.log(\"Invalid grid request - \" + jsonparams);\n    } else {\n      console.log(err.message);\n    }\n\n    ;\n  });\n};\n\nexport { buildParams, checkBbox, downloadFile, downloadFetch };","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/utilities/utils.js"],"names":["elements","maxbbox","checkBbox","bbox","newbbox","west","south","east","north","checkLoc","loc","newloc","buildParams","input_params","paramsToSubmit","grid","output","mndiff","parseInt","edate","split","sdate","duration","origElem","elems","newElems","elem","interval","reduce","name","nestedElem","forEach","i","push","newDate","length","slice","date","areaDef","map","x","parseFloat","state","console","log","newImage","image","levels","splitLevels","newLevels","delete","downloadFile","href","filename","link","document","createElement","download","body","appendChild","click","removeChild","downloadFetch","jsonparams","submitParams","JSON","stringify","meta","fetch","method","headers","then","response","ok","json","blob","Blob","type","window","URL","createObjectURL","catch","err","message","includes"],"mappings":"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","sourcesContent":["import { elements, maxbbox } from '../utilities/constants';\n\n//const dateDiff = (date1, date2) => {\n//\tconst sdate = date1 instanceof Date ? date1 : new Date(date1);\n//\tconst edate = date2 instanceof Date ? date2 : new Date(date2);\n//\tconst one_day = 1000 * 60 * 60 * 24;\n//\treturn (Math.round((edate.getTime() - sdate.getTime()) / one_day));\n//};\n\n// check bounding box \nconst checkBbox = bbox => {\n\tconst newbbox = [...bbox]\n\tif (bbox[0] < maxbbox.west) {\n\t\tnewbbox[0] = maxbbox.west;\n\t}\n\tif (bbox[1] < maxbbox.south) {\n\t\tnewbbox[1] = maxbbox.south;\n\t}\n\tif (bbox[2] > maxbbox.east) {\n\t\tnewbbox[2] = maxbbox.east;\n\t}\n\tif (bbox[3] > maxbbox.north) {\n\t\tnewbbox[3] = maxbbox.north;\n\t}\n\treturn newbbox;\n};\n\n// check point \nconst checkLoc = loc => {\n\tconst newloc = [...loc]\n\tif (loc[0] < maxbbox.west) {\n\t\tnewloc[0] = maxbbox.west;\n\t}\n\tif (loc[1] < maxbbox.south) {\n\t\tnewloc[1] = maxbbox.south;\n\t}\n\tif (loc[0] > maxbbox.east) {\n\t\tnewloc[0] = maxbbox.east;\n\t}\n\tif (loc[1] > maxbbox.north) {\n\t\tnewloc[1] = maxbbox.north;\n\t}\n\treturn newloc;\n};\n\nconst buildParams = (input_params) => {\n\tlet paramsToSubmit = {grid: input_params.grid, output: input_params.output};\n\t//console.log(input_params) // for debugging\n\n\t// For \"interval\" date selection, calculate duration based on sdate and edate. \n\tconst mndiff = parseInt(input_params.edate.split(\"-\")[1]) - parseInt(input_params.sdate.split(\"-\")[1]);\n\tconst duration = mndiff + (mndiff >= 0 ? 1 : 13);\n\n\t// Set up nested elements\n\tconst origElem = input_params.elems[0];\n\tconst newElems = [\n\t\t{\n\t\t\telem: origElem, \n\t\t\tinterval: [0,1], \n\t\t\tduration: duration, \n\t\t\treduce: origElem.reduce\n\t\t}\n\t];\n\n\t// Replicate nested elems for all variables, if requested for a single grid point\n\tif (origElem.name === 'all') {\n\t\tlet nestedElem = {...newElems[0].elem, name: 'maxt', reduce: elements[0].reduce};\n\t\tnewElems[0] = {...newElems[0], elem:nestedElem, reduce: elements[0].reduce};\n\t\t['mint','avgt','pcpn'].forEach((elem,i) => {\n\t\t\tnestedElem = {...newElems[0].elem, name: elem, reduce: elements[i+1].reduce};\n\t\t\tnewElems.push({...newElems[0], elem: nestedElem, reduce: elements[i+1].reduce});\n\t\t});\n\t}\n\n\t// Add actual elems as modified above to paramenters object\n\tparamsToSubmit.elems = newElems;\n\n\t// send just date instead of sdate and edate.\n\tconst newDate = input_params.elems[0].interval.length === 2 ? input_params.edate.slice(0, 7) : input_params.edate;\n\tparamsToSubmit.date = newDate;\n\n\t// areaDef is type (state, loc, bbox) and value of area of interest.\n\tif (input_params.areaDef.bbox) {\n\t\tinput_params.areaDef.bbox = input_params.areaDef.bbox.map(x => parseFloat(x))\n\t\tconst newbbox = checkBbox(input_params.areaDef.bbox);\n\t\tparamsToSubmit = {...paramsToSubmit, bbox: newbbox};\n\t\t//console.log(input_params.areaDef.bbox)\n\t} else if (input_params.areaDef.loc) {\n\t\tinput_params.areaDef.loc = input_params.areaDef.loc.map(x => parseFloat(x))\n\t\tconst newloc = checkLoc(input_params.areaDef.loc);\n\t\tparamsToSubmit = {...paramsToSubmit, loc: newloc};\n\t} else if (input_params.areaDef.state) {\n\t\tparamsToSubmit = {...paramsToSubmit, ...input_params.areaDef};\n\t} else {\n\t\tconsole.log(\"unknown areaDef\");\n\t}\n\t\n\t// point location can only be json\n\tif (paramsToSubmit.loc) {\n\t\tparamsToSubmit = {...paramsToSubmit, output: \"json\"};\n\t}\n\n\tif (paramsToSubmit.output === 'png') {\n\t\tlet newImage = {...input_params.image};\n\t\tif (input_params.image.levels && typeof input_params.image.levels === 'string') {\n\t\t\tconst splitLevels = input_params.image.levels.split(\",\");\n\t\t\tconst newLevels = splitLevels.map(x => parseFloat(x));\n\t\t\tnewImage = {...newImage, levels: newLevels};\n\t\t}\n\t\tconsole.log(input_params.image.levels)\n\t\tif (input_params.image.levels && (input_params.image.levels === \"\" || input_params.image.levels.length === 0)) {\n\t\t\tnewImage.delete(\"levels\");\n\t\t}\n\t\tparamsToSubmit = {...paramsToSubmit, image: newImage};\n\t}\n\n\treturn paramsToSubmit;\t\n};\n\n// download a retrieved png image\nconst downloadFile = (href, filename) => {\n\tconst link = document.createElement('a');\n\tlink.href = href;\n\tlink.download = filename;\n\tdocument.body.appendChild(link);\n\tlink.click();\n\tdocument.body.removeChild(link);\n};\n\n// retrieve and download a geotiff or json file\nconst downloadFetch = (jsonparams, filename, output) => {\n\tif (output === 'json') {\n\t\tdelete jsonparams.image;\n\t}\n\tconst submitParams = JSON.stringify({...jsonparams, output:output, meta:\"ll\"});\n\tfetch(\"https://grid2.rcc-acis.org/GridData\", {body: submitParams, method: \"POST\", headers: {'Content-Type': 'application/json'}})\n\t\t.then(response => {\n\t\t\tif (!response.ok) {\n\t\t\t\tconsole.log(\"Error fetching the results\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn output === 'json' ? response.json() : response.blob();\n\t\t})\n\t\t.then(response => {\n\t\t\tvar blob;\n\t\t\tif (output === 'json') {\n\t\t\t\tconst json = JSON.stringify(response);\n  \t\t\t\tblob = new Blob([json], {type:'application/json'});\n\t\t\t} else {\n\t\t\t\tblob = response;\n\t\t\t}\n\t\t\tconst href = window.URL.createObjectURL(blob);\n\t\t\tdownloadFile(href, filename)\n\t\t})\n\t\t.catch(err => {\n\t\t\tif (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n\t\t\t\tconsole.log(\"Invalid grid request - \"+jsonparams);\n\t\t\t} else {\n\t\t\t\tconsole.log(err.message);\n\t\t\t};\n\t\t});\n};\n\nexport { buildParams, checkBbox, downloadFile, downloadFetch };"]},"metadata":{},"sourceType":"module"}