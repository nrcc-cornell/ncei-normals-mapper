{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/MapboxMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MapGL, { NavigationControl } from 'react-map-gl';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport InputParamsContext from './InputParamsContext';\nconst useStyles = makeStyles(theme => ({\n  nav: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    padding: \"3px\"\n  }\n})); // eslint-disable-next-line import/no-webpack-loader-syntax\n\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\nconst MapboxMap = props => {\n  _s();\n\n  const {\n    imgsrc\n  } = props;\n  const [viewport, setViewPort] = useState({\n    width: \"100%\",\n    height: \"50vh\",\n    latitude: 42.4,\n    longitude: -74.8,\n    zoom: 4\n  });\n  const inputContext = useContext(InputParamsContext);\n  const classes = useStyles();\n  const mapRef = useRef();\n  var bbox = [];\n\n  if (inputContext.inputParams.areaDef.bbox) {\n    bbox = inputContext.inputParams.areaDef.bbox;\n  }\n\n  const mapinfo = {\n    token: \"pk.eyJ1Ijoia2xlMSIsImEiOiJjank0b2dmd2swMm02M2NvMGNnY3c4aWNnIn0.GfryAbDLVsqX9Ir24eWlGQ\" //\t\tmapstyle: \"mapbox://styles/mapbox/streets-v11\",\n\n  };\n  const mapStyle = {\n    'version': 8,\n    'sources': {\n      'mapbox': {\n        'type': 'vector',\n        'url': 'mapbox://mapbox.mapbox-streets-v8'\n      },\n      'overlay': {\n        'type': 'image',\n        'url': imgsrc,\n        'coordinates': [[parseFloat(bbox[0]), parseFloat(bbox[3])], [parseFloat(bbox[2]), parseFloat(bbox[3])], [parseFloat(bbox[2]), parseFloat(bbox[1])], [parseFloat(bbox[0]), parseFloat(bbox[1])]]\n      }\n    },\n    'layers': [{\n      'id': 'water',\n      'source': 'mapbox',\n      'source-layer': 'water',\n      'type': 'fill',\n      'paint': {\n        'fill-color': '#2c2c2c'\n      }\n    }, {\n      'id': 'boundaries',\n      'source': 'mapbox',\n      'source-layer': 'admin',\n      'type': 'line'\n    }, {\n      'id': 'overlay',\n      'source': 'overlay',\n      'type': 'raster',\n      'paint': {\n        'raster-opacity': 0.85\n      }\n    }]\n  };\n\n  const handleViewportChange = viewport => setViewPort({ ...viewport,\n    transitionDuration: 500\n  });\n\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapGL, {\n      ref: mapRef,\n      ...viewport,\n      mapboxApiAccessToken: mapinfo.token,\n      mapStyle: mapStyle,\n      onViewportChange: handleViewportChange,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.nav,\n        children: /*#__PURE__*/_jsxDEV(NavigationControl, {\n          showCompass: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapboxMap, \"ReKlEFFdbZxxb1yWuGaSSbWgX7E=\", false, function () {\n  return [useStyles];\n});\n\n_c = MapboxMap;\nexport default MapboxMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapboxMap\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/MapboxMap.js"],"names":["React","useEffect","useRef","useState","useContext","makeStyles","MapGL","NavigationControl","mapboxgl","InputParamsContext","useStyles","theme","nav","position","top","left","padding","workerClass","require","default","MapboxMap","props","imgsrc","viewport","setViewPort","width","height","latitude","longitude","zoom","inputContext","classes","mapRef","bbox","inputParams","areaDef","mapinfo","token","mapStyle","parseFloat","handleViewportChange","transitionDuration"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,IAAgBC,iBAAhB,QAAyC,cAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,8BAAP;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACxCC,EAAAA,GAAG,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,GAAG,EAAE,CAFD;AAGJC,IAAAA,IAAI,EAAE,CAHF;AAIJC,IAAAA,OAAO,EAAE;AAJL;AADmC,CAAZ,CAAD,CAA5B,C,CASA;;AACAR,QAAQ,CAACS,WAAT,GAAuBC,OAAO,CAAC,mDAAD,CAAP,CAA6DC,OAApF;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA2BrB,QAAQ,CAAC;AACzCsB,IAAAA,KAAK,EAAE,MADkC;AAEzCC,IAAAA,MAAM,EAAE,MAFiC;AAGzCC,IAAAA,QAAQ,EAAE,IAH+B;AAIzCC,IAAAA,SAAS,EAAE,CAAC,IAJ6B;AAKzCC,IAAAA,IAAI,EAAE;AALmC,GAAD,CAAzC;AAOA,QAAMC,YAAY,GAAG1B,UAAU,CAACK,kBAAD,CAA/B;AACA,QAAMsB,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAMsB,MAAM,GAAG9B,MAAM,EAArB;AAEA,MAAI+B,IAAI,GAAG,EAAX;;AACA,MAAIH,YAAY,CAACI,WAAb,CAAyBC,OAAzB,CAAiCF,IAArC,EAA2C;AAC1CA,IAAAA,IAAI,GAAGH,YAAY,CAACI,WAAb,CAAyBC,OAAzB,CAAiCF,IAAxC;AACA;;AAED,QAAMG,OAAO,GAAG;AACfC,IAAAA,KAAK,EAAE,uFADQ,CAEjB;;AAFiB,GAAhB;AAKA,QAAMC,QAAQ,GAAG;AAChB,eAAW,CADK;AAEhB,eAAW;AACT,gBAAU;AACX,gBAAQ,QADG;AAEX,eAAO;AAFI,OADD;AAKT,iBAAW;AACZ,gBAAQ,OADI;AAEZ,eAAOhB,MAFK;AAGZ,uBAAe,CACd,CAACiB,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAX,EAAsBM,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAhC,CADc,EAEd,CAACM,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAX,EAAsBM,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAhC,CAFc,EAGd,CAACM,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAX,EAAsBM,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAhC,CAHc,EAId,CAACM,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAX,EAAsBM,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAhC,CAJc;AAHH;AALF,KAFK;AAkBhB,cAAU,CACR;AACD,YAAM,OADL;AAED,gBAAU,QAFT;AAGD,sBAAgB,OAHf;AAID,cAAQ,MAJP;AAKD,eAAS;AAAE,sBAAc;AAAhB;AALR,KADQ,EAQR;AACD,YAAM,YADL;AAED,gBAAU,QAFT;AAGD,sBAAgB,OAHf;AAID,cAAQ;AAJP,KARQ,EAcR;AACD,YAAM,SADL;AAED,gBAAU,SAFT;AAGD,cAAQ,QAHP;AAID,eAAS;AAAE,0BAAkB;AAApB;AAJR,KAdQ;AAlBM,GAAjB;;AAyCA,QAAMO,oBAAoB,GAAGjB,QAAQ,IAAIC,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAckB,IAAAA,kBAAkB,EAAE;AAAlC,GAAD,CAApD;;AAEAxC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAIA,sBACC;AAAA,2BACC,QAAC,KAAD;AACC,MAAA,GAAG,EAAE+B,MADN;AAAA,SAEKT,QAFL;AAGC,MAAA,oBAAoB,EAAEa,OAAO,CAACC,KAH/B;AAIC,MAAA,QAAQ,EAAEC,QAJX;AAKC,MAAA,gBAAgB,EAAEE,oBALnB;AAAA,6BAOC;AAAK,QAAA,SAAS,EAAET,OAAO,CAACnB,GAAxB;AAAA,+BACC,QAAC,iBAAD;AAAmB,UAAA,WAAW,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAeA,CArFD;;GAAMQ,S;UAUWV,S;;;KAVXU,S;AAuFN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MapGL, { NavigationControl } from 'react-map-gl';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport InputParamsContext from './InputParamsContext';\n\nconst useStyles = makeStyles((theme) => ({\n\tnav: {\n\t\tposition: \"absolute\",\n\t\ttop: 0,\n\t\tleft: 0,\n\t\tpadding: \"3px\",\n\t},\n}));\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\nconst MapboxMap = (props) => {\n\tconst { imgsrc } = props;\n\tconst [viewport, setViewPort ] = useState({\n\t\twidth: \"100%\",\n\t\theight: \"50vh\",\n\t\tlatitude: 42.4,\n\t\tlongitude: -74.8,\n\t\tzoom: 4\n  \t});\n\tconst inputContext = useContext(InputParamsContext);\n\tconst classes = useStyles();\n\tconst mapRef = useRef();\n\n\tvar bbox = [];\n\tif (inputContext.inputParams.areaDef.bbox) {\n\t\tbbox = inputContext.inputParams.areaDef.bbox;\n\t}\n\n\tconst mapinfo = {\n\t\ttoken: \"pk.eyJ1Ijoia2xlMSIsImEiOiJjank0b2dmd2swMm02M2NvMGNnY3c4aWNnIn0.GfryAbDLVsqX9Ir24eWlGQ\",\n//\t\tmapstyle: \"mapbox://styles/mapbox/streets-v11\",\n  \t}\n\n\tconst mapStyle = {\n\t\t'version': 8,\n\t\t'sources': {\n\t\t  'mapbox': {\n\t\t\t'type': 'vector',\n\t\t\t'url': 'mapbox://mapbox.mapbox-streets-v8',\n\t\t  },\n\t\t  'overlay': {\n\t\t\t'type': 'image',\n\t\t\t'url': imgsrc,\n\t\t\t'coordinates': [\n\t\t\t\t[parseFloat(bbox[0]), parseFloat(bbox[3])],\n\t\t\t\t[parseFloat(bbox[2]), parseFloat(bbox[3])],\n\t\t\t\t[parseFloat(bbox[2]), parseFloat(bbox[1])],\n\t\t\t\t[parseFloat(bbox[0]), parseFloat(bbox[1])]\n\t\t\t],\n\t\t  }\n\t\t},\n\t\t'layers': [\n\t\t  {\n\t\t\t'id': 'water',\n\t\t\t'source': 'mapbox',\n\t\t\t'source-layer': 'water',\n\t\t\t'type': 'fill',\n\t\t\t'paint': { 'fill-color': '#2c2c2c' }\n\t\t  },\n\t\t  {\n\t\t\t'id': 'boundaries',\n\t\t\t'source': 'mapbox',\n\t\t\t'source-layer': 'admin',\n\t\t\t'type': 'line',\n\t\t  },\n\t\t  {\n\t\t\t'id': 'overlay',\n\t\t\t'source': 'overlay',\n\t\t\t'type': 'raster',\n\t\t\t'paint': { 'raster-opacity': 0.85 }\n\t\t  }\n\t\t]\n\t}; \n\n\tconst handleViewportChange = viewport => setViewPort({...viewport, transitionDuration: 500 });\n\n\tuseEffect(() => {\n\t\t\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<MapGL\n\t\t\t\tref={mapRef}\n\t\t\t\t{...viewport}\n\t\t\t\tmapboxApiAccessToken={mapinfo.token}\n\t\t\t\tmapStyle={mapStyle}\n\t\t\t\tonViewportChange={handleViewportChange}\n\t\t\t>\n\t\t\t\t<div className={classes.nav}>\n\t\t\t\t\t<NavigationControl showCompass={false} />\n\t\t\t\t</div>\n\t\t\t</MapGL>\n\t\t</>\n\t);\n}\n\nexport default MapboxMap;"]},"metadata":{},"sourceType":"module"}