{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/AreaSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RegionSelect from './RegionSelect';\nimport StateSelect from './StateSelect';\nimport BboxSelect from './BboxSelect';\nimport PointSelect from './PointSelect';\nimport InputParamsContext from './InputParamsContext';\nimport { elements } from '../utilities/constants';\nimport alertDialog from './AlertDialog';\nconst useStyles = makeStyles(theme => ({\n  areaContainer: {\n    border: \"1pt solid midnightblue\",\n    padding: \"1em 1em\"\n  },\n  radioButton: {\n    color: \"midnightblue !important\",\n    paddingRight: \"3px\"\n  },\n  formControl: {\n    marginTop: \"0.5em\",\n    marginBottom: \"1em\"\n  }\n}));\n\nconst AreaSelect = () => {\n  _s();\n\n  const [areaType, setAreaType] = useState(\"state\");\n  const classes = useStyles();\n  const inputContext = useContext(InputParamsContext);\n\n  const handleTypeChange = event => {\n    const newAreaType = event.target.value;\n    const prevType = areaType;\n    setAreaType(newAreaType); // only point can have element of \"all\"; switch to first element if \"all\" is selected with anything else\t\n\n    if (prevType === 'point' && inputContext.inputParams.elems[0].name === 'all') {\n      alertDialog();\n      const newElems = inputContext.inputParams.elems;\n      newElems[0] = { ...newElems[0],\n        name: elements[0].name,\n        reduce: elements[0].reduce\n      };\n      inputContext.updateInputParams({\n        elems: newElems\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.areaContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Select area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Area type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"area type\",\n        name: \"areatype\",\n        value: areaType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"state\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 47\n          }, this),\n          label: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"region\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 48\n          }, this),\n          label: \"Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"bbox\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 46\n          }, this),\n          label: \"Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"point\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 47\n          }, this),\n          label: \"Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), areaType === 'state' && /*#__PURE__*/_jsxDEV(StateSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), areaType === 'region' && /*#__PURE__*/_jsxDEV(RegionSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), areaType === 'bbox' && /*#__PURE__*/_jsxDEV(BboxSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), areaType === 'point' && /*#__PURE__*/_jsxDEV(PointSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AreaSelect, \"V7/luQ3ihwoYo03YYAL1V1cD8KE=\", false, function () {\n  return [useStyles];\n});\n\n_c = AreaSelect;\nexport default AreaSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/AreaSelect.js"],"names":["React","useState","useContext","Typography","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","makeStyles","RegionSelect","StateSelect","BboxSelect","PointSelect","InputParamsContext","elements","alertDialog","useStyles","theme","areaContainer","border","padding","radioButton","color","paddingRight","formControl","marginTop","marginBottom","AreaSelect","areaType","setAreaType","classes","inputContext","handleTypeChange","event","newAreaType","target","value","prevType","inputParams","elems","name","newElems","reduce","updateInputParams"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RegionSelect from './RegionSelect';\nimport StateSelect from './StateSelect';\nimport BboxSelect from './BboxSelect';\nimport PointSelect from './PointSelect';\nimport InputParamsContext from './InputParamsContext';\nimport { elements } from '../utilities/constants';\nimport alertDialog from './AlertDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\tareaContainer: {\n\t\tborder: \"1pt solid midnightblue\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tradioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpaddingRight: \"3px\",\n\t},\n\tformControl: {\n\t\tmarginTop: \"0.5em\",\n\t\tmarginBottom: \"1em\",\n\t},\n}));\n\nconst AreaSelect = () => {\n\tconst [areaType, setAreaType] = useState(\"state\");\n\tconst classes = useStyles();\n\tconst inputContext = useContext(InputParamsContext);\n\n\tconst handleTypeChange = (event) => {\n\t\tconst newAreaType = event.target.value;\n\t\tconst prevType = areaType;\n\t\tsetAreaType(newAreaType);\t\n\t\t// only point can have element of \"all\"; switch to first element if \"all\" is selected with anything else\t\n\t\tif (prevType === 'point' && inputContext.inputParams.elems[0].name === 'all') {\n\t\t\talertDialog();\n\t\t\tconst newElems = inputContext.inputParams.elems;\n\t\t\tnewElems[0] = {...newElems[0], name: elements[0].name, reduce: elements[0].reduce}\n\t\t\tinputContext.updateInputParams({elems: newElems});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.areaContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect area\n\t\t\t</Typography>\n\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Area type:</FormLabel>\n\t\t\t\t<RadioGroup row aria-label=\"area type\" name=\"areatype\" value={areaType} onChange={handleTypeChange}>\n\t\t\t\t\t<FormControlLabel value=\"state\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"State\" />\n\t\t\t\t\t<FormControlLabel value=\"region\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Region\" />\n\t\t\t\t\t<FormControlLabel value=\"bbox\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Box\" />\n\t\t\t\t\t<FormControlLabel value=\"point\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Point\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t{areaType === 'state' &&\n\t\t\t\t<StateSelect />\n\t\t\t}\n\t\t\t{areaType === 'region' &&\n\t\t\t\t<RegionSelect />\n\t\t\t}\n\t\t\t{areaType === 'bbox' &&\n\t\t\t\t<BboxSelect />\n\t\t\t}\n\t\t\t{areaType === 'point' &&\n\t\t\t\t<PointSelect />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default AreaSelect;"]},"metadata":{},"sourceType":"module"}