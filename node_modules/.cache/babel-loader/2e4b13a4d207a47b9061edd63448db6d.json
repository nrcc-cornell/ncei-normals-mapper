{"ast":null,"code":"import _objectSpread from\"/Users/kle1/progs/React/ncei-normals-mapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/kle1/progs/React/ncei-normals-mapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{elements}from'../utilities/constants';//const dateDiff = (date1, date2) => {\n//\tconst sdate = date1 instanceof Date ? date1 : new Date(date1);\n//\tconst edate = date2 instanceof Date ? date2 : new Date(date2);\n//\tconst one_day = 1000 * 60 * 60 * 24;\n//\treturn (Math.round((edate.getTime() - sdate.getTime()) / one_day));\n//};\nvar buildParams=function buildParams(input_params){var paramsToSubmit={grid:input_params.grid,output:input_params.output};//console.log(input_params) // for debugging\n// For \"interval\" date selection, calculate duration based on sdate and edate. Also send just date instead of sdate and edate.\nvar mndiff=parseInt(input_params.edate.split(\"-\")[1])-parseInt(input_params.sdate.split(\"-\")[1]);var duration=mndiff+(mndiff>=0?1:13);input_params.elems[0].duration=duration;var newElems=_toConsumableArray(input_params.elems);newElems[0]=_objectSpread(_objectSpread({},newElems[0]),{},{duration:duration});if(newElems[0].name==='all'){newElems[0]=_objectSpread(_objectSpread({},newElems[0]),{},{name:'maxt',reduce:elements[0].reduce});['mint','avgt','pcpn'].forEach(function(elem,i){newElems.push(_objectSpread(_objectSpread({},newElems[0]),{},{name:elem,reduce:elements[i+1].reduce}));});}paramsToSubmit.elems=newElems;var newDate=input_params.elems[0].interval.length===2?input_params.edate.slice(0,7):input_params.edate;paramsToSubmit.date=newDate;// areaDef is type (e.g. state, loc, county) and value of area of interest.\nparamsToSubmit=_objectSpread(_objectSpread({},paramsToSubmit),input_params.areaDef);// point location can only be json\nif(paramsToSubmit.loc){paramsToSubmit=_objectSpread(_objectSpread({},paramsToSubmit),{},{output:\"json\"});}return paramsToSubmit;};// find bounding box around one or more states\nvar multiStateBbox=function multiStateBbox(meta){var bbox={xn:0,xs:999,xw:0,xe:-999};meta.forEach(function(element){var _ref=_toConsumableArray(element.bbox),w=_ref[0],s=_ref[1],e=_ref[2],n=_ref[3];if(n>bbox.xn){bbox.xn=n;}if(s<bbox.xs){bbox.xs=s;}if(w<bbox.xw){bbox.xw=w;}if(e>bbox.xe){bbox.xe=e;}});return[bbox.xw,bbox.xs,bbox.xe,bbox.xn];};// download a retrieved gif image\nvar downloadFile=function downloadFile(href,filename){var link=document.createElement('a');link.href=href;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);};// retrive and download a json file\nvar downloadFetch=function downloadFetch(stringparams,filename,output){var jsonparams=JSON.parse(stringparams);var submitParams=JSON.stringify(_objectSpread(_objectSpread({},jsonparams),{},{output:output}));fetch(\"https://grid2.rcc-acis.org/GridData\",{body:submitParams,method:\"POST\"}).then(function(response){if(!response.ok){console.log(\"Error fetching the results\");return;}return output==='json'?response.json():response.blob();}).then(function(response){var blob;if(output==='json'){var json=JSON.stringify(response);blob=new Blob([json],{type:'application/json'});}else{blob=response;}var href=window.URL.createObjectURL(blob);downloadFile(href,filename);}).catch(function(err){if(err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")){console.log(\"Invalid grid request - \"+jsonparams);}else{console.log(err.message);};});};export{buildParams,multiStateBbox,downloadFile,downloadFetch};","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/utilities/utils.js"],"names":["elements","buildParams","input_params","paramsToSubmit","grid","output","mndiff","parseInt","edate","split","sdate","duration","elems","newElems","name","reduce","forEach","elem","i","push","newDate","interval","length","slice","date","areaDef","loc","multiStateBbox","meta","bbox","xn","xs","xw","xe","element","w","s","e","n","downloadFile","href","filename","link","document","createElement","download","body","appendChild","click","removeChild","downloadFetch","stringparams","jsonparams","JSON","parse","submitParams","stringify","fetch","method","then","response","ok","console","log","json","blob","Blob","type","window","URL","createObjectURL","catch","err","message","includes"],"mappings":"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","sourcesContent":["import { elements } from '../utilities/constants';\n\n//const dateDiff = (date1, date2) => {\n//\tconst sdate = date1 instanceof Date ? date1 : new Date(date1);\n//\tconst edate = date2 instanceof Date ? date2 : new Date(date2);\n//\tconst one_day = 1000 * 60 * 60 * 24;\n//\treturn (Math.round((edate.getTime() - sdate.getTime()) / one_day));\n//};\n\t\nconst buildParams = (input_params) => {\n\tlet paramsToSubmit = {grid: input_params.grid, output: input_params.output};\n\t//console.log(input_params) // for debugging\n\t// For \"interval\" date selection, calculate duration based on sdate and edate. Also send just date instead of sdate and edate.\n\tconst mndiff = parseInt(input_params.edate.split(\"-\")[1]) - parseInt(input_params.sdate.split(\"-\")[1]);\n\tconst duration = mndiff + (mndiff >= 0 ? 1 : 13);\n\tinput_params.elems[0].duration = duration;\n\t\n\tconst newElems = [...input_params.elems];\n\tnewElems[0] = {...newElems[0], duration};\n\n\tif (newElems[0].name === 'all') {\n\t\tnewElems[0] = {...newElems[0], name: 'maxt', reduce: elements[0].reduce};\n\t\t['mint','avgt','pcpn'].forEach((elem,i) => {\n\t\t\tnewElems.push({...newElems[0], name:elem, reduce: elements[i+1].reduce});\n\t\t});\n\t}\n\tparamsToSubmit.elems = newElems;\n\t\n\tconst newDate = input_params.elems[0].interval.length === 2 ? input_params.edate.slice(0, 7) : input_params.edate;\n\tparamsToSubmit.date = newDate;\n\n\t// areaDef is type (e.g. state, loc, county) and value of area of interest.\n\tparamsToSubmit = {...paramsToSubmit, ...input_params.areaDef};\n\t\n\t// point location can only be json\n\tif (paramsToSubmit.loc) {\n\t\tparamsToSubmit = {...paramsToSubmit, output: \"json\"};\n\t}\n\n\treturn paramsToSubmit;\t\n};\n\n// find bounding box around one or more states\nconst multiStateBbox = meta => {\n\tvar bbox = {xn:0, xs:999, xw:0, xe:-999};\n\tmeta.forEach(element => {\n\t\tconst [w, s, e, n] = [...element.bbox];\n\t\tif (n > bbox.xn) { bbox.xn = n; }\n\t\tif (s < bbox.xs) { bbox.xs = s; }\n\t\tif (w < bbox.xw) { bbox.xw = w; }\n\t\tif (e > bbox.xe) { bbox.xe = e; }\n\t});\n\treturn [bbox.xw,bbox.xs,bbox.xe,bbox.xn];\n};\n// download a retrieved gif image\nconst downloadFile = (href, filename) => {\n\tconst link = document.createElement('a');\n\tlink.href = href;\n\tlink.download = filename;\n\tdocument.body.appendChild(link);\n\tlink.click();\n\tdocument.body.removeChild(link);\n};\n\n// retrive and download a json file\nconst downloadFetch = (stringparams, filename, output) => {\n\tconst jsonparams = JSON.parse(stringparams);\n\tconst submitParams = JSON.stringify({...jsonparams, output:output});\n\tfetch(\"https://grid2.rcc-acis.org/GridData\", {body: submitParams, method: \"POST\"})\n\t\t.then(response => {\n\t\t\tif (!response.ok) {\n\t\t\t\tconsole.log(\"Error fetching the results\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn output === 'json' ? response.json() : response.blob();\n\t\t})\n\t\t.then(response => {\n\t\t\tvar blob;\n\t\t\tif (output === 'json') {\n\t\t\t\tconst json = JSON.stringify(response);\n  \t\t\t\tblob = new Blob([json], {type:'application/json'});\n\t\t\t} else {\n\t\t\t\tblob = response;\n\t\t\t}\n\t\t\tconst href = window.URL.createObjectURL(blob);\n\t\t\tdownloadFile(href, filename)\n\t\t})\n\t\t.catch(err => {\n\t\t\tif (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n\t\t\t\tconsole.log(\"Invalid grid request - \"+jsonparams);\n\t\t\t} else {\n\t\t\t\tconsole.log(err.message);\n\t\t\t};\n\t\t});\n};\n\nexport { buildParams, multiStateBbox, downloadFile, downloadFetch };"]},"metadata":{},"sourceType":"module"}