{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/StateSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport InfoAdornment from './InfoAdornment';\nimport { infoText } from '../utilities/constants';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nconst useStyles = makeStyles(theme => ({\n  stateInputLabel: {\n    color: \"rgba(0,0,0,0.87)\"\n  },\n  formControl: {\n    marginTop: \"0.5em\",\n    marginBottom: \"1em\"\n  },\n  radioButton: {\n    color: \"midnightblue !important\",\n    paddingRight: \"3px\",\n    fontSize: \"90%\"\n  }\n}));\n\nconst StateSelect = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext);\n  const [postals, setPostals] = useState(inputContext.inputParams.state);\n  const [stateType, setStateType] = useState('all');\n  const classes = useStyles();\n\n  const handleChange = event => {\n    const newPostals = event.target.value;\n    setPostals(newPostals);\n    inputContext.updateInputParams({\n      state: newPostals\n    });\n  };\n\n  const handleTypeChange = event => {\n    console.log(event.target.value);\n    setStateType(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"stateInput\",\n        className: classes.stateInputLabel,\n        children: \"State(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: postals,\n        id: \"stateInput\",\n        label: \"State(s)\",\n        margin: \"dense\",\n        onChange: handleChange,\n        endAdornment: /*#__PURE__*/_jsxDEV(InfoAdornment, {\n          content: infoText.postal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        id: \"stateInput\",\n        children: \"Enter one or more state postal abbreviations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"State options:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        \"aria-label\": \"state type\",\n        name: \"statetype\",\n        value: stateType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"all\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 60\n          }, this),\n          label: \"Entire area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"county\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 63\n          }, this),\n          label: \"County\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"climdiv\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            disabled: true,\n            size: \"small\",\n            className: classes.radioButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 64\n          }, this),\n          label: \"Climate division\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), stateType === 'county' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"To be implemented\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StateSelect, \"RDP3uEgeDLAq4A97E64ZMOXcpYs=\", false, function () {\n  return [useStyles];\n});\n\n_c = StateSelect;\nexport default StateSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/StateSelect.js"],"names":["React","useState","useContext","OutlinedInput","FormHelperText","InputLabel","FormControl","makeStyles","InputParamsContext","InfoAdornment","infoText","FormControlLabel","FormLabel","RadioGroup","Radio","useStyles","theme","stateInputLabel","color","formControl","marginTop","marginBottom","radioButton","paddingRight","fontSize","StateSelect","inputContext","postals","setPostals","inputParams","state","stateType","setStateType","classes","handleChange","event","newPostals","target","value","updateInputParams","handleTypeChange","console","log","postal"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport InfoAdornment from './InfoAdornment';\nimport { infoText } from '../utilities/constants';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\n\n\nconst useStyles = makeStyles((theme) => ({\n\tstateInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n    },\n    formControl: {\n\t\tmarginTop: \"0.5em\",\n\t\tmarginBottom: \"1em\",\n    },\n    radioButton: {\n\t\tcolor: \"midnightblue !important\",\n        paddingRight: \"3px\",\n        fontSize: \"90%\",\n\t},\n}));\n\nconst StateSelect = () => {\n    const inputContext = useContext(InputParamsContext);\n    const [postals, setPostals] = useState(inputContext.inputParams.state);\n    const [stateType, setStateType] = useState('all');\n    const classes = useStyles();\n\n    const handleChange = (event) => {\n\t\tconst newPostals = event.target.value;\n\t\tsetPostals(newPostals);\n\t\tinputContext.updateInputParams({state:newPostals});\t\n    };\n    \n    const handleTypeChange = (event) => {\n        console.log(event.target.value);\n        setStateType(event.target.value);\n    }\n\n    return (\n        <>\n            <FormControl variant=\"outlined\">\n                <InputLabel htmlFor=\"stateInput\" className={classes.stateInputLabel}>State(s)</InputLabel>\n                <OutlinedInput\n                    value={postals}\n                    id=\"stateInput\"\n                    label=\"State(s)\"\n                    margin=\"dense\"\n                    onChange={handleChange}\n                    endAdornment={<InfoAdornment content={infoText.postal} />}\n                />\n                <FormHelperText id=\"stateInput\">Enter one or more state postal abbreviations</FormHelperText>\n            </FormControl>\n\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n                <FormLabel component=\"legend\">State options:</FormLabel>\n                <RadioGroup row aria-label=\"state type\" name=\"statetype\" value={stateType} onChange={handleTypeChange}>\n                    <FormControlLabel value=\"all\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Entire area\" />\n                    <FormControlLabel value=\"county\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"County\" />\n                    <FormControlLabel value=\"climdiv\" control={<Radio disabled size=\"small\" className={classes.radioButton} />} label=\"Climate division\" />\n                </RadioGroup>\n            </FormControl>\n\n            {stateType === 'county' &&\n                <p>To be implemented</p>\n            }\n        </>\n    );\n\n }\n\nexport default StateSelect;\n"]},"metadata":{},"sourceType":"module"}