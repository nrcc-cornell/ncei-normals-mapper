{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/StateSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { infoText } from '../utilities/constants';\nimport InfoAdornment from './InfoAdornment';\nimport SubstateSelect from './SubstateSelect';\nconst useStyles = makeStyles(theme => ({\n  stateInputLabel: {\n    color: \"rgba(0,0,0,0.87)\"\n  },\n  mainGridContainer: {\n    marginTop: \"0.5em\"\n  },\n  vertRadioButton: {\n    color: \"midnightblue !important\",\n    padding: \"6px\",\n    fontSize: \"90%\"\n  }\n}));\n\nconst StateSelect = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext);\n  const [postals, setPostals] = useState(inputContext.inputParams.areaDef.state ? inputContext.inputParams.areaDef.state : \"ME,WV\");\n  const [stateType, setStateType] = useState(\"all\");\n  const classes = useStyles();\n\n  const handleTypeChange = event => {\n    const newStateType = event.target.value;\n    setStateType(newStateType);\n    inputContext.updateInputParams({\n      stateType: newStateType\n    });\n\n    if (newStateType === 'all') {\n      inputContext.updateInputParams({\n        areaDef: {\n          state: postals\n        }\n      });\n    }\n  };\n\n  const handleStateChange = event => {\n    const newPostals = event.target.value.replace(\" \", \"\");\n    setPostals(newPostals);\n    inputContext.updateInputParams({\n      areaDef: {\n        state: newPostals\n      }\n    });\n  };\n\n  useEffect(() => {\n    inputContext.updateInputParams({\n      areaDef: {\n        state: inputContext.inputParams.areaDef.state ? inputContext.inputParams.areaDef.state : \"ME,WV\"\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"stateInput\",\n        className: classes.stateInputLabel,\n        children: \"State(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: postals,\n        id: \"stateInput\",\n        label: \"State(s)\",\n        inputProps: {\n          spellCheck: false\n        },\n        onChange: handleStateChange,\n        endAdornment: /*#__PURE__*/_jsxDEV(InfoAdornment, {\n          content: infoText.postal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"Enter one or more state postal abbreviations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      className: classes.mainGridContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"State options:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            \"aria-label\": \"state type\",\n            name: \"statetype\",\n            value: stateType,\n            onChange: handleTypeChange,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"all\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"small\",\n                className: classes.vertRadioButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this),\n              label: \"Entire area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"county\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"small\",\n                className: classes.vertRadioButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this),\n              label: \"County\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"climdiv\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"small\",\n                className: classes.vertRadioButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this),\n              label: \"Climate division\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"cwa\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"small\",\n                className: classes.vertRadioButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this),\n              label: \"CWA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"basin\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"small\",\n                className: classes.vertRadioButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this),\n              label: \"Basin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: stateType !== \"all\" && /*#__PURE__*/_jsxDEV(SubstateSelect, {\n          postals: postals,\n          stateType: stateType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StateSelect, \"VGOwWWJ6fPKsxcgdhzmd2yn0dSI=\", false, function () {\n  return [useStyles];\n});\n\n_c = StateSelect;\nexport default StateSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/StateSelect.js"],"names":["React","useState","useContext","useEffect","OutlinedInput","FormHelperText","InputLabel","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","Grid","makeStyles","InputParamsContext","infoText","InfoAdornment","SubstateSelect","useStyles","theme","stateInputLabel","color","mainGridContainer","marginTop","vertRadioButton","padding","fontSize","StateSelect","inputContext","postals","setPostals","inputParams","areaDef","state","stateType","setStateType","classes","handleTypeChange","event","newStateType","target","value","updateInputParams","handleStateChange","newPostals","replace","spellCheck","postal"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { infoText } from '../utilities/constants';\nimport InfoAdornment from './InfoAdornment';\nimport SubstateSelect from './SubstateSelect';\n\nconst useStyles = makeStyles((theme) => ({\n\tstateInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n\t},\n\tmainGridContainer: {\n\t\tmarginTop: \"0.5em\",\n\t},\n\tvertRadioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpadding: \"6px\",\n\t\tfontSize: \"90%\",\n\t},\n}));\n\nconst StateSelect = () => {\n\t\tconst inputContext = useContext(InputParamsContext);\n\t\tconst [postals, setPostals] = useState(inputContext.inputParams.areaDef.state ? inputContext.inputParams.areaDef.state : \"ME,WV\");\n\t\tconst [stateType, setStateType] = useState(\"all\");\n\t\tconst classes = useStyles();\n\t\t\n\t\tconst handleTypeChange = (event) => {\n\t\t\tconst newStateType = event.target.value;\n\t\t\tsetStateType(newStateType);\n\t\t\tinputContext.updateInputParams({stateType: newStateType});\n\t\t\tif (newStateType === 'all') {\n\t\t\t\tinputContext.updateInputParams({areaDef: {state: postals}});\n\t\t\t}\n\t\t};\n\n\t\tconst handleStateChange = (event) => {\n\t\t\tconst newPostals = event.target.value.replace(\" \",\"\");\n\t\t\tsetPostals(newPostals);\n\t\t\tinputContext.updateInputParams({areaDef: {state:newPostals}});\t\n\t\t};\n\n\t\tuseEffect(() => {\n\t\t\tinputContext.updateInputParams({areaDef: {state: inputContext.inputParams.areaDef.state ? inputContext.inputParams.areaDef.state : \"ME,WV\"}});\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<FormControl variant=\"outlined\">\n\t\t\t\t\t<InputLabel htmlFor=\"stateInput\" className={classes.stateInputLabel}>State(s)</InputLabel>\n\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\tvalue={postals}\n\t\t\t\t\t\tid=\"stateInput\"\n\t\t\t\t\t\tlabel=\"State(s)\"\n\t\t\t\t\t\tinputProps={{ spellCheck: false }}\n\t\t\t\t\t\tonChange={handleStateChange}\n\t\t\t\t\t\tendAdornment={<InfoAdornment content={infoText.postal} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormHelperText>Enter one or more state postal abbreviations</FormHelperText>\n\t\t\t\t</FormControl>\n\n\t\t\t\t<Grid container spacing={0} className={classes.mainGridContainer}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t<FormLabel component=\"legend\">State options:</FormLabel>\n\t\t\t\t\t\t\t<RadioGroup  aria-label=\"state type\" name=\"statetype\" value={stateType} onChange={handleTypeChange}>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"all\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton} />} \n\t\t\t\t\t\t\t\t\tlabel=\"Entire area\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"county\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton}/>} \n\t\t\t\t\t\t\t\t\tlabel=\"County\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"climdiv\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton} />} \n\t\t\t\t\t\t\t\t\tlabel=\"Climate division\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"cwa\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton} />} \n\t\t\t\t\t\t\t\t\tlabel=\"CWA\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormControlLabel \n\t\t\t\t\t\t\t\t\tvalue=\"basin\" \n\t\t\t\t\t\t\t\t\tcontrol={<Radio size=\"small\" className={classes.vertRadioButton} />} \n\t\t\t\t\t\t\t\t\tlabel=\"Basin\" \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{(stateType !== \"all\") &&\n\t\t\t\t\t\t\t<SubstateSelect postals={postals} stateType={stateType} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</>\n\t\t);\n };\n\nexport default StateSelect;\n"]},"metadata":{},"sourceType":"module"}