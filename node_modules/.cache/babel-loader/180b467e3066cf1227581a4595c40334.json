{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-leaflet/src/components/MapboxMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useContext } from 'react';\nimport { MapContainer, GeoJSON, TileLayer, Marker, Popup, ZoomControl } from 'react-leaflet';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { multiStateBbox } from '../utilities/utils';\nconst useStyles = makeStyles(theme => ({\n  nav: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    padding: \"3px\"\n  },\n  mapglContainer: {\n    border: \"1pt solid midnightblue\",\n    height: window.innerHeight * 0.6\n  }\n}));\n\nconst MapboxMap = props => {\n  _s();\n\n  const {\n    imgsrc,\n    submittedParams\n  } = props;\n  const [bbox, setBbox] = useState();\n  const [imgcoords, setImgcoords] = useState();\n  const [resultsError, setResultsError] = useState();\n  const inputContext = useContext(InputParamsContext);\n  const classes = useStyles();\n  const mapRef = useRef();\n\n  const mapStyle = (imgsrc, imgcoords) => {\n    return {\n      version: 8,\n      sources: {\n        mapbox: {\n          type: 'vector',\n          url: 'mapbox://mapbox.mapbox-streets-v8'\n        },\n        overlay: {\n          type: 'image',\n          url: imgsrc,\n          coordinates: imgcoords\n        }\n      },\n      layers: [{\n        id: 'water',\n        source: 'mapbox',\n        'source-layer': 'water',\n        type: 'fill',\n        paint: {\n          'fill-color': '#2c2c2c'\n        }\n      }, {\n        id: 'boundaries',\n        source: 'mapbox',\n        'source-layer': 'admin',\n        type: 'line'\n      }, {\n        id: 'imgLayer',\n        source: 'overlay',\n        type: 'raster',\n        paint: {\n          'raster-opacity': 0.90\n        }\n      }]\n    };\n  };\n\n  const fetchBbox = postals => {\n    const jsonparams = JSON.stringify({\n      state: postals,\n      meta: \"bbox\"\n    });\n    fetch(\"https://data.rcc-acis.org/General/state\", {\n      body: jsonparams,\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        setResultsError(\"Error\");\n      }\n\n      return response.json();\n    }).then(response => {\n      if (response.meta && response.meta.length) {\n        const bbox = multiStateBbox(response.meta);\n        setBbox(bbox);\n      } else {\n        setResultsError(\"No bbox for \" + postals);\n      }\n    }).catch(err => {\n      if (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n        setResultsError(\"Invalid request\");\n      } else {\n        setResultsError(err.message);\n      }\n\n      ;\n    });\n  };\n\n  useEffect(() => {\n    if (inputContext.inputParams.areaDef.bbox) {\n      const bbox = JSON.parse(submittedParams).bbox;\n      console.log(bbox);\n      setBbox([parseFloat(bbox[0]), parseFloat(bbox[1]), parseFloat(bbox[2]), parseFloat(bbox[3])]);\n    } else {\n      const postals = inputContext.inputParams.areaDef.state;\n      fetchBbox(postals);\n    } // eslint-disable-next-line \n\n  }, [inputContext.inputParams.areaDef]);\n  useEffect(() => {\n    if (bbox) {\n      // convert bbox to mapbox coordinates\n      setImgcoords([[bbox[0], bbox[3]], [bbox[2], bbox[3]], [bbox[2], bbox[1]], [bbox[0], bbox[1]]]);\n    } // eslint-disable-next-line \n\n  }, [bbox]);\n  const minZoomLevel = 5;\n  const maxZoomLevel = 9;\n  const maxBounds = [[37.20, -82.70], [48.60, -65.00]];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mapglContainer,\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        className: \"marker-map\",\n        ref: m => {\n          this.leafletMap = m;\n        },\n        bounds: [[bbox[1], bbox[0]], [bbox[3], bbox[2]]],\n        maxBounds: maxBounds,\n        minZoom: minZoomLevel,\n        maxZoom: maxZoomLevel,\n        scrollWheelZoom: false,\n        attributionControl: true,\n        zoomControl: false,\n        style: {\n          \"border\": \"1pt solid gray\"\n        },\n        children: [\"center=\", [51.505, -0.09], \" zoom=\", 13, \" scrollWheelZoom=\", false, \">\", /*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}{r}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors \\xA9 <a href=\\\"https://carto.com/attributions\\\">CARTO</a>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this), resultsError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", resultsError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapboxMap, \"a+rlGhBjU/PTCbSlGv7LBspAe3M=\", false, function () {\n  return [useStyles];\n});\n\n_c = MapboxMap;\nexport default MapboxMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapboxMap\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-leaflet/src/components/MapboxMap.js"],"names":["React","useEffect","useRef","useState","useContext","MapContainer","GeoJSON","TileLayer","Marker","Popup","ZoomControl","makeStyles","InputParamsContext","multiStateBbox","useStyles","theme","nav","position","top","left","padding","mapglContainer","border","height","window","innerHeight","MapboxMap","props","imgsrc","submittedParams","bbox","setBbox","imgcoords","setImgcoords","resultsError","setResultsError","inputContext","classes","mapRef","mapStyle","version","sources","mapbox","type","url","overlay","coordinates","layers","id","source","paint","fetchBbox","postals","jsonparams","JSON","stringify","state","meta","fetch","body","method","headers","then","response","ok","json","length","catch","err","message","includes","inputParams","areaDef","parse","console","log","parseFloat","minZoomLevel","maxZoomLevel","maxBounds","m","leafletMap"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,SAAhC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA0DC,WAA1D,QAA6E,eAA7E;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACxCC,EAAAA,GAAG,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,GAAG,EAAE,CAFD;AAGJC,IAAAA,IAAI,EAAE,CAHF;AAIJC,IAAAA,OAAO,EAAE;AAJL,GADmC;AAOxCC,EAAAA,cAAc,EAAE;AACfC,IAAAA,MAAM,EAAE,wBADO;AAEfC,IAAAA,MAAM,EAAEC,MAAM,CAACC,WAAP,GAAqB;AAFd;AAPwB,CAAZ,CAAD,CAA5B;;AAaA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA8BF,KAApC;AACA,QAAM,CAAEG,IAAF,EAAQC,OAAR,IAAoB5B,QAAQ,EAAlC;AACA,QAAM,CAAE6B,SAAF,EAAaC,YAAb,IAA8B9B,QAAQ,EAA5C;AACA,QAAM,CAAE+B,YAAF,EAAgBC,eAAhB,IAAoChC,QAAQ,EAAlD;AACA,QAAMiC,YAAY,GAAGhC,UAAU,CAACQ,kBAAD,CAA/B;AACA,QAAMyB,OAAO,GAAGvB,SAAS,EAAzB;AACA,QAAMwB,MAAM,GAAGpC,MAAM,EAArB;;AAGA,QAAMqC,QAAQ,GAAG,CAACX,MAAD,EAAQI,SAAR,KAAsB;AACtC,WAAQ;AACPQ,MAAAA,OAAO,EAAE,CADF;AAEPC,MAAAA,OAAO,EAAE;AACRC,QAAAA,MAAM,EAAE;AACPC,UAAAA,IAAI,EAAE,QADC;AAEPC,UAAAA,GAAG,EAAE;AAFE,SADA;AAKRC,QAAAA,OAAO,EAAE;AACRF,UAAAA,IAAI,EAAE,OADE;AAERC,UAAAA,GAAG,EAAEhB,MAFG;AAGRkB,UAAAA,WAAW,EAAEd;AAHL;AALD,OAFF;AAaPe,MAAAA,MAAM,EAAE,CACP;AACCC,QAAAA,EAAE,EAAE,OADL;AAECC,QAAAA,MAAM,EAAE,QAFT;AAGC,wBAAgB,OAHjB;AAICN,QAAAA,IAAI,EAAE,MAJP;AAKCO,QAAAA,KAAK,EAAE;AAAE,wBAAc;AAAhB;AALR,OADO,EAQP;AACCF,QAAAA,EAAE,EAAE,YADL;AAECC,QAAAA,MAAM,EAAE,QAFT;AAGC,wBAAgB,OAHjB;AAICN,QAAAA,IAAI,EAAE;AAJP,OARO,EAcP;AACCK,QAAAA,EAAE,EAAE,UADL;AAECC,QAAAA,MAAM,EAAE,SAFT;AAGCN,QAAAA,IAAI,EAAE,QAHP;AAICO,QAAAA,KAAK,EAAE;AAAE,4BAAkB;AAApB;AAJR,OAdO;AAbD,KAAR;AAoCA,GArCD;;AAuCA,QAAMC,SAAS,GAAGC,OAAO,IAAI;AAC5B,UAAMC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACC,MAAAA,KAAK,EAAEJ,OAAR;AAAiBK,MAAAA,IAAI,EAAE;AAAvB,KAAf,CAAnB;AACAC,IAAAA,KAAK,CAAC,yCAAD,EAA4C;AAACC,MAAAA,IAAI,EAAEN,UAAP;AAAmBO,MAAAA,MAAM,EAAE,MAA3B;AAAmCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAA5C,KAA5C,CAAL,CACEC,IADF,CACOC,QAAQ,IAAI;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACjB7B,QAAAA,eAAe,CAAC,OAAD,CAAf;AACA;;AACD,aAAO4B,QAAQ,CAACE,IAAT,EAAP;AACA,KANF,EAOEH,IAPF,CAOOC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACN,IAAT,IAAiBM,QAAQ,CAACN,IAAT,CAAcS,MAAnC,EAA2C;AAC1C,cAAMpC,IAAI,GAAGjB,cAAc,CAACkD,QAAQ,CAACN,IAAV,CAA3B;AACA1B,QAAAA,OAAO,CAACD,IAAD,CAAP;AACA,OAHD,MAGO;AACNK,QAAAA,eAAe,CAAC,iBAAeiB,OAAhB,CAAf;AACA;AACD,KAdF,EAeEe,KAfF,CAeQC,GAAG,IAAI;AACb,UAAIA,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqB,8CAArB,CAAJ,EAA0E;AACzEnC,QAAAA,eAAe,CAAC,iBAAD,CAAf;AACA,OAFD,MAEO;AACNA,QAAAA,eAAe,CAACiC,GAAG,CAACC,OAAL,CAAf;AACA;;AAAA;AACD,KArBF;AAsBA,GAxBD;;AA0BApE,EAAAA,SAAS,CAAC,MAAM;AACf,QAAImC,YAAY,CAACmC,WAAb,CAAyBC,OAAzB,CAAiC1C,IAArC,EAA2C;AAC1C,YAAMA,IAAI,GAAGwB,IAAI,CAACmB,KAAL,CAAW5C,eAAX,EAA4BC,IAAzC;AACA4C,MAAAA,OAAO,CAACC,GAAR,CAAY7C,IAAZ;AACAC,MAAAA,OAAO,CAAC,CAAC6C,UAAU,CAAC9C,IAAI,CAAC,CAAD,CAAL,CAAX,EAAqB8C,UAAU,CAAC9C,IAAI,CAAC,CAAD,CAAL,CAA/B,EAAyC8C,UAAU,CAAC9C,IAAI,CAAC,CAAD,CAAL,CAAnD,EAA6D8C,UAAU,CAAC9C,IAAI,CAAC,CAAD,CAAL,CAAvE,CAAD,CAAP;AACA,KAJD,MAIO;AACN,YAAMsB,OAAO,GAAGhB,YAAY,CAACmC,WAAb,CAAyBC,OAAzB,CAAiChB,KAAjD;AACAL,MAAAA,SAAS,CAACC,OAAD,CAAT;AACA,KARc,CASf;;AACA,GAVQ,EAUN,CAAChB,YAAY,CAACmC,WAAb,CAAyBC,OAA1B,CAVM,CAAT;AAYAvE,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI6B,IAAJ,EAAU;AACT;AACAG,MAAAA,YAAY,CAAC,CAAE,CAACH,IAAI,CAAC,CAAD,CAAL,EAASA,IAAI,CAAC,CAAD,CAAb,CAAF,EAAqB,CAACA,IAAI,CAAC,CAAD,CAAL,EAASA,IAAI,CAAC,CAAD,CAAb,CAArB,EAAwC,CAACA,IAAI,CAAC,CAAD,CAAL,EAASA,IAAI,CAAC,CAAD,CAAb,CAAxC,EAA2D,CAACA,IAAI,CAAC,CAAD,CAAL,EAASA,IAAI,CAAC,CAAD,CAAb,CAA3D,CAAD,CAAZ;AACA,KAJc,CAKf;;AACA,GANQ,EAMN,CAACA,IAAD,CANM,CAAT;AAQA,QAAM+C,YAAY,GAAG,CAArB;AACA,QAAMC,YAAY,GAAG,CAArB;AACA,QAAMC,SAAS,GAAG,CAAC,CAAC,KAAD,EAAQ,CAAC,KAAT,CAAD,EAAkB,CAAC,KAAD,EAAQ,CAAC,KAAT,CAAlB,CAAlB;AAGA,sBACC;AAAA,4BACC;AAAK,MAAA,SAAS,EAAE1C,OAAO,CAAChB,cAAxB;AAAA,6BAGC,QAAC,YAAD;AACA,QAAA,SAAS,EAAC,YADV;AAEA,QAAA,GAAG,EAAE2D,CAAC,IAAI;AAAE,eAAKC,UAAL,GAAkBD,CAAlB;AAAqB,SAFjC;AAGA,QAAA,MAAM,EAAE,CAAC,CAAClD,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAD,EAAqB,CAACA,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAArB,CAHR;AAIA,QAAA,SAAS,EAAEiD,SAJX;AAKA,QAAA,OAAO,EAAEF,YALT;AAMA,QAAA,OAAO,EAAEC,YANT;AAOA,QAAA,eAAe,EAAE,KAPjB;AAQA,QAAA,kBAAkB,EAAE,IARpB;AASA,QAAA,WAAW,EAAE,KATb;AAUA,QAAA,KAAK,EAAE;AAAC,oBAAS;AAAV,SAVP;AAAA,8BAYQ,CAAC,MAAD,EAAS,CAAC,IAAV,CAZR,YAY+B,EAZ/B,uBAYoD,KAZpD,oBAcC,QAAC,SAAD;AACC,UAAA,GAAG,EAAC,mFADL;AAEC,UAAA,WAAW,EAAC;AAFb;AAAA;AAAA;AAAA;AAAA,gBAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,YADD,EA2BE5C,YAAY,iBACZ;AAAA,4BAAWA,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA,kBADD;AAiCA,CArID;;GAAMR,S;UAMWZ,S;;;KANXY,S;AAuIN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState, useContext } from 'react';\nimport { MapContainer, GeoJSON, TileLayer, Marker, Popup, ZoomControl } from 'react-leaflet'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { multiStateBbox } from '../utilities/utils';\n\nconst useStyles = makeStyles((theme) => ({\n\tnav: {\n\t\tposition: \"absolute\",\n\t\ttop: 0,\n\t\tleft: 0,\n\t\tpadding: \"3px\",\n\t},\n\tmapglContainer: {\n\t\tborder: \"1pt solid midnightblue\",\n\t\theight: window.innerHeight * 0.6,\n\t},\n}));\n\nconst MapboxMap = (props) => {\n\tconst { imgsrc, submittedParams } = props;\n\tconst [ bbox, setBbox ] = useState();\n\tconst [ imgcoords, setImgcoords ] = useState();\n\tconst [ resultsError, setResultsError ] = useState();\n\tconst inputContext = useContext(InputParamsContext);\n\tconst classes = useStyles();\n\tconst mapRef = useRef();\n\n\n\tconst mapStyle = (imgsrc,imgcoords) => {\n\t\treturn ({\n\t\t\tversion: 8,\n\t\t\tsources: {\n\t\t\t\tmapbox: {\n\t\t\t\t\ttype: 'vector',\n\t\t\t\t\turl: 'mapbox://mapbox.mapbox-streets-v8',\n\t\t\t\t},\n\t\t\t\toverlay: {\n\t\t\t\t\ttype: 'image',\n\t\t\t\t\turl: imgsrc,\n\t\t\t\t\tcoordinates: imgcoords,\n\t\t\t\t}\n\t\t\t},\n\t\t\tlayers: [\n\t\t\t\t{\n\t\t\t\t\tid: 'water',\n\t\t\t\t\tsource: 'mapbox',\n\t\t\t\t\t'source-layer': 'water',\n\t\t\t\t\ttype: 'fill',\n\t\t\t\t\tpaint: { 'fill-color': '#2c2c2c' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'boundaries',\n\t\t\t\t\tsource: 'mapbox',\n\t\t\t\t\t'source-layer': 'admin',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'imgLayer',\n\t\t\t\t\tsource: 'overlay',\n\t\t\t\t\ttype: 'raster',\n\t\t\t\t\tpaint: { 'raster-opacity': 0.90 }\n\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t}; \n\n\tconst fetchBbox = postals => {\n\t\tconst jsonparams = JSON.stringify({state: postals, meta: \"bbox\"});\n\t\tfetch(\"https://data.rcc-acis.org/General/state\", {body: jsonparams, method: \"POST\", headers: {'Content-Type': 'application/json'}})\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tsetResultsError(\"Error\");\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (response.meta && response.meta.length) {\n\t\t\t\t\tconst bbox = multiStateBbox(response.meta);\n\t\t\t\t\tsetBbox(bbox);\n\t\t\t\t} else {\n\t\t\t\t\tsetResultsError(\"No bbox for \"+postals);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err.message.includes(\"Failed to execute 'createObjectURL' on 'URL'\")) {\n\t\t\t\t\tsetResultsError(\"Invalid request\");\n\t\t\t\t} else {\n\t\t\t\t\tsetResultsError(err.message);\n\t\t\t\t};\n\t\t\t})\n\t};\n\n\tuseEffect(() => {\n\t\tif (inputContext.inputParams.areaDef.bbox) {\n\t\t\tconst bbox = JSON.parse(submittedParams).bbox;\n\t\t\tconsole.log(bbox)\n\t\t\tsetBbox([parseFloat(bbox[0]),parseFloat(bbox[1]),parseFloat(bbox[2]),parseFloat(bbox[3])]);\n\t\t} else {\n\t\t\tconst postals = inputContext.inputParams.areaDef.state;\n\t\t\tfetchBbox(postals);\n\t\t}\n\t\t// eslint-disable-next-line \n\t}, [inputContext.inputParams.areaDef]);\n\n\tuseEffect(() => {\n\t\tif (bbox) {\n\t\t\t// convert bbox to mapbox coordinates\n\t\t\tsetImgcoords([ [bbox[0],bbox[3]], [bbox[2],bbox[3]], [bbox[2],bbox[1]], [bbox[0],bbox[1]] ]);\n\t\t}\n\t\t// eslint-disable-next-line \n\t}, [bbox]);\n\n\tconst minZoomLevel = 5\n\tconst maxZoomLevel = 9\n\tconst maxBounds = [[37.20, -82.70], [48.60, -65.00]]\n\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.mapglContainer}>\n\n\n\t\t\t\t<MapContainer \n\t\t\t\tclassName=\"marker-map\"\n\t\t\t\tref={m => { this.leafletMap = m }}\n\t\t\t\tbounds={[[bbox[1], bbox[0]], [bbox[3], bbox[2]]]}\n\t\t\t\tmaxBounds={maxBounds}\n\t\t\t\tminZoom={minZoomLevel}\n\t\t\t\tmaxZoom={maxZoomLevel}\n\t\t\t\tscrollWheelZoom={false}\n\t\t\t\tattributionControl={true}\n\t\t\t\tzoomControl={false}\n\t\t\t\tstyle={{\"border\":\"1pt solid gray\"}}>\n\t\t\t\t\n\t\t\t\tcenter={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\n\n\t\t\t\t\t<TileLayer\n\t\t\t\t\t\turl='https://{s}.basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}{r}.png'\n\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n\t\t\t\t\t/>\n\n\t\t\t\t</MapContainer>\n\n\t\t\t\t\n\t\t\t</div>\n\t\t\t{resultsError &&\n\t\t\t\t<p>Error: {resultsError}</p>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default MapboxMap;"]},"metadata":{},"sourceType":"module"}