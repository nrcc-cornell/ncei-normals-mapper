{"ast":null,"code":"import _objectSpread from\"/Users/kle1/progs/React/ncei-normals-mapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kle1/progs/React/ncei-normals-mapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect,useContext}from'react';import Accordion from'@material-ui/core/Accordion';import AccordionSummary from'@material-ui/core/AccordionSummary';import AccordionDetails from'@material-ui/core/AccordionDetails';import Typography from'@material-ui/core/Typography';import ExpandMoreIcon from'@material-ui/icons/ExpandMore';import{makeStyles}from'@material-ui/core/styles';import Checkbox from'@material-ui/core/Checkbox';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormControl from'@material-ui/core/FormControl';import InputParamsContext from'./InputParamsContext';import LevelsSelect from'./LevelsSelect';var useStyles=makeStyles(function(theme){return{imageOptionsContainer:{borderLeft:\"1pt solid midnightblue\",borderRight:\"1pt solid midnightblue\",borderBottom:\"1pt solid midnightblue\",padding:0},accordionDetailsContainer:{paddingTop:0},accordianSummaryRoot:{minHeight:\"1em\",marginTop:\"1em\",marginBottom:\"1em\",'&$expanded':{minHeight:\"1em\",marginBottom:\"0.5em\"}},accordianSummaryContent:{margin:0,padding:0,'&$expanded':{margin:0}},expanded:{},expandIcon:{paddingTop:0,paddingBottom:0},vertCheckbox:{color:\"midnightblue !important\",padding:\"3px\",fontSize:\"90%\"}};});var ImageSelect=function ImageSelect(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),stateOutlines=_useState2[0],setStateOutlines=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),countyOutlines=_useState4[0],setCountyOutlines=_useState4[1];var classes=useStyles();var inputContext=useContext(InputParamsContext);var handleCheckboxChange=function handleCheckboxChange(event){if(event.target.name==='stateOutlines'){setStateOutlines(event.target.checked);}else if(event.target.name==='countyOutlines'){setCountyOutlines(event.target.checked);}};useEffect(function(){var newOverlays=[stateOutlines?\"state:1:black\":\"state:0:black\",countyOutlines?\"county:0.5:grey\":\"county:0:grey\"];inputContext.updateInputParams({image:_objectSpread(_objectSpread({},inputContext.inputParams.image),{},{overlays:newOverlays})});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[stateOutlines,countyOutlines]);return/*#__PURE__*/_jsx(\"div\",{className:classes.imageOptionsContainer,children:/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),\"aria-controls\":\"image-options-content\",id:\"image-options-header\",classes:{root:classes.accordianSummaryRoot,content:classes.accordianSummaryContent,expanded:classes.expanded,expandIcon:classes.expandIcon},children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Image Settings\"})}),/*#__PURE__*/_jsx(AccordionDetails,{className:classes.accordionDetailsContainer,children:/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",style:{width:\"100%\"},children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{size:\"small\",checked:stateOutlines,className:classes.vertCheckbox,onChange:handleCheckboxChange,name:\"stateOutlines\"}),label:\"Show state outlines\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{size:\"small\",checked:countyOutlines,className:classes.vertCheckbox,onChange:handleCheckboxChange,name:\"countyOutlines\"}),label:\"Show county outlines\"}),/*#__PURE__*/_jsx(LevelsSelect,{})]})})]})});};export default ImageSelect;","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/ImageSelect.js"],"names":["React","useState","useEffect","useContext","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","makeStyles","Checkbox","FormControlLabel","FormControl","InputParamsContext","LevelsSelect","useStyles","theme","imageOptionsContainer","borderLeft","borderRight","borderBottom","padding","accordionDetailsContainer","paddingTop","accordianSummaryRoot","minHeight","marginTop","marginBottom","accordianSummaryContent","margin","expanded","expandIcon","paddingBottom","vertCheckbox","color","fontSize","ImageSelect","stateOutlines","setStateOutlines","countyOutlines","setCountyOutlines","classes","inputContext","handleCheckboxChange","event","target","name","checked","newOverlays","updateInputParams","image","inputParams","overlays","root","content","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputParamsContext from './InputParamsContext';\nimport LevelsSelect from './LevelsSelect';\n\nconst useStyles = makeStyles((theme) => ({\n\timageOptionsContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tpadding: 0,\n\t},\n\taccordionDetailsContainer: {\n\t\tpaddingTop: 0,\n\t},\n\taccordianSummaryRoot: {\n\t\tminHeight: \"1em\",\n\t\tmarginTop: \"1em\",\n\t\tmarginBottom: \"1em\",\n\t\t'&$expanded': {\n\t\t\tminHeight: \"1em\",\n\t\t\tmarginBottom: \"0.5em\",\n\t\t},\n\t},\n\taccordianSummaryContent: {\n\t\tmargin: 0,\n\t\tpadding:  0,\n\t\t'&$expanded': {\n\t\t\tmargin: 0,\n\t\t},\n\t},\n\texpanded: {},\n\texpandIcon: {\n\t\tpaddingTop: 0,\n\t\tpaddingBottom: 0,\n\t},\n\tvertCheckbox: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpadding: \"3px\",\n\t\tfontSize: \"90%\",\n\t},\n}));\n\nconst ImageSelect = () => {\n\tconst [ stateOutlines, setStateOutlines ] = useState(true);\n\tconst [ countyOutlines, setCountyOutlines ] = useState(true);\n\tconst classes = useStyles();\n\tconst inputContext = useContext(InputParamsContext);\n\n\tconst handleCheckboxChange = (event) => {\n\t\tif (event.target.name === 'stateOutlines') {\n\t\t\tsetStateOutlines(event.target.checked);\n\t\t} else if (event.target.name === 'countyOutlines') {\n\t\t\tsetCountyOutlines(event.target.checked);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst newOverlays = [\n\t\t\tstateOutlines ? \"state:1:black\" : \"state:0:black\",\n\t\t\tcountyOutlines ? \"county:0.5:grey\" : \"county:0:grey\"\n\t\t];\n\t\tinputContext.updateInputParams({image: {...inputContext.inputParams.image, overlays: newOverlays}});\t\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [stateOutlines, countyOutlines]);\n\n\treturn ( \n\t\t<div className={classes.imageOptionsContainer}>\n\t\t\t<Accordion>\n\t\t\t\t<AccordionSummary\n\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\taria-controls=\"image-options-content\"\n\t\t\t\t\tid=\"image-options-header\"\n\t\t\t\t\tclasses={{root: classes.accordianSummaryRoot, content: classes.accordianSummaryContent, expanded: classes.expanded, expandIcon: classes.expandIcon}}\n\t\t\t\t>\n\t\t\t\t\t<Typography variant=\"body1\">Image Settings</Typography>\n\t\t\t\t</AccordionSummary>\n\t\t\t\t<AccordionDetails\n\t\t\t\t\tclassName={classes.accordionDetailsContainer}\n\t\t\t\t>\n\t\t\t\t\t<FormControl component=\"fieldset\" style={{width:\"100%\"}}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox size=\"small\" checked={stateOutlines} className={classes.vertCheckbox} onChange={handleCheckboxChange} name=\"stateOutlines\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Show state outlines\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox size=\"small\" checked={countyOutlines} className={classes.vertCheckbox} onChange={handleCheckboxChange} name=\"countyOutlines\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Show county outlines\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t\t<LevelsSelect />\n\t\t\t\t\t</FormControl>\n\t\t\t\t</AccordionDetails>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n}\n\nexport default ImageSelect;"]},"metadata":{},"sourceType":"module"}