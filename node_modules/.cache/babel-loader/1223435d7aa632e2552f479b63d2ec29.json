{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/ViewGeotiff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst ViewGeotiff = () => {\n  _s();\n\n  const [mapBlob, setMapBlob] = useState();\n  const [mapError, setMapError] = useState();\n\n  const fetchMap = () => {\n    const input_params = JSON.stringify({\n      state: \"ne,ok\",\n      grid: \"1\",\n      date: \"2012-6\",\n      elems: [{\n        name: \"maxxt\",\n        interval: \"mly\",\n        duration: \"mly\",\n        reduce: \"max\"\n      }],\n      output: \"image\",\n      image: {\n        proj: \"lcc\",\n        overlays: [\"county:1:gray\", \"state:2:purple\"],\n        interp: \"cspline\",\n        width: 350,\n        levels: [90, 95, 100, 105, 110]\n      }\n    });\n    fetch(\"http://data.rcc-acis.org/GridData?params=\" + input_params).then(response => {\n      if (!response.ok) {\n        setMapError(\"Error fetching the map\");\n        return;\n      }\n\n      return response.blob().then(responseBlob => {\n        setMapBlob(URL.createObjectURL(responseBlob));\n      }).catch(err => {\n        setMapError(err.message);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMap,\n      children: \"Get Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [mapBlob && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapBlob,\n        alt: \"requested map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), mapError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", mapError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewGeotiff, \"Z7LjLtyBFA8lLdAcGCwhUMY9yX8=\");\n\n_c = ViewGeotiff;\nexport default ViewGeotiff;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewGeotiff\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/ViewGeotiff.js"],"names":["React","useState","ViewGeotiff","mapBlob","setMapBlob","mapError","setMapError","fetchMap","input_params","JSON","stringify","state","grid","date","elems","name","interval","duration","reduce","output","image","proj","overlays","interp","width","levels","fetch","then","response","ok","blob","responseBlob","URL","createObjectURL","catch","err","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,EAAtC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AACtB,UAAMC,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAe;AACnCC,MAAAA,KAAK,EAAC,OAD6B;AAEnCC,MAAAA,IAAI,EAAC,GAF8B;AAGnCC,MAAAA,IAAI,EAAC,QAH8B;AAInCC,MAAAA,KAAK,EAAC,CAAC;AACNC,QAAAA,IAAI,EAAC,OADC;AAENC,QAAAA,QAAQ,EAAC,KAFH;AAGNC,QAAAA,QAAQ,EAAC,KAHH;AAINC,QAAAA,MAAM,EAAC;AAJD,OAAD,CAJ6B;AAUnCC,MAAAA,MAAM,EAAC,OAV4B;AAWnCC,MAAAA,KAAK,EAAC;AACLC,QAAAA,IAAI,EAAC,KADA;AAELC,QAAAA,QAAQ,EAAC,CAAC,eAAD,EAAiB,gBAAjB,CAFJ;AAGLC,QAAAA,MAAM,EAAC,SAHF;AAILC,QAAAA,KAAK,EAAC,GAJD;AAKLC,QAAAA,MAAM,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf;AALF;AAX6B,KAAf,CAArB;AAmBAC,IAAAA,KAAK,CAAC,8CAA4ClB,YAA7C,CAAL,CACEmB,IADF,CACOC,QAAQ,IAAI;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACjBvB,QAAAA,WAAW,CAAC,wBAAD,CAAX;AACA;AACA;;AACD,aAAOsB,QAAQ,CAACE,IAAT,GACNH,IADM,CACDI,YAAY,IAAI;AACrB3B,QAAAA,UAAU,CAAC4B,GAAG,CAACC,eAAJ,CAAoBF,YAApB,CAAD,CAAV;AACA,OAHM,EAING,KAJM,CAIAC,GAAG,IAAI;AACb7B,QAAAA,WAAW,CAAC6B,GAAG,CAACC,OAAL,CAAX;AACA,OANM,CAAP;AAOA,KAbF;AAcA,GAlCD;;AAoCA,sBACC;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAE7B,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,iBACEJ,OAAO,iBACN;AAAK,QAAA,GAAG,EAAEA,OAAV;AAAmB,QAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFH,EAIEE,QAAQ,iBACR;AAAA,8BAAWA,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAaA,CAtDD;;GAAMH,W;;KAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React, {useState} from \"react\";\n\nconst ViewGeotiff = () => {\n\n\tconst [mapBlob, setMapBlob] = useState();\n\tconst [mapError, setMapError] = useState();\n\n\tconst fetchMap = () => {\n\t\tconst input_params = JSON.stringify({\n\t\t\tstate:\"ne,ok\",\n\t\t\tgrid:\"1\",\n\t\t\tdate:\"2012-6\",\n\t\t\telems:[{\n\t\t\t\tname:\"maxxt\",\n\t\t\t\tinterval:\"mly\",\n\t\t\t\tduration:\"mly\",\n\t\t\t\treduce:\"max\",\n\t\t\t}],\n\t\t\toutput:\"image\",\n\t\t\timage:{\n\t\t\t\tproj:\"lcc\",\n\t\t\t\toverlays:[\"county:1:gray\",\"state:2:purple\"],\n\t\t\t\tinterp:\"cspline\",\n\t\t\t\twidth:350,\n\t\t\t\tlevels:[90,95,100,105,110],\n\t\t\t},\n\t\t});\n\t\tfetch(\"http://data.rcc-acis.org/GridData?params=\"+input_params)\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tsetMapError(\"Error fetching the map\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn response.blob()\n\t\t\t\t.then(responseBlob => {\n\t\t\t\t\tsetMapBlob(URL.createObjectURL(responseBlob));\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tsetMapError(err.message);\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<button onClick={fetchMap}>Get Map</button>\n\t\t\t<div>\n\t\t\t\t{mapBlob &&\n\t\t\t\t\t\t<img src={mapBlob} alt=\"requested map\" />\n\t\t\t\t}\n\t\t\t\t{mapError &&\n\t\t\t\t\t<p>Error: {mapError}</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n  \nexport default ViewGeotiff;\n"]},"metadata":{},"sourceType":"module"}