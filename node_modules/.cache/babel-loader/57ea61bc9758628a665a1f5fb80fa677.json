{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/ViewGeotiff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst ViewGeotiff = () => {\n  _s();\n\n  const [mapBlob, setMapBlob] = useState();\n  const [mapError, setMapError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const fetchMap = () => {\n    const input_params = JSON.stringify({\n      \"grid\": \"nrcc-nn\",\n      \"state\": \"ME,WV\",\n      \"sdate\": \"2020-01\",\n      \"edate\": \"2020-01\",\n      \"elems\": [{\n        \"name\": \"pcpn\",\n        \"interval\": [0, 1],\n        \"duration\": 1,\n        \"reduce\": \"sum\"\n      }],\n      \"output\": \"gif\"\n    });\n    /*\t\tconst input_params = JSON.stringify({\n    \t\t\tstate:\"ne,ok\",\n    \t\t\tgrid:\"1\",\n    \t\t\tdate:\"2012-6\",\n    \t\t\telems:[{\n    \t\t\t\tname:\"maxt\",\n    \t\t\t\tinterval:\"mly\",\n    \t\t\t\tduration:\"mly\",\n    \t\t\t\treduce:\"max\",\n    \t\t\t}],\n    \t\t\toutput:\"image\",\n    \t\t\timage:{\n    \t\t\t\tproj:\"lcc\",\n    \t\t\t\toverlays:[\"county:1:gray\",\"state:2:purple\"],\n    \t\t\t\tinterp:\"cspline\",\n    \t\t\t\twidth:350,\n    \t\t\t\tlevels:[90,95,100,105,110],\n    \t\t\t},\n    \t\t});*/\n    // Reset \n\n    setMapBlob();\n    setMapError();\n    setLoading(true);\n    fetch(\"https://grid2.rcc-acis.org/GridData?params=\" + input_params, {\n      method: \"POST\"\n    }).then(response => {\n      if (!response.ok) {\n        setMapError(\"Error fetching the map\");\n        return;\n      }\n\n      return response.blob();\n    }).then(responseBlob => {\n      setMapBlob(URL.createObjectURL(responseBlob));\n    }).catch(err => {\n      setMapError(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMap,\n      children: \"Get Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }, this), mapBlob && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapBlob,\n        alt: \"requested map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), mapError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", mapError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewGeotiff, \"oXEL/qFH/2Wn0T1heYPxJXXtYac=\");\n\n_c = ViewGeotiff;\nexport default ViewGeotiff;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewGeotiff\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/ViewGeotiff.js"],"names":["React","useState","CircularProgress","ViewGeotiff","mapBlob","setMapBlob","mapError","setMapError","loading","setLoading","fetchMap","input_params","JSON","stringify","fetch","method","then","response","ok","blob","responseBlob","URL","createObjectURL","catch","err","message","finally"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMS,QAAQ,GAAG,MAAM;AAEtB,UAAMC,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAe;AACnC,cAAO,SAD4B;AAEnC,eAAQ,OAF2B;AAGnC,eAAQ,SAH2B;AAInC,eAAQ,SAJ2B;AAKnC,eAAQ,CAAC;AACR,gBAAO,MADC;AAER,oBAAW,CAAC,CAAD,EAAG,CAAH,CAFH;AAGR,oBAAW,CAHH;AAIR,kBAAS;AAJD,OAAD,CAL2B;AAWnC,gBAAS;AAX0B,KAAf,CAArB;AAcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;AACAR,IAAAA,UAAU;AACVE,IAAAA,WAAW;AACXE,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAK,IAAAA,KAAK,CAAC,gDAA8CH,YAA/C,EAA6D;AAACI,MAAAA,MAAM,EAAC;AAAR,KAA7D,CAAL,CACEC,IADF,CACOC,QAAQ,IAAI;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACjBX,QAAAA,WAAW,CAAC,wBAAD,CAAX;AACA;AACA;;AACD,aAAOU,QAAQ,CAACE,IAAT,EAAP;AACA,KAPF,EAQEH,IARF,CAQOI,YAAY,IAAI;AACpBf,MAAAA,UAAU,CAACgB,GAAG,CAACC,eAAJ,CAAoBF,YAApB,CAAD,CAAV;AACA,KAVH,EAWEG,KAXF,CAWQC,GAAG,IAAI;AACbjB,MAAAA,WAAW,CAACiB,GAAG,CAACC,OAAL,CAAX;AACA,KAbF,EAcEC,OAdF,CAcU,MAAM;AACdjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAhBF;AAiBA,GA1DD;;AA4DA,sBACC;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,iBACEF,OAAO,iBACP,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAFF,EAIEJ,OAAO,iBACN;AAAK,QAAA,GAAG,EAAEA,OAAV;AAAmB,QAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cALH,EAOEE,QAAQ,iBACR;AAAA,8BAAWA,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAgBA,CAlFD;;GAAMH,W;;KAAAA,W;AAoFN,eAAeA,WAAf","sourcesContent":["import React, {useState} from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst ViewGeotiff = () => {\n\n\tconst [mapBlob, setMapBlob] = useState();\n\tconst [mapError, setMapError] = useState();\n\tconst [loading, setLoading] = useState(false);\n\n\tconst fetchMap = () => {\n\n\t\tconst input_params = JSON.stringify({\n\t\t\t\"grid\":\"nrcc-nn\",\n\t\t\t\"state\":\"ME,WV\",\n\t\t\t\"sdate\":\"2020-01\",\n\t\t\t\"edate\":\"2020-01\",\n\t\t\t\"elems\":[{\n\t\t\t\t\"name\":\"pcpn\",\n\t\t\t\t\"interval\":[0,1],\n\t\t\t\t\"duration\":1,\n\t\t\t\t\"reduce\":\"sum\"\n\t\t\t}],\n\t\t\t\"output\":\"gif\"\n\t\t})\n\n/*\t\tconst input_params = JSON.stringify({\n\t\t\tstate:\"ne,ok\",\n\t\t\tgrid:\"1\",\n\t\t\tdate:\"2012-6\",\n\t\t\telems:[{\n\t\t\t\tname:\"maxt\",\n\t\t\t\tinterval:\"mly\",\n\t\t\t\tduration:\"mly\",\n\t\t\t\treduce:\"max\",\n\t\t\t}],\n\t\t\toutput:\"image\",\n\t\t\timage:{\n\t\t\t\tproj:\"lcc\",\n\t\t\t\toverlays:[\"county:1:gray\",\"state:2:purple\"],\n\t\t\t\tinterp:\"cspline\",\n\t\t\t\twidth:350,\n\t\t\t\tlevels:[90,95,100,105,110],\n\t\t\t},\n\t\t});*/\n\n\t\t// Reset \n\t\tsetMapBlob();\n\t\tsetMapError();\n\t\tsetLoading(true);\n\n\t\tfetch(\"https://grid2.rcc-acis.org/GridData?params=\"+input_params, {method:\"POST\"})\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tsetMapError(\"Error fetching the map\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn response.blob()\n\t\t\t})\n\t\t\t.then(responseBlob => {\n\t\t\t\t\tsetMapBlob(URL.createObjectURL(responseBlob));\n\t\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsetMapError(err.message);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<button onClick={fetchMap}>Get Map</button>\n\t\t\t<div>\n\t\t\t\t{loading &&\n\t\t\t\t\t<CircularProgress />\n\t\t\t\t}\n\t\t\t\t{mapBlob &&\n\t\t\t\t\t\t<img src={mapBlob} alt=\"requested map\" />\n\t\t\t\t}\n\t\t\t\t{mapError &&\n\t\t\t\t\t<p>Error: {mapError}</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default ViewGeotiff;\n"]},"metadata":{},"sourceType":"module"}