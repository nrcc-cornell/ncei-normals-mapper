{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/ncei-normals-mapper/src/components/LevelsSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InfoAdornment from './InfoAdornment';\nimport InputParamsContext from './InputParamsContext';\nimport { infoText } from '../utilities/constants';\nconst useStyles = makeStyles(theme => ({\n  levelsContainer: {\n    martinTop: \"0.5em\"\n  },\n  levelInputLabel: {\n    color: \"rgba(0,0,0,0.87)\"\n  }\n}));\n\nconst LevelsSelect = () => {\n  _s();\n\n  const [levels, setLevels] = useState(\"\");\n  const classes = useStyles();\n  const inputContext = useContext(InputParamsContext);\n\n  const handleLevelChange = event => {\n    const newlevels = event.target.value.replace(\" \", \"\");\n    ;\n    setLevels(newlevels);\n    inputContext.updateInputParams({\n      image: { ...inputContext.inputParams.image,\n        levels: newlevels\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (inputContext.levels.server) {\n      const newlevels = inputContext.levels.server.join(\",\");\n      setLevels(newlevels);\n    }\n  }, [inputContext.levels.server]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.levelsContainer,\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"levelInput\",\n        className: classes.levelInputLabel,\n        children: \"Contour levels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: levels,\n        id: \"levelInput\",\n        label: \"Contour levels\",\n        margin: \"dense\",\n        inputProps: {\n          spellCheck: false\n        },\n        onChange: handleLevelChange,\n        endAdornment: /*#__PURE__*/_jsxDEV(InfoAdornment, {\n          content: infoText.levels\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"Comma-separated contour level list; lowest to highest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LevelsSelect, \"PlEihj5F1mqxuzXhKfjxRa6KpVE=\", false, function () {\n  return [useStyles];\n});\n\n_c = LevelsSelect;\nexport default LevelsSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LevelsSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/ncei-normals-mapper/src/components/LevelsSelect.js"],"names":["React","useState","useEffect","useContext","makeStyles","FormControl","InputLabel","OutlinedInput","FormHelperText","InfoAdornment","InputParamsContext","infoText","useStyles","theme","levelsContainer","martinTop","levelInputLabel","color","LevelsSelect","levels","setLevels","classes","inputContext","handleLevelChange","event","newlevels","target","value","replace","updateInputParams","image","inputParams","server","join","spellCheck"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACrCC,EAAAA,eAAe,EAAE;AACbC,IAAAA,SAAS,EAAE;AADE,GADoB;AAIxCC,EAAAA,eAAe,EAAE;AAChBC,IAAAA,KAAK,EAAE;AADS;AAJuB,CAAZ,CAAD,CAA5B;;AASA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMoB,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,YAAY,GAAGnB,UAAU,CAACO,kBAAD,CAA/B;;AAEA,QAAMa,iBAAiB,GAAIC,KAAD,IAAW;AACpC,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,GAA3B,EAA+B,EAA/B,CAAlB;AAAqD;AACrDR,IAAAA,SAAS,CAACK,SAAD,CAAT;AACAH,IAAAA,YAAY,CAACO,iBAAb,CAA+B;AAACC,MAAAA,KAAK,EAAE,EAAC,GAAGR,YAAY,CAACS,WAAb,CAAyBD,KAA7B;AAAoCX,QAAAA,MAAM,EAAEM;AAA5C;AAAR,KAA/B;AACA,GAJD;;AAMAvB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIoB,YAAY,CAACH,MAAb,CAAoBa,MAAxB,EAAgC;AAC/B,YAAMP,SAAS,GAAGH,YAAY,CAACH,MAAb,CAAoBa,MAApB,CAA2BC,IAA3B,CAAgC,GAAhC,CAAlB;AACAb,MAAAA,SAAS,CAACK,SAAD,CAAT;AACA;AACD,GALQ,EAKN,CAACH,YAAY,CAACH,MAAb,CAAoBa,MAArB,CALM,CAAT;AAOA,sBACO;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACP,eAAxB;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAC,UAArB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,YAApB;AAAiC,QAAA,SAAS,EAAEO,OAAO,CAACL,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AACI,QAAA,KAAK,EAAEG,MADX;AAEI,QAAA,EAAE,EAAC,YAFP;AAGI,QAAA,KAAK,EAAC,gBAHV;AAII,QAAA,MAAM,EAAC,OAJX;AAKI,QAAA,UAAU,EAAE;AAAEe,UAAAA,UAAU,EAAE;AAAd,SALhB;AAMI,QAAA,QAAQ,EAAEX,iBANd;AAOI,QAAA,YAAY,eAAE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEZ,QAAQ,CAACQ;AAAjC;AAAA;AAAA;AAAA;AAAA;AAPlB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADP;AAiBA,CAnCD;;GAAMD,Y;UAEWN,S;;;KAFXM,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InfoAdornment from './InfoAdornment';\nimport InputParamsContext from './InputParamsContext';\nimport { infoText } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n    levelsContainer: {\n        martinTop: \"0.5em\",\n    },\n\tlevelInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n\t},\n}));\n\nconst LevelsSelect = () => {\n\tconst [ levels, setLevels ] = useState(\"\");\n\tconst classes = useStyles();\n\tconst inputContext = useContext(InputParamsContext);\n\t\n\tconst handleLevelChange = (event) => {\n\t\tconst newlevels = event.target.value.replace(\" \",\"\");;\n\t\tsetLevels(newlevels);\n\t\tinputContext.updateInputParams({image: {...inputContext.inputParams.image, levels: newlevels}});\n\t};\n\n\tuseEffect(() => {\n\t\tif (inputContext.levels.server) {\n\t\t\tconst newlevels = inputContext.levels.server.join(\",\");\n\t\t\tsetLevels(newlevels);\t\n\t\t}\n\t}, [inputContext.levels.server]);\n\n\treturn ( \n        <div className={classes.levelsContainer}>\n            <FormControl variant=\"outlined\">\n                <InputLabel htmlFor=\"levelInput\" className={classes.levelInputLabel}>Contour levels</InputLabel>\n                <OutlinedInput\n                    value={levels}\n                    id=\"levelInput\"\n                    label=\"Contour levels\"\n                    margin=\"dense\"\n                    inputProps={{ spellCheck: false }}\n                    onChange={handleLevelChange}\n                    endAdornment={<InfoAdornment content={infoText.levels} />}\n                />\n                <FormHelperText>Comma-separated contour level list; lowest to highest</FormHelperText>\n            </FormControl>\n\t\t</div>\n\t);\n}\n\nexport default LevelsSelect;"]},"metadata":{},"sourceType":"module"}