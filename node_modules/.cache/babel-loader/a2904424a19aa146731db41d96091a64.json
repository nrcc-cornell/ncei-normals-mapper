{"ast":null,"code":"// elements in Element selection menu\nconst elements = [{\n  menuName: 'Maximum Temperature',\n  name: 'maxt',\n  reduce: 'mean',\n  units: '(degrees F)'\n}, //set as default\n{\n  menuName: 'Minimum Temperature',\n  name: 'mint',\n  reduce: 'mean',\n  units: '(degrees F)'\n}, {\n  menuName: 'Average Temperature',\n  name: 'avgt',\n  reduce: 'mean',\n  units: '(degrees F)'\n}, {\n  menuName: 'Precipitation',\n  name: 'pcpn',\n  reduce: 'sum',\n  units: '(inches)'\n}, {\n  menuName: 'All (for point only)',\n  name: 'all',\n  reduce: null,\n  units: null\n}];\n\nconst elementNames = () => {\n  const names = {\n    date: \"Date\"\n  };\n  elements.forEach(e => {\n    names[e.name] = e.menuName + \" \" + e.units;\n  });\n  names[\"all\"] = \"All Elements\";\n  return names;\n}; // month items in date selections\n\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; // seasons items in date selections\n\nconst seasons = [['winter', '12', '02'], ['spring', '03', '05'], ['summer', '06', '08'], ['autumn', '09', '11'], ['annual', '01', '12']]; // items in Region selection menu\n\nconst regions = [{\n  'name': '- Climate Regions -',\n  'states': -1\n}, {\n  'name': 'CONUS',\n  'states': 'WA-MN-FL-ME'\n}, {\n  'name': 'Northeast',\n  'states': 'ME-PA-MD'\n}, {\n  'name': 'Southeast',\n  'states': 'VA-FL-AL-NC'\n}, {\n  'name': 'Upper Midwest',\n  'states': 'MN-IA-MI'\n}, {\n  'name': 'Ohio Valley',\n  'states': 'IL-MO-TN-WV'\n}, {\n  'name': 'South',\n  'states': 'KS-TX-MS'\n}, {\n  'name': 'Northern Rockies & Plains',\n  'states': 'MT-NE'\n}, {\n  'name': 'Northwest',\n  'states': 'WA-ID'\n}, {\n  'name': 'West',\n  'states': 'CA-NV'\n}, {\n  'name': 'Southwest',\n  'states': 'UT-AZ-CO'\n}, {\n  'name': '- Regional Climate Centers -',\n  'states': -2\n}, {\n  'name': 'Northeast',\n  'states': 'ME-WV'\n}, {\n  'name': 'Southeast',\n  'states': 'VA-FL-AL-NC'\n}, {\n  'name': 'Midwestern',\n  'states': 'MN-IA-MO-OH'\n}, {\n  'name': 'Southern',\n  'states': 'TX-OK-TN'\n}, {\n  'name': 'High Plains',\n  'states': 'ND-WY-KS'\n}, {\n  'name': 'Western',\n  'states': 'CA-MT-NM'\n}, {\n  'name': '- NWS Regions -',\n  'states': -3\n}, {\n  'name': 'Eastern',\n  'states': 'ME-OH-SC'\n}, {\n  'name': 'Southern',\n  'states': 'NM-OK-TX-FL'\n}, {\n  'name': 'Central',\n  'states': 'WY-MN-MI-KY-MO'\n}, {\n  'name': 'Western',\n  'states': 'WA-MT-CA'\n}, {\n  'name': '- NCA Regions -',\n  'states': -4\n}, {\n  'name': 'Northeast',\n  'states': 'ME-WV'\n}, {\n  'name': 'Southeast',\n  'states': 'VA-FL-AR'\n}, {\n  'name': 'Midwest',\n  'states': 'MN-IA-MO-OH'\n}, {\n  'name': 'Great Plains',\n  'states': 'MT-TX'\n}, {\n  'name': 'Northwest',\n  'states': 'WA-ID'\n}, {\n  'name': 'Southwest',\n  'states': 'CA-WY-NM'\n}]; // default set of input parameters\n\nconst default_params = {\n  \"grid\": \"nrcc-nn\",\n  //\"state\":\"ME,WV\",\n  \"areaDef\": {\n    state: \"ME,WV\"\n  },\n  \"sdate\": \"2019-01\",\n  \"edate\": \"2019-01\",\n  \"elems\": [{\n    \"name\": \"maxt\",\n    \"interval\": [0, 1],\n    \"duration\": 1,\n    \"reduce\": \"mean\"\n  }],\n  \"output\": \"gif\"\n}; // width of options drawer\n\nconst drawerWidth = 400; // text in information popups\n\nconst infoText = {\n  postal: `A list of state abbreviations will return a map emcompassing all states in the list. \n    For example, \"ME,WV\" will return the Northeast. For menus under \"State options\", the list of items will be \n    all those at least partially within the states in the list.`,\n  bbox: 'Longitudes in the Western Hemisphere are negative. Postive West and East values entered here will be changed to negative.',\n  loc: 'Longitudes in the Western Hemisphere are negative. Postive longitude values entered here will be changed to negative.'\n};\nexport { elements, elementNames, regions, months, seasons, default_params, drawerWidth, infoText };","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/utilities/constants.js"],"names":["elements","menuName","name","reduce","units","elementNames","names","date","forEach","e","months","seasons","regions","default_params","state","drawerWidth","infoText","postal","bbox","loc"],"mappings":"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","sourcesContent":["// elements in Element selection menu\nconst elements = [\n    {menuName: 'Maximum Temperature',  name: 'maxt', reduce: 'mean', units: '(degrees F)'},\t//set as default\n    {menuName: 'Minimum Temperature',  name: 'mint', reduce: 'mean', units: '(degrees F)'},\n    {menuName: 'Average Temperature',  name: 'avgt', reduce: 'mean', units: '(degrees F)'},\n    {menuName: 'Precipitation',        name: 'pcpn', reduce: 'sum', units: '(inches)'},\n    {menuName: 'All (for point only)', name: 'all',  reduce: null, units: null},\n];\n\nconst elementNames = () => {\n    const names = {date: \"Date\"};\n    elements.forEach((e) => {\n        names[e.name] = e.menuName + \" \" + e.units;\n    })\n    names[\"all\"] = \"All Elements\"\n    return names;\n};\n\n// month items in date selections\nconst months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n\n// seasons items in date selections\nconst seasons = [\n    ['winter', '12', '02'],\n    ['spring', '03', '05'],\n    ['summer', '06', '08'],\n    ['autumn', '09', '11'],\n    ['annual', '01', '12'],\n];\n\n// items in Region selection menu\nconst regions = [\n    {'name': '- Climate Regions -', 'states': -1},\n    {'name': 'CONUS', 'states': 'WA-MN-FL-ME'},\n    {'name': 'Northeast', 'states': 'ME-PA-MD'},\n    {'name': 'Southeast', 'states': 'VA-FL-AL-NC'},\n    {'name': 'Upper Midwest', 'states': 'MN-IA-MI'},\n    {'name': 'Ohio Valley', 'states': 'IL-MO-TN-WV'},\n    {'name': 'South', 'states': 'KS-TX-MS'},\n    {'name': 'Northern Rockies & Plains', 'states': 'MT-NE'},\n    {'name': 'Northwest', 'states': 'WA-ID'},\n    {'name': 'West', 'states': 'CA-NV'},\n    {'name': 'Southwest', 'states': 'UT-AZ-CO'},\n    {'name': '- Regional Climate Centers -', 'states': -2},\n    {'name': 'Northeast', 'states': 'ME-WV'},\n    {'name': 'Southeast', 'states': 'VA-FL-AL-NC'},\n    {'name': 'Midwestern', 'states': 'MN-IA-MO-OH'},\n    {'name': 'Southern', 'states': 'TX-OK-TN'},\n    {'name': 'High Plains', 'states': 'ND-WY-KS'},\n    {'name': 'Western', 'states': 'CA-MT-NM'},\n    {'name': '- NWS Regions -', 'states': -3},\n    {'name': 'Eastern', 'states': 'ME-OH-SC'},\n    {'name': 'Southern', 'states': 'NM-OK-TX-FL'},\n    {'name': 'Central', 'states': 'WY-MN-MI-KY-MO'},\n    {'name': 'Western', 'states': 'WA-MT-CA'},\n    {'name': '- NCA Regions -', 'states': -4},\n    {'name': 'Northeast', 'states': 'ME-WV'},\n    {'name': 'Southeast', 'states': 'VA-FL-AR'},\n    {'name': 'Midwest', 'states': 'MN-IA-MO-OH'},\n    {'name': 'Great Plains', 'states': 'MT-TX'},\n    {'name': 'Northwest', 'states': 'WA-ID'},\n    {'name': 'Southwest', 'states': 'CA-WY-NM'},\n];\n\n// default set of input parameters\nconst default_params = {\n    \"grid\":\"nrcc-nn\",\n    //\"state\":\"ME,WV\",\n    \"areaDef\":{state: \"ME,WV\"},\n    \"sdate\":\"2019-01\",\n    \"edate\":\"2019-01\",\n    \"elems\":[{\n      \"name\":\"maxt\",\n      \"interval\":[0,1],\n      \"duration\":1,\n      \"reduce\":\"mean\"\n    }],\n    \"output\":\"gif\",\n};\n\n// width of options drawer\nconst drawerWidth = 400;\n\n// text in information popups\nconst infoText = {\n    postal: `A list of state abbreviations will return a map emcompassing all states in the list. \n    For example, \"ME,WV\" will return the Northeast. For menus under \"State options\", the list of items will be \n    all those at least partially within the states in the list.`,\n    bbox: 'Longitudes in the Western Hemisphere are negative. Postive West and East values entered here will be changed to negative.',\n    loc: 'Longitudes in the Western Hemisphere are negative. Postive longitude values entered here will be changed to negative.',\n};\n\nexport {elements, elementNames, regions, months, seasons, default_params, drawerWidth, infoText};"]},"metadata":{},"sourceType":"module"}