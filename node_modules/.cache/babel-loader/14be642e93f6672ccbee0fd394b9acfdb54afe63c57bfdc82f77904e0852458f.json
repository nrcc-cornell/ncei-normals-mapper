{"ast":null,"code":"import _slicedToArray from\"/Users/keith/progs/React/ncei-normals-mapper/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Typography from'@mui/material/Typography';import Radio from'@mui/material/Radio';import RadioGroup from'@mui/material/RadioGroup';import FormControlLabel from'@mui/material/FormControlLabel';import FormControl from'@mui/material/FormControl';import FormLabel from'@mui/material/FormLabel';import{makeStyles}from'@mui/styles';import SeasonSelect from'./SeasonSelect';import DateRange from'./DateRange';import{months,seasons}from'../utilities/constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{dateTypeContainer:{borderLeft:\"1pt solid midnightblue\",borderRight:\"1pt solid midnightblue\",borderBottom:\"1pt solid midnightblue\",padding:\"1em 1em\"},radioButton:{color:\"midnightblue !important\",paddingRight:\"3px\"},formControl:{marginTop:\"0.5em\"},dateSeperator:{display:\"inline-block\",lineHeight:\"2.5em\",verticalAlign:\"bottom\",margin:\"0.5em 0.5em 0.25em\"}};});var DateSelect=function DateSelect(props){var updateInputParams=props.updateInputParams,inputParams=props.inputParams;var _useState=useState('month'),_useState2=_slicedToArray(_useState,2),dateType=_useState2[0],setDateType=_useState2[1];var classes=useStyles();var handleTypeChange=function handleTypeChange(event){var newDateType=event.target.value;setDateType(newDateType);if(newDateType==='month'){updateInputParams({sdate:inputParams.edate});}};return/*#__PURE__*/_jsxs(\"div\",{className:classes.dateTypeContainer,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Select date\"}),/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",className:classes.formControl,children:[/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",children:\"Date type:\"}),/*#__PURE__*/_jsxs(RadioGroup,{row:true,\"aria-label\":\"date type\",name:\"datetype\",value:dateType,onChange:handleTypeChange,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"month\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.radioButton}),label:\"Month\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"season\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.radioButton}),label:\"Season/Year\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"interval\",control:/*#__PURE__*/_jsx(Radio,{size:\"small\",className:classes.radioButton}),label:\"Interval\"})]})]}),dateType==='month'&&/*#__PURE__*/_jsx(SeasonSelect,{choices:months,label:\"Click to select month\",updateInputParams:updateInputParams}),dateType==='season'&&/*#__PURE__*/_jsx(SeasonSelect,{choices:seasons,label:\"Click to select season\",updateInputParams:updateInputParams}),dateType==='interval'&&/*#__PURE__*/_jsx(DateRange,{updateInputParams:updateInputParams})]});};export default DateSelect;","map":{"version":3,"names":["React","useState","Typography","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","makeStyles","SeasonSelect","DateRange","months","seasons","jsx","_jsx","jsxs","_jsxs","useStyles","theme","dateTypeContainer","borderLeft","borderRight","borderBottom","padding","radioButton","color","paddingRight","formControl","marginTop","dateSeperator","display","lineHeight","verticalAlign","margin","DateSelect","props","updateInputParams","inputParams","_useState","_useState2","_slicedToArray","dateType","setDateType","classes","handleTypeChange","event","newDateType","target","value","sdate","edate","className","children","variant","component","row","name","onChange","control","size","label","choices"],"sources":["/Users/keith/progs/React/ncei-normals-mapper/src/components/DateSelect.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { makeStyles } from '@mui/styles';\nimport SeasonSelect from './SeasonSelect';\nimport DateRange from './DateRange';\nimport { months, seasons } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n\tdateTypeContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tradioButton: {\n\t\tcolor: \"midnightblue !important\",\n\t\tpaddingRight: \"3px\",\n\t},\n\tformControl: {\n\t\tmarginTop: \"0.5em\",\n\t},\n\tdateSeperator: {\n\t\tdisplay: \"inline-block\",\n\t\tlineHeight: \"2.5em\",\n\t\tverticalAlign: \"bottom\",\n\t\tmargin: \"0.5em 0.5em 0.25em\",\n\t},\n}));\n\nconst DateSelect = (props) => {\n\tconst { updateInputParams, inputParams } = props;\n\tconst [dateType, setDateType] = useState('month');\n\tconst classes = useStyles();\n \n\tconst handleTypeChange = (event) => {\n\t\tconst newDateType = event.target.value;\n\t\tsetDateType(newDateType);\n\t\tif (newDateType === 'month') {\n\t\t\tupdateInputParams({sdate: inputParams.edate});\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div className={classes.dateTypeContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect date\n\t\t\t</Typography>\n\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Date type:</FormLabel>\n\t\t\t\t<RadioGroup row aria-label=\"date type\" name=\"datetype\" value={dateType} onChange={handleTypeChange}>\n\t\t\t\t\t<FormControlLabel value=\"month\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Month\" />\n\t\t\t\t\t<FormControlLabel value=\"season\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Season/Year\" />\n\t\t\t\t\t<FormControlLabel value=\"interval\" control={<Radio size=\"small\" className={classes.radioButton} />} label=\"Interval\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t{dateType === 'month' &&\n\t\t\t\t<SeasonSelect \n\t\t\t\t\tchoices={months}\n\t\t\t\t\tlabel=\"Click to select month\"\n\t\t\t\t\tupdateInputParams = {updateInputParams}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t{dateType === 'season' &&\n\t\t\t\t<SeasonSelect \n\t\t\t\t\tchoices={seasons}\n\t\t\t\t\tlabel=\"Click to select season\"\n\t\t\t\t\tupdateInputParams = {updateInputParams}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t{dateType === 'interval' &&\n\t\t\t\t<DateRange \n\t\t\t\t\tupdateInputParams = {updateInputParams}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default DateSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}