{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/OptionsSelection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ElementMenu from './ElementMenu';\nimport DateRange from './DateRange';\nconst drawerWidth = 400;\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    \"&:focus\": {\n      color: \"#3f51b5\",\n      backgroundColor: \"lightblue\"\n    },\n    \"&:hover\": {\n      color: \"#3f51b5\",\n      backgroundColor: \"lightblue\"\n    }\n  },\n  submitButton: {\n    backgroundColor: \"midnightblue\",\n    color: \"white\",\n    \"&:focus\": {\n      color: \"midnightblue\",\n      backgroundColor: \"lightblue\"\n    },\n    \"&:hover\": {\n      color: \"midnightblue\",\n      backgroundColor: \"lightblue\"\n    }\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst OptionsSelection = props => {\n  _s();\n\n  const {\n    open,\n    handleDrawerClose,\n    handleViewMapClick\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Close drawer\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.menuButton,\n            \"aria-label\": \"close drawer\",\n            onClick: handleDrawerClose,\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ElementMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DateRange, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Area selection - bounding box, state, drag rectangle, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"view map\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"medium\",\n          className: classes.submitButton,\n          onClick: handleViewMapClick,\n          children: \"View Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(OptionsSelection, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = OptionsSelection;\nexport default OptionsSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionsSelection\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/OptionsSelection.js"],"names":["React","makeStyles","Divider","Drawer","IconButton","Tooltip","Button","ChevronLeftIcon","ElementMenu","DateRange","drawerWidth","useStyles","theme","menuButton","color","backgroundColor","submitButton","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","OptionsSelection","props","open","handleDrawerClose","handleViewMapClick","classes","paper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ElementMenu from './ElementMenu';\nimport DateRange from './DateRange';\n\nconst drawerWidth = 400;\n\nconst useStyles = makeStyles((theme) => ({\n\tmenuButton: {\n\t\t\"&:focus\": {\n\t\t\tcolor: \"#3f51b5\",\n\t\t\tbackgroundColor: \"lightblue\",\n\t\t},\n\t\t\"&:hover\": {\n\t\t\tcolor: \"#3f51b5\",\n\t\t\tbackgroundColor: \"lightblue\",\n\t\t},\n\t},\n\tsubmitButton: {\n\t\tbackgroundColor: \"midnightblue\",\n\t\tcolor: \"white\",\n\t\t\"&:focus\": {\n\t\t\tcolor: \"midnightblue\",\n\t\t\tbackgroundColor: \"lightblue\",\n\t\t},\n\t\t\"&:hover\": {\n\t\t\tcolor: \"midnightblue\",\n\t\t\tbackgroundColor: \"lightblue\",\n\t\t},\n\t},\n\t\tdrawer: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t},\n\t\tdrawerPaper: {\n\t\t\twidth: drawerWidth,\n\t\t},\n\t\tdrawerHeader: {\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tpadding: theme.spacing(0, 1),\n\t\t\t// necessary for content to be below app bar\n\t\t\t...theme.mixins.toolbar,\n\t\t\tjustifyContent: 'flex-end',\n\t\t},\n\t}));\n\nconst OptionsSelection = (props) => {\n\tconst {open, handleDrawerClose, handleViewMapClick} = props;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<Drawer\n\t\t\t\tclassName={classes.drawer}\n\t\t\t\tvariant=\"persistent\"\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={open}\n\t\t\t\tclasses={{ paper: classes.drawerPaper }}\n\t\t\t>\n\t\t\t\t<div className={classes.drawerHeader}>\n\t\t\t\t\t<Tooltip title=\"Close drawer\">\n\t\t\t\t\t\t<IconButton className={classes.menuButton} aria-label=\"close drawer\" onClick={handleDrawerClose}>\n\t\t\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<Divider />\n\n\t\t\t\t<ElementMenu />\n\t\t\t\t<DateRange />\n\n\t\t\t\t<p>Area selection - bounding box, state, drag rectangle, etc.</p>\n\t\t\t\t<Tooltip title=\"view map\">\n\t\t\t\t\t<Button variant=\"outlined\" size=\"medium\" className={classes.submitButton} onClick={handleViewMapClick}>\n\t\t\t\t\t\tView Map\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default OptionsSelection;"]},"metadata":{},"sourceType":"module"}