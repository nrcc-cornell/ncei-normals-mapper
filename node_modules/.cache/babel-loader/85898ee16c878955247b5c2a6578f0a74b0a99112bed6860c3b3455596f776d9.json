{"ast":null,"code":"import _defineProperty from\"/Users/keith/git/ncei-normals-mapper/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/Users/keith/git/ncei-normals-mapper/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useContext}from'react';import TextField from'@mui/material/TextField';import MenuItem from'@mui/material/MenuItem';import{makeStyles}from'@mui/styles';import InputParamsContext from'./InputParamsContext';import{months}from'../utilities/constants';// This component was modified from the original to only allow month selection\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{menuitem:{paddingTop:\"1px\",paddingBottom:\"1px\"}};});var RenderDate=function RenderDate(props){var dateLegend=props.dateLegend,dateParam=props.dateParam,id=props.id;var inputContext=useContext(InputParamsContext);var _inputContext$inputPa=inputContext.inputParams[dateParam==='date'?'edate':dateParam].split(\"-\"),_inputContext$inputPa2=_slicedToArray(_inputContext$inputPa,2),initMonth=_inputContext$inputPa2[1];var _useState=useState(initMonth),_useState2=_slicedToArray(_useState,2),selectMonth=_useState2[0],setSelectMonth=_useState2[1];var classes=useStyles();var updateDate=function updateDate(newMonth){var newdate=[\"1991\",newMonth].join(\"-\");if(dateParam==='date'){inputContext.updateInputParams({sdate:newdate,edate:newdate});}else{inputContext.updateInputParams(_defineProperty({},dateParam,newdate));}};var handleChangeMonth=function handleChangeMonth(){return function(event){var newMonth=event.target.value;setSelectMonth(newMonth);updateDate(newMonth);};};var serialMonthOptions=function serialMonthOptions(){return months.map(function(option,i){return/*#__PURE__*/_jsx(MenuItem,{className:classes.menuitem,value:(\"0\"+(i+1)).slice(-2),children:option},\"m\"+i);});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(TextField,{select:true,value:selectMonth,label:dateLegend,id:id,onChange:handleChangeMonth(),margin:\"dense\",variant:\"outlined\",SelectProps:{native:false},inputProps:{\"id\":id},children:serialMonthOptions()})});};export default RenderDate;","map":{"version":3,"names":["React","useState","useContext","TextField","MenuItem","makeStyles","InputParamsContext","months","jsx","_jsx","Fragment","_Fragment","useStyles","theme","menuitem","paddingTop","paddingBottom","RenderDate","props","dateLegend","dateParam","id","inputContext","_inputContext$inputPa","inputParams","split","_inputContext$inputPa2","_slicedToArray","initMonth","_useState","_useState2","selectMonth","setSelectMonth","classes","updateDate","newMonth","newdate","join","updateInputParams","sdate","edate","_defineProperty","handleChangeMonth","event","target","value","serialMonthOptions","map","option","i","className","slice","children","select","label","onChange","margin","variant","SelectProps","native","inputProps"],"sources":["/Users/keith/git/ncei-normals-mapper/src/components/RenderDate.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport { makeStyles } from '@mui/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { months } from '../utilities/constants';\n\n// This component was modified from the original to only allow month selection\n\nconst useStyles = makeStyles((theme) => ({\n\tmenuitem: {\n\t\tpaddingTop: \"1px\",\n\t\tpaddingBottom: \"1px\",\n\t},\n}));\n\nconst RenderDate = (props) => {\n\tconst { dateLegend, dateParam, id } = props;\n\tconst inputContext = useContext(InputParamsContext);\n\tconst [, initMonth] = inputContext.inputParams[dateParam === 'date' ? 'edate' : dateParam].split(\"-\");\n\tconst [selectMonth, setSelectMonth] = useState(initMonth);\n\tconst classes = useStyles();\n\n\tconst updateDate = (newMonth) => {\n\t\tconst newdate = [\"1991\", newMonth].join(\"-\");\n\t\tif (dateParam === 'date') {\n\t\t\tinputContext.updateInputParams({sdate:newdate, edate:newdate});\n\t\t} else {\n\t\t\tinputContext.updateInputParams({[dateParam]:newdate});\n\t\t}\n\t};\n\t\n\tconst handleChangeMonth = () => event => {\n\t\tconst newMonth = event.target.value;\n\t\tsetSelectMonth(newMonth);\n\t\tupdateDate(newMonth);\n\t};\n\n\tconst serialMonthOptions = () => {\n\t\treturn (\n\t\t\tmonths.map((option,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem \n\t\t\t\t\t\tkey={\"m\"+i} \n\t\t\t\t\t\tclassName={classes.menuitem}\n\t\t\t\t\t\tvalue={(\"0\" + (i+1)).slice(-2)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t)\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n  \t\t\t<TextField\n\t\t\t\tselect\n\t\t\t\tvalue={selectMonth}\n\t\t\t\tlabel={dateLegend}\n\t\t\t\tid={id}\n\t\t\t\tonChange={handleChangeMonth()}\n\t\t\t\tmargin=\"dense\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\tinputProps={{ \"id\":id }}\n\t\t\t>\n\t\t\t\t{serialMonthOptions()}\n\t\t\t</TextField>\n\t\t</>\n\t)\n}\nexport default RenderDate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}