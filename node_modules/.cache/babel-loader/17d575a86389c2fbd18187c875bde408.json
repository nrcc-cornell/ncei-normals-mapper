{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Banner from './Banner';\nimport OptionsSelection from './OptionsSelection';\nimport GetImage from './GetImage';\nimport InputParamsContext from './InputParamsContext';\nconst drawerWidth = 400;\nconst useStyles = makeStyles(theme => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: 0\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: drawerWidth\n  }\n}));\nvar default_params = {\n  \"grid\": \"nrcc-nn\",\n  \"state\": \"ME,WV\",\n  \"sdate\": \"2020-01-01\",\n  \"edate\": \"2020-12-31\",\n  \"elems\": [{\n    \"name\": \"maxt\",\n    \"interval\": [0, 1],\n    \"duration\": 1,\n    \"reduce\": \"mean\"\n  }],\n  \"output\": \"gif\"\n};\n\nconst Main = () => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [viewMap, setViewMap] = useState(false);\n  const [inputParams, setInputParams] = useState(default_params);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleViewMapClick = () => {\n    setViewMap(true);\n  };\n\n  const updateInputParams = (param, value) => {\n    console.log(param + \" \" + value);\n    setViewMap(false);\n    const newParams = { ...inputParams,\n      [param]: value\n    };\n    setInputParams(newParams);\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputParamsContext.Provider, {\n    value: {\n      inputParams,\n      updateInputParams\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Banner, {\n        open: open,\n        handleDrawerOpen: handleDrawerOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(OptionsSelection, {\n          open: open,\n          handleDrawerClose: handleDrawerClose,\n          handleViewMapClick: handleViewMapClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.content, {\n            [classes.contentShift]: open\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.drawerHeader\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), viewMap && /*#__PURE__*/_jsxDEV(GetImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), !viewMap && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"... Introductory text here ... Set options and click \\\"View Map\\\" button.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"+8pmyOWr4F2DJrSSYk7TY76vsg0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/Main.js"],"names":["React","useState","clsx","makeStyles","Banner","OptionsSelection","GetImage","InputParamsContext","drawerWidth","useStyles","theme","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","default_params","Main","classes","open","setOpen","viewMap","setViewMap","inputParams","setInputParams","handleDrawerOpen","handleDrawerClose","handleViewMapClick","updateInputParams","param","value","console","log","newParams"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Banner from './Banner';\nimport OptionsSelection from './OptionsSelection';\nimport GetImage from './GetImage';\nimport InputParamsContext from './InputParamsContext';\n\nconst drawerWidth = 400;\n\nconst useStyles = makeStyles((theme) => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: 0,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: drawerWidth,\n  },\n}));\n\nvar default_params = {\n  \"grid\":\"nrcc-nn\",\n  \"state\":\"ME,WV\",\n  \"sdate\":\"2020-01-01\",\n  \"edate\":\"2020-12-31\",\n  \"elems\":[{\n    \"name\":\"maxt\",\n    \"interval\":[0,1],\n    \"duration\":1,\n    \"reduce\":\"mean\"\n  }],\n  \"output\":\"gif\"\n};\n\nconst Main = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [viewMap, setViewMap] = useState(false);\n  const [inputParams, setInputParams] = useState(default_params)\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleViewMapClick = () => {\n    setViewMap(true);\n  };\n\n  const updateInputParams = (param, value) => {\n    console.log(param + \" \" + value)\n    setViewMap(false);\n    const newParams = {...inputParams, [param]:value}\n    setInputParams(newParams);\n  }\n\n  return (\n    <InputParamsContext.Provider value={{ inputParams, updateInputParams }}>\n    <>\n      <Banner\n        open={open}\n        handleDrawerOpen={handleDrawerOpen}\n      />\n \n      <nav>\n        <OptionsSelection\n          open={open}\n          handleDrawerClose={handleDrawerClose}\n          handleViewMapClick={handleViewMapClick}\n        />\n      </nav>\n\n      <main>\n        <div className={clsx(classes.content, { [classes.contentShift]: open, })}>\n          <div className={classes.drawerHeader}  />\n          {viewMap &&\n            <GetImage />\n          }\n          {!viewMap &&\n            <>\n              <p>... Introductory text here ... Set options and click \"View Map\" button.</p>\n            </>\n          }\n        </div>\n      </main>\n    </>\n    </InputParamsContext.Provider>\n  )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}