{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/MapTitle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { elements } from '../utilities/constants';\nconst useStyles = makeStyles(theme => ({\n  listContainer: {\n    border: \"1pt solid midnightblue\"\n  }\n}));\n\nconst MapTitle = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext);\n  const classes = useStyles();\n  const selectedElem = inputContext.inputParams.elems[0].name;\n  const elemInfo = elements.find(elements => elements.name === selectedElem);\n  const selectedDuration = inputContext.inputParams.elems[0].duration;\n  const selectedInterval = inputContext.inputParams.elems[0].interval.length === 3 ? 'Daily' : 'Monthly';\n  const selectedGrid = inputContext.inputParams.grid;\n  const selectedStart = inputContext.inputParams.sdate.slice(5);\n  const selectedDate = selectedInterval === 'Monthly' ? inputContext.inputParams.edate.slice(5, 7) : inputContext.inputParams.edate.slice(5);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [selectedDuration === 1 && selectedInterval + \" \", elemInfo.menuName, !(selectedInterval === 'Daily' && selectedDuration === 1) && ' (' + elemInfo.reduce + \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), selectedDuration > 1 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Interval: \", selectedStart, \"-\", selectedDate, \" (\", selectedDuration, \" days)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), selectedDuration === 1 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Date: \", selectedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"Grid: \", selectedGrid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapTitle, \"A5NfbII/secXg5jaae97OoXQ1KI=\", false, function () {\n  return [useStyles];\n});\n\n_c = MapTitle;\nexport default MapTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapTitle\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/MapTitle.js"],"names":["React","useContext","Typography","makeStyles","InputParamsContext","elements","useStyles","theme","listContainer","border","MapTitle","inputContext","classes","selectedElem","inputParams","elems","name","elemInfo","find","selectedDuration","duration","selectedInterval","interval","length","selectedGrid","grid","selectedStart","sdate","slice","selectedDate","edate","menuName","reduce"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACxCC,EAAAA,aAAa,EAAE;AACdC,IAAAA,MAAM,EAAE;AADM;AADyB,CAAZ,CAAD,CAA5B;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAMC,YAAY,GAAGV,UAAU,CAACG,kBAAD,CAA/B;AACG,QAAMQ,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAMO,YAAY,GAAGF,YAAY,CAACG,WAAb,CAAyBC,KAAzB,CAA+B,CAA/B,EAAkCC,IAAvD;AACA,QAAMC,QAAQ,GAAGZ,QAAQ,CAACa,IAAT,CAAeb,QAAD,IAAcA,QAAQ,CAACW,IAAT,KAAkBH,YAA9C,CAAjB;AACA,QAAMM,gBAAgB,GAAGR,YAAY,CAACG,WAAb,CAAyBC,KAAzB,CAA+B,CAA/B,EAAkCK,QAA3D;AACA,QAAMC,gBAAgB,GAAGV,YAAY,CAACG,WAAb,CAAyBC,KAAzB,CAA+B,CAA/B,EAAkCO,QAAlC,CAA2CC,MAA3C,KAAsD,CAAtD,GAA0D,OAA1D,GAAoE,SAA7F;AACA,QAAMC,YAAY,GAAIb,YAAY,CAACG,WAAb,CAAyBW,IAA/C;AACA,QAAMC,aAAa,GAAGf,YAAY,CAACG,WAAb,CAAyBa,KAAzB,CAA+BC,KAA/B,CAAqC,CAArC,CAAtB;AACA,QAAMC,YAAY,GAAGR,gBAAgB,KAAK,SAArB,GAAiCV,YAAY,CAACG,WAAb,CAAyBgB,KAAzB,CAA+BF,KAA/B,CAAqC,CAArC,EAAuC,CAAvC,CAAjC,GAA6EjB,YAAY,CAACG,WAAb,CAAyBgB,KAAzB,CAA+BF,KAA/B,CAAqC,CAArC,CAAlG;AAGH,sBACC;AAAA,4BACU,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,iBACKT,gBAAgB,KAAK,CAArB,IAA0BE,gBAAgB,GAAC,GADhD,EAEKJ,QAAQ,CAACc,QAFd,EAGK,EAAEV,gBAAgB,KAAK,OAArB,IAAgCF,gBAAgB,KAAK,CAAvD,KAA6D,OAAKF,QAAQ,CAACe,MAAd,GAAqB,GAHvF;AAAA;AAAA;AAAA;AAAA;AAAA,YADV,EAMWb,gBAAgB,GAAG,CAAnB,iBACG,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA,+BACcO,aADd,OAC8BG,YAD9B,QAC8CV,gBAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,YAPd,EAWWA,gBAAgB,KAAK,CAArB,iBACG,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA,2BACWU,YADX;AAAA;AAAA;AAAA;AAAA;AAAA,YAZd,eAgBU,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,YAAY,MAA5C;AAAA,2BACWL,YADX;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBV;AAAA,kBADD;AAsBA,CAnCD;;GAAMd,Q;UAEcJ,S;;;KAFdI,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, {useContext} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nimport { elements } from '../utilities/constants';\n\nconst useStyles = makeStyles((theme) => ({\n\tlistContainer: {\n\t\tborder: \"1pt solid midnightblue\",\n\t},\n}));\n\nconst MapTitle = () => {\n\tconst inputContext = useContext(InputParamsContext);\n    const classes = useStyles();\n    \n    const selectedElem = inputContext.inputParams.elems[0].name;\n    const elemInfo = elements.find((elements) => elements.name === selectedElem);\n    const selectedDuration = inputContext.inputParams.elems[0].duration;\n    const selectedInterval = inputContext.inputParams.elems[0].interval.length === 3 ? 'Daily' : 'Monthly';\n    const selectedGrid =  inputContext.inputParams.grid;\n    const selectedStart = inputContext.inputParams.sdate.slice(5)\n    const selectedDate = selectedInterval === 'Monthly' ? inputContext.inputParams.edate.slice(5,7) : inputContext.inputParams.edate.slice(5);\n\n\n\treturn (\n\t\t<>\n            <Typography variant=\"h6\">\n                {selectedDuration === 1 && selectedInterval+\" \"}\n                {elemInfo.menuName} \n                {!(selectedInterval === 'Daily' && selectedDuration === 1) && ' ('+elemInfo.reduce+\")\"}\n            </Typography>\n            {selectedDuration > 1 &&\n                <Typography variant=\"subtitle1\">\n                   Interval: {selectedStart}-{selectedDate} ({selectedDuration} days)\n                </Typography>\n            }\n            {selectedDuration === 1 &&\n                <Typography variant=\"subtitle1\">\n                    Date: {selectedDate}\n                </Typography>\n            }\n            <Typography variant=\"subtitle1\" gutterBottom>\n                Grid: {selectedGrid}\n            </Typography>\n\t\t</>\n\t);\n}\n\nexport default MapTitle;"]},"metadata":{},"sourceType":"module"}