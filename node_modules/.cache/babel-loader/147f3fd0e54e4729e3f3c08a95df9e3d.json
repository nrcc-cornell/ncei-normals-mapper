{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/DateRange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputParamsContext from './InputParamsContext';\nconst monthChoices = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst dayMonths30 = ['04', '06', '09', '11'];\nconst useStyles = makeStyles(theme => ({\n  dateRangeContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    borderTop: \"0\",\n    padding: \"1em 1em\"\n  },\n  filterLabel: {\n    display: \"inline-block\",\n    lineHeight: \"4.4em\",\n    verticalAlign: \"bottom\",\n    marginRight: \"0.25em\",\n    marginLeft: \"0.25em\"\n  },\n  filterGroup: {\n    display: \"inline-block\",\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: \"4px\",\n    padding: \"0 0.6em\",\n    margin: \"0.6em 0 0.6em 0\"\n  },\n  filterGroupLegend: {\n    fontSize: \"95%\"\n  },\n  textfield: {\n    marginRight: \"0.5em\"\n  },\n  menuitem: {\n    paddingTop: \"1px\",\n    paddingBottom: \"1px\"\n  }\n}));\n\nconst DateRange = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext);\n  const [syr, initSmonth, initSday] = inputContext.inputParams.sdate.split(\"-\");\n  const [eyr, initEmonth, initEday] = inputContext.inputParams.edate.split(\"-\");\n  const [fromFilterMonth, setFromFilterMonth] = useState(initSmonth);\n  const [fromFilterDay, setFromFilterDay] = useState(initSday);\n  const [toFilterMonth, setToFilterMonth] = useState(initEmonth);\n  const [toFilterDay, setToFilterDay] = useState(initEday);\n  const classes = useStyles();\n\n  const updateDate = (se, newMonth, newDay) => {\n    if (se === 'sdate' || se === 'edate') {\n      const newdate = [\"2020\", newMonth, newDay].join(\"-\");\n      inputContext.updateInputParams(se, newdate);\n    }\n  };\n\n  const handleChangeMonth = name => event => {\n    const newMonth = event.target.value;\n\n    if (name === 'fromFilterMonth') {\n      setFromFilterMonth(newMonth);\n\n      if (fromFilterDay === '31' && dayMonths30.includes(newMonth)) {\n        setFromFilterDay('30');\n        updateDate('sdate', newMonth, '30');\n      } else if (fromFilterDay >= '30' && event.target.value === '02') {\n        setFromFilterDay('29');\n        updateDate('sdate', newMonth, '29');\n      } else {\n        updateDate('sdate', newMonth, fromFilterDay);\n      }\n\n      ;\n    } else if (name === 'toFilterMonth') {\n      setToFilterMonth(newMonth);\n\n      if (toFilterDay === '31' && dayMonths30.includes(newMonth)) {\n        setToFilterDay('30');\n        updateDate('edate', newMonth, '30');\n      } else if (toFilterDay >= '30' && event.target.value === '02') {\n        setToFilterDay('29');\n        updateDate('edate', newMonth, '29');\n      } else {\n        updateDate('edate', newMonth, toFilterDay);\n      }\n    }\n  };\n\n  const handleChangeDay = name => event => {\n    const newDay = event.target.value;\n\n    if (name === 'fromFilterDay') {\n      setFromFilterDay(newDay);\n      updateDate('sdate', fromFilterMonth, newDay);\n    } else if (name === 'toFilterDay') {\n      setToFilterDay(newDay);\n      updateDate('edate', toFilterMonth, newDay);\n    }\n  };\n\n  const serialMonthOptions = fromto => {\n    return monthChoices.map((option, i) => {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        className: classes.menuitem,\n        value: (\"0\" + (i + 1)).slice(-2),\n        children: option\n      }, \"m\" + fromto + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }, this);\n    });\n  };\n\n  const serialDayOptions = fromto => {\n    let arrlen = 31;\n\n    if (fromto === 'from' && dayMonths30.includes(fromFilterMonth) || fromto === 'to' && dayMonths30.includes(toFilterMonth)) {\n      arrlen = 30;\n    } else if (fromto === 'from' && fromFilterMonth === '02' || fromto === 'to' && toFilterMonth === '02') {\n      arrlen = 29;\n    }\n\n    return Array.from({\n      length: arrlen\n    }, (v, k) => k + 1).map((option, i) => {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        className: classes.menuitem,\n        value: (\"0\" + (i + 1)).slice(-2),\n        children: option\n      }, \"d\" + fromto + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }, this);\n    });\n  };\n\n  const [value, setValue] = React.useState('day');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dateRangeContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Date selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Date type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"date type\",\n        row: true,\n        name: \"gender1\",\n        value: value,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"day\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 48\n          }, this),\n          label: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"month\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 50\n          }, this),\n          label: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"interval\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 53\n          }, this),\n          label: \"Interval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: classes.filterGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        className: classes.filterGroupLegend,\n        children: \"Start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        id: \"fromFilterMonth\",\n        value: fromFilterMonth,\n        onChange: handleChangeMonth('fromFilterMonth'),\n        className: classes.textfield,\n        margin: \"dense\",\n        SelectProps: {\n          native: false\n        },\n        children: serialMonthOptions('from')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        id: \"fromFilterDay\",\n        value: fromFilterDay,\n        onChange: handleChangeDay('fromFilterDay'),\n        margin: \"dense\",\n        SelectProps: {\n          native: false\n        },\n        children: serialDayOptions('from')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.filterLabel,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: classes.filterGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        className: classes.filterGroupLegend,\n        children: \"End date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        id: \"toFilterMonth\",\n        value: toFilterMonth,\n        onChange: handleChangeMonth('toFilterMonth'),\n        className: classes.textfield,\n        margin: \"dense\",\n        SelectProps: {\n          native: false\n        },\n        children: serialMonthOptions('to')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        id: \"toFilterDay\",\n        value: toFilterDay,\n        onChange: handleChangeDay('toFilterDay'),\n        margin: \"dense\",\n        SelectProps: {\n          native: false\n        },\n        children: serialDayOptions('to')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DateRange, \"OlBn9aLtrkHR1/YGcuiV3QlTmQU=\", false, function () {\n  return [useStyles];\n});\n\n_c = DateRange;\nexport default DateRange;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateRange\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/DateRange.js"],"names":["React","useState","useContext","TextField","Typography","MenuItem","makeStyles","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","InputParamsContext","monthChoices","dayMonths30","useStyles","theme","dateRangeContainer","borderLeft","borderRight","borderBottom","borderTop","padding","filterLabel","display","lineHeight","verticalAlign","marginRight","marginLeft","filterGroup","border","borderRadius","margin","filterGroupLegend","fontSize","textfield","menuitem","paddingTop","paddingBottom","DateRange","inputContext","syr","initSmonth","initSday","inputParams","sdate","split","eyr","initEmonth","initEday","edate","fromFilterMonth","setFromFilterMonth","fromFilterDay","setFromFilterDay","toFilterMonth","setToFilterMonth","toFilterDay","setToFilterDay","classes","updateDate","se","newMonth","newDay","newdate","join","updateInputParams","handleChangeMonth","name","event","target","value","includes","handleChangeDay","serialMonthOptions","fromto","map","option","i","slice","serialDayOptions","arrlen","Array","from","length","v","k","setValue","handleChange","native"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputParamsContext from './InputParamsContext';\n\nconst monthChoices = ['January','February','March','April','May','June','July','August','September','October','November','December'];\nconst dayMonths30 = ['04','06','09','11'];\n\nconst useStyles = makeStyles((theme) => ({\n\tdateRangeContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tborderTop: \"0\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tfilterLabel: {\n\t\tdisplay: \"inline-block\",\n\t\tlineHeight: \"4.4em\",\n\t\tverticalAlign: \"bottom\",\n\t\tmarginRight: \"0.25em\",\n\t\tmarginLeft: \"0.25em\",\n\t},\n\tfilterGroup: {\n\t\tdisplay: \"inline-block\",\n\t\tborder: \"1px solid rgba(0, 0, 0, 0.23)\",\n\t\tborderRadius: \"4px\",\n\t\tpadding: \"0 0.6em\",\n\t\tmargin: \"0.6em 0 0.6em 0\",\n\t},\n\tfilterGroupLegend: {\n\t\tfontSize: \"95%\",\n\t},\n\ttextfield: {\n    marginRight: \"0.5em\",\n\t},\n\tmenuitem: {\n\t\tpaddingTop: \"1px\",\n\t\tpaddingBottom: \"1px\",\n\t}\n}));\n\nconst DateRange = () => {\n\tconst inputContext = useContext(InputParamsContext);\n\tconst [syr, initSmonth, initSday] = inputContext.inputParams.sdate.split(\"-\");\n\tconst [eyr, initEmonth, initEday] = inputContext.inputParams.edate.split(\"-\");\n\tconst [fromFilterMonth, setFromFilterMonth] = useState(initSmonth);\n\tconst [fromFilterDay, setFromFilterDay] = useState(initSday);\n\tconst [toFilterMonth, setToFilterMonth] = useState(initEmonth);\n\tconst [toFilterDay, setToFilterDay] = useState(initEday);\n\tconst classes = useStyles();\n\n\tconst updateDate = (se, newMonth, newDay) => {\n\t\tif (se === 'sdate' || se === 'edate') {\n\t\t\tconst newdate = [\"2020\", newMonth, newDay].join(\"-\");\n\t\t\tinputContext.updateInputParams(se, newdate);\t\n\t\t}\n\t};\n\t\n\tconst handleChangeMonth = (name) => event => {\n\t\tconst newMonth = event.target.value;\n\t\tif (name === 'fromFilterMonth') {\n\t\t\tsetFromFilterMonth(newMonth);\n\t\t\tif (fromFilterDay === '31' && dayMonths30.includes(newMonth)) {\n\t\t\t\tsetFromFilterDay('30');\n\t\t\t\tupdateDate('sdate', newMonth, '30');\n\t\t\t} else if (fromFilterDay >= '30' && event.target.value === '02') {\n\t\t\t\tsetFromFilterDay('29');\n\t\t\t\tupdateDate('sdate', newMonth, '29');\n\t\t\t} else {\n\t\t\t\tupdateDate('sdate', newMonth, fromFilterDay);\n\t\t\t};\n\t\t} else if (name === 'toFilterMonth') {\n\t\t\tsetToFilterMonth(newMonth)\n\t\t\tif (toFilterDay === '31' && dayMonths30.includes(newMonth)) {\n\t\t\t\tsetToFilterDay('30');\n\t\t\t\tupdateDate('edate', newMonth, '30');\n\t\t\t} else if (toFilterDay >= '30' && event.target.value === '02') {\n\t\t\t\tsetToFilterDay('29');\n\t\t\t\tupdateDate('edate', newMonth, '29');\n\t\t\t} else {\n\t\t\t\tupdateDate('edate', newMonth, toFilterDay);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleChangeDay = (name) => event => {\n\t\tconst newDay = event.target.value;\n\t\tif (name === 'fromFilterDay') {\n\t\t\tsetFromFilterDay(newDay);\n\t\t\tupdateDate('sdate', fromFilterMonth, newDay);\n\t\t} else if (name === 'toFilterDay') {\n\t\t\tsetToFilterDay(newDay);\n\t\t\tupdateDate('edate', toFilterMonth, newDay);\n\t\t}\n\t};\n\n\tconst serialMonthOptions = (fromto) => {\n    return (\n      monthChoices.map((option,i) => {\n        return (\n\t\t\t\t\t<MenuItem \n\t\t\t\t\t\tkey={\"m\"+fromto+i} \n\t\t\t\t\t\tclassName={classes.menuitem}\n\t\t\t\t\t\tvalue={(\"0\" + (i+1)).slice(-2)}\n\t\t\t\t\t>\n            {option}\n          </MenuItem>\n        )\n      })\n    );\n\t};\t\n\t\n\tconst serialDayOptions = (fromto) => {\n\t\tlet arrlen = 31;\n\t\tif ((fromto === 'from' && dayMonths30.includes(fromFilterMonth)) || (fromto === 'to' && dayMonths30.includes(toFilterMonth)) ) {\n\t\t\tarrlen = 30;\n\t\t} else if ((fromto === 'from' && fromFilterMonth === '02') || (fromto === 'to' && toFilterMonth === '02')) {\n\t\t\tarrlen = 29;\n\t\t}\n    return (\n      Array.from({length: arrlen}, (v, k) => k+1).map((option,i) => {\n        return (\n\t\t\t\t\t<MenuItem \n\t\t\t\t\t\tkey={\"d\"+fromto+i} \n\t\t\t\t\t\tclassName={classes.menuitem}\n\t\t\t\t\t\tvalue={(\"0\" + (i+1)).slice(-2)}\n\t\t\t\t\t>\n            {option}\n          </MenuItem>\n        )\n      })\n    );\n  };\n\n  const [value, setValue] = React.useState('day');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\t};\n\t\n\treturn (\n\t\t<div className={classes.dateRangeContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tDate selection\n\t\t\t</Typography>\n\n\n\n\n\n\n\n  \n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Date type</FormLabel>\n      <RadioGroup aria-label=\"date type\" row name=\"gender1\" value={value} onChange={handleChange}>\n        <FormControlLabel value=\"day\" control={<Radio />} label=\"Day\" />\n        <FormControlLabel value=\"month\" control={<Radio />} label=\"Month\" />\n        <FormControlLabel value=\"interval\" control={<Radio />} label=\"Interval\" />\n      </RadioGroup>\n    </FormControl>\n  \n\n\n\n\n\t\t\t<fieldset className={classes.filterGroup}>\n\t\t\t\t<legend className={classes.filterGroupLegend}>Start date</legend>\n\t\t\t\t<TextField\n\t\t\t\t\tselect\n\t\t\t\t\tid=\"fromFilterMonth\"\n\t\t\t\t\tvalue={fromFilterMonth}\n\t\t\t\t\tonChange={handleChangeMonth('fromFilterMonth')}\n\t\t\t\t\tclassName={classes.textfield}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\t>\n\t\t\t\t\t{serialMonthOptions('from')}\n\t\t\t\t</TextField>\n\t\t\t\t<TextField\n\t\t\t\t\tselect\n\t\t\t\t\tid=\"fromFilterDay\"\n\t\t\t\t\tvalue={fromFilterDay}\n\t\t\t\t\tonChange={handleChangeDay('fromFilterDay')}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{serialDayOptions('from')}\n\t\t\t\t</TextField>\n\t\t\t</fieldset>\n\t\t\t<Typography className={classes.filterLabel}>\n\t\t\t\t -\n\t\t\t</Typography>\n\t\t\t<fieldset className={classes.filterGroup}>\n\t\t\t\t<legend className={classes.filterGroupLegend}>End date</legend>\n\t\t\t\t<TextField\n\t\t\t\t\tselect\n\t\t\t\t\tid=\"toFilterMonth\"\n\t\t\t\t\tvalue={toFilterMonth}\n\t\t\t\t\tonChange={handleChangeMonth('toFilterMonth')}\n\t\t\t\t\tclassName={classes.textfield}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{serialMonthOptions('to')}\n\t\t\t\t</TextField>\n\t\t\t\t<TextField\n\t\t\t\t\tselect\n\t\t\t\t\tid=\"toFilterDay\"\n\t\t\t\t\tvalue={toFilterDay}\n\t\t\t\t\tonChange={handleChangeDay('toFilterDay')}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tSelectProps={{ native: false }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{serialDayOptions('to')}\n\t\t\t\t</TextField>\n\t\t\t</fieldset>\n\t\t</div>\n\t)\n}\n\nexport default DateRange;"]},"metadata":{},"sourceType":"module"}