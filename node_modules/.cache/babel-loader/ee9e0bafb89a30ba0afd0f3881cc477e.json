{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kle1/progs/React/normals-viewer/src/components/AreaSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\nconst useStyles = makeStyles(theme => ({\n  areaContainer: {\n    borderLeft: \"1pt solid midnightblue\",\n    borderRight: \"1pt solid midnightblue\",\n    borderBottom: \"1pt solid midnightblue\",\n    borderTop: \"0\",\n    padding: \"1em 1em\"\n  },\n  stateInputLabel: {\n    color: \"rgba(0,0,0,0.87)\",\n    fontSie: \"18px\"\n  }\n}));\n\nconst AreaSelect = () => {\n  _s();\n\n  const inputContext = useContext(InputParamsContext);\n  const [postals, setPostals] = useState(inputContext.inputParams.state);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    const newPostals = event.target.value;\n    setPostals(newPostals);\n    inputContext.updateInputParams({\n      state: newPostals\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.areaContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Select area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bounding box, region, state, drag rectangle, etc.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"stateInput\",\n        className: classes.stateInputLabel,\n        children: \"State(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        value: postals,\n        id: \"stateInput\",\n        label: \"State(s)\",\n        defaultValue: postals,\n        margin: \"dense\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        id: \"stateInput\",\n        children: \"Enter one or more state postal abbreviations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AreaSelect, \"m8Knvuwx1gLI12jvw85RrGzCeeo=\", false, function () {\n  return [useStyles];\n});\n\n_c = AreaSelect;\nexport default AreaSelect;\n/* <FormControl variant=\"outlined\">\n        <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\n        <OutlinedInput id=\"component-outlined\" value={name}  label=\"Name\" />\n\t  </FormControl>\n\t  */\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaSelect\");","map":{"version":3,"sources":["/Users/kle1/progs/React/normals-viewer/src/components/AreaSelect.js"],"names":["React","useState","useContext","Typography","OutlinedInput","FormHelperText","FormControl","InputLabel","makeStyles","InputParamsContext","useStyles","theme","areaContainer","borderLeft","borderRight","borderBottom","borderTop","padding","stateInputLabel","color","fontSie","AreaSelect","inputContext","postals","setPostals","inputParams","state","classes","handleChange","event","newPostals","target","value","updateInputParams"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACxCC,EAAAA,aAAa,EAAE;AACdC,IAAAA,UAAU,EAAE,wBADE;AAEdC,IAAAA,WAAW,EAAE,wBAFC;AAGdC,IAAAA,YAAY,EAAE,wBAHA;AAIdC,IAAAA,SAAS,EAAE,GAJG;AAKdC,IAAAA,OAAO,EAAE;AALK,GADyB;AAQxCC,EAAAA,eAAe,EAAE;AAChBC,IAAAA,KAAK,EAAE,kBADS;AAEhBC,IAAAA,OAAO,EAAE;AAFO;AARuB,CAAZ,CAAD,CAA5B;;AAcA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAMC,YAAY,GAAGpB,UAAU,CAACO,kBAAD,CAA/B;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAACqB,YAAY,CAACG,WAAb,CAAyBC,KAA1B,CAAtC;AACA,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;;AAEA,QAAMkB,YAAY,GAAIC,KAAD,IAAW;AAC/B,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAhC;AACAR,IAAAA,UAAU,CAACM,UAAD,CAAV;AACAR,IAAAA,YAAY,CAACW,iBAAb,CAA+B;AAACP,MAAAA,KAAK,EAACI;AAAP,KAA/B;AACA,GAJD;;AAMA,sBACC;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACf,aAAxB;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAMC,QAAC,WAAD;AAAa,MAAA,OAAO,EAAC,UAArB;AAAA,8BACC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,YAApB;AAAiC,QAAA,SAAS,EAAEe,OAAO,CAACT,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,aAAD;AACC,QAAA,KAAK,EAAEK,OADR;AAEC,QAAA,EAAE,EAAC,YAFJ;AAGC,QAAA,KAAK,EAAC,UAHP;AAIC,QAAA,YAAY,EAAEA,OAJf;AAKC,QAAA,MAAM,EAAC,OALR;AAMC,QAAA,QAAQ,EAAEK;AANX;AAAA;AAAA;AAAA;AAAA,cAFD,eAUC,QAAC,cAAD;AAAgB,QAAA,EAAE,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVD;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAwBA,CAnCD;;GAAMP,U;UAGWX,S;;;KAHXW,U;AAqCN,eAAeA,UAAf;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputParamsContext from './InputParamsContext';\n\nconst useStyles = makeStyles((theme) => ({\n\tareaContainer: {\n\t\tborderLeft: \"1pt solid midnightblue\",\n\t\tborderRight: \"1pt solid midnightblue\",\n\t\tborderBottom: \"1pt solid midnightblue\",\n\t\tborderTop: \"0\",\n\t\tpadding: \"1em 1em\",\n\t},\n\tstateInputLabel: {\n\t\tcolor: \"rgba(0,0,0,0.87)\",\n\t\tfontSie: \"18px\",\n\t},\n}));\n\nconst AreaSelect = () => {\n\tconst inputContext = useContext(InputParamsContext);\n\tconst [postals, setPostals] = useState(inputContext.inputParams.state);\n\tconst classes = useStyles();\n\n\tconst handleChange = (event) => {\n\t\tconst newPostals = event.target.value;\n\t\tsetPostals(newPostals);\n\t\tinputContext.updateInputParams({state:newPostals});\t\n\t};\n\n\treturn (\n\t\t<div className={classes.areaContainer}>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tSelect area\n\t\t\t</Typography>\n\t\t\t<p>Bounding box, region, state, drag rectangle, etc.</p>\n\n\t\t\t<FormControl variant=\"outlined\">\n\t\t\t\t<InputLabel htmlFor=\"stateInput\" className={classes.stateInputLabel}>State(s)</InputLabel>\n\t\t\t\t<OutlinedInput\n\t\t\t\t\tvalue={postals}\n\t\t\t\t\tid=\"stateInput\"\n\t\t\t\t\tlabel=\"State(s)\"\n\t\t\t\t\tdefaultValue={postals}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<FormHelperText id=\"stateInput\">Enter one or more state postal abbreviations</FormHelperText>\n\t\t\t</FormControl>\n\n\n\n\t\t</div>\n\t);\n}\n\nexport default AreaSelect;\n\n/* <FormControl variant=\"outlined\">\n        <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\n        <OutlinedInput id=\"component-outlined\" value={name}  label=\"Name\" />\n\t  </FormControl>\n\t  */"]},"metadata":{},"sourceType":"module"}